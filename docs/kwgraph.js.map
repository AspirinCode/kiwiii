{"version":3,"file":"kwgraph.js","sources":["../src/helper/file.js","../src/store/StoreConnection.js","../src/Loader.js","../src/helper/formatValue.js","../src/component/Component.js","../src/component/Dialog.js","../src/graph/GraphControlBox.js","../src/graph/GraphInteraction.js","../src/graph.js","../src/helper/d3Form.js","../src/helper/d3Scale.js","../src/helper/definition.js","../src/store/IDBStore.js","../src/fetcher/Fetcher.js","../src/fetcher/LocalServer.js","../src/fetcher/Screener.js","../src/fetcher/ScreenerTestStub.js","../src/component/Header.js","../src/helper/dataStructure.js","../src/helper/parser.js","../src/helper/image.js","../src/graph/GraphForce.js","../src/graph/GraphComponent.js","../src/graph/communityDetection.js"],"sourcesContent":["\n/** @module file */\n\nimport pako from 'pako';\n\n\nfunction readFile(file, sizeLimit, blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const truncated = sizeLimit ? file.slice(0, sizeLimit) : file;\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    if (blob) {\n      reader.readAsArrayBuffer(truncated);\n    } else {\n      reader.readAsText(truncated);\n    }\n  });\n}\n\n\nfunction parseJSON(data, compressed) {\n  const text = compressed ? pako.inflate(data, {to: 'string'}) : data;\n  return JSON.parse(text);\n}\n\n\nfunction loadJSON(file) {\n  const compressed = file.name.endsWith('.gz');\n  return readFile(file, false, compressed)\n    .then(data => parseJSON(data, compressed));\n}\n\n\nfunction fetchJSON(url) {\n  const decoded = decodeURIComponent(url);\n  const compressed = decoded.endsWith('.gz');\n  return fetch(decoded)\n    .then(res => compressed ? res.arrayBuffer() : res.json())\n    .then(data => parseJSON(data, compressed));\n}\n\n\nfunction downloadDataFile(data, name) {\n  try {\n    // cannot hundle large file with dataURI scheme\n    // url = \"data:application/json,\" + encodeURIComponent(JSON.stringify(json))\n    const url = window.URL.createObjectURL(new Blob([data]));\n    const a = document.createElement('a');\n    a.download = name;\n    a.href = url;\n    // a.click() does not work on firefox\n    a.dispatchEvent(new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    }));\n    // window.URL.revokeObjectURL(url) does not work on firefox\n  } catch (e) {\n    // no DOM (unit testing)\n  }\n}\n\n\nfunction downloadJSON(json, name, compress=true) {\n  const str = JSON.stringify(json);\n  const data = compress ? pako.gzip(str) : str;\n  const ext = compress ? '.gz' : '';\n  downloadDataFile(data, `${name}.json${ext}`);\n}\n\n\nexport default {\n  readFile, parseJSON, loadJSON, fetchJSON,\n  downloadDataFile, downloadJSON\n};\n","\nimport {default as def} from '../helper/definition.js';\nimport {default as store} from './IDBStore.js';\nimport {LocalServerActivity, LocalServerChemical} from '../fetcher/LocalServer.js';\nimport {ScreenerFitting, ScreenerRawValue} from '../fetcher/Screener.js';\nimport {ScreenerFittingStub, ScreenerRawValueStub} from '../fetcher/ScreenerTestStub.js';\n\n\n// Global config\n\nconst globalConfig = {\n  \"onLine\": true,\n  \"server\": {},\n  \"templates\": {},\n  \"urlQuery\": {}\n};\n\nwindow.location.search.substring(1).split(\"&\")\n  .map(e => e.split('=')).forEach(e => {\n    globalConfig.urlQuery[e[0]] = e[1];\n  });\n\n\nfunction getGlobalConfig(key) {\n  return globalConfig[key];\n}\n\n\nfunction setGlobalConfig(key, value) {\n  globalConfig[key] = value;\n}\n\n\n// API instances\n\nconst API = new Map(Object.entries({\n  chemical: new LocalServerChemical(),\n  activity: new LocalServerActivity(),\n  screenerrawvalue: new ScreenerRawValue(),\n  screenerfitting: new ScreenerFitting(),\n  screenerrawvaluestub: new ScreenerRawValueStub(),\n  screenerfittingstub: new ScreenerFittingStub()\n}));\n\n\nfunction localChemInstance() {\n  return API.get('chemical');\n}\n\n\nfunction getFetcher(domain) {\n  return API.get(domain);\n}\n\n\nfunction fetcherInstances() {\n  return Array.from(API.values());\n}\n\n\nfunction dataFetcherInstances() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(v);\n  });\n  return res;\n}\n\n\nfunction dataFetcherDomains() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(k);\n  });\n  return res;\n}\n\n\n// API data resource on local IndexedDB\n\nfunction getResources(domains) {\n  return store.getResources().then(rsrcs => {\n    return rsrcs.filter(e => domains.includes(e.domain));\n  });\n}\n\n\nfunction setResources(rsrcs) {\n  return store.putResources(rsrcs);\n}\n\n\nfunction getResourceColumns(domains) {\n  return getResources(domains).then(rsrcs => {\n    return rsrcs.map(rsrc => {\n      return rsrc.columns.map(col => {\n        col.domain = rsrc.domain;\n        col.key = def.dataSourceId(rsrc.domain, rsrc.id, col.key);\n        col.entity = rsrc.entity;\n        if (!col.hasOwnProperty('tags')) col.tags = rsrc.tags;\n        return col;\n      });\n    }).extend();\n  });\n}\n\n\nfunction getDataSourceColumns(domain, ids) {\n  return store.getResources([domain]).then(rsrcs => {\n    return ids.map(d => rsrcs.find(e => e.id === d).columns)\n      .extend();\n  });\n}\n\n\n// Datatable on local IndexedDB\n\nfunction getAllTables() {\n  return store.getAllItems();\n}\n\n\nfunction getTablesByFormat(format) {\n  return store.getItemsByFormat(format);\n}\n\n\nfunction getTable(tableId) {\n  return store.getItemById(tableId);\n}\n\n\nfunction getRecords(tableId) {\n  return store.getItemById(tableId)\n    .then(tbl => tbl.records);\n}\n\n\nfunction getCurrentTable() {\n  const q = getGlobalConfig('urlQuery');\n  if (!q.hasOwnProperty('id')) return Promise.resolve();\n  return store.getItemById(q.id);\n}\n\n\nfunction getCurrentRecords() {\n  return getCurrentTable().then(tbl => tbl.records);\n}\n\n\nfunction setColumnsToShow(updates) {\n  return store.updateItem(getGlobalConfig('urlQuery').id, item => {\n    item.columns.forEach((col, i) => {\n      col.visible = updates.visibles.includes(col.key);\n      col.sort = updates.sorts[i];\n      col.digit = updates.digits[i];\n    });\n  });\n}\n\n\nfunction joinColumn(mapping, tableId=globalConfig.urlQuery.id) {\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  return store.updateItem(tableId, item => {\n    item.records\n      .filter(rcd => mapping.mapping.hasOwnProperty(rcd[mapping.key]))\n      .forEach(rcd => {\n        if (mapping.hasOwnProperty('column')) {\n          rcd[mapping.column.key] = mapping.mapping[rcd[mapping.key]];\n        } else {\n          mapping.columns.forEach((col, i) => {\n            rcd[col.key] = mapping.mapping[rcd[mapping.key]][i];\n          });\n        }\n      });\n    item.columns = item.columns.concat(cols).unique('key');\n    item.lastUpdated = mapping.lastUpdated;\n  });\n}\n\n\nfunction updateTableAttribute(tblID, key, value) {\n  return store.updateItem(tblID, item => {\n    item[key] = value;\n  });\n}\n\n\nfunction insertTable(data) {\n  return store.putItem(data);\n}\n\n\nfunction updateTable(data) {\n  if (data === undefined) return Promise.resolve();  // No update\n  if (data.status === 'Failure') {  // No data found on server\n    return updateTableAttribute(data.id, 'status', 'Failure');\n  }\n  // update\n  return store.updateItem(data.id, item => {\n    const update = {\n      responseDate: data.responseDate,\n      records: data.records,\n      columns: data.columns,\n      recordCount: data.recordCount,\n      searchDoneCount: data.searchDoneCount,\n      execTime: data.execTime,\n      progress: data.progress,\n      status: data.status,\n    };\n    if (data.hasOwnProperty('lastUpdated')) {\n      update.lastUpdated = data.lastUpdated;\n    }\n    Object.assign(item, update);\n  });\n}\n\n\nfunction deleteTable(id) {\n  return store.deleteItem(id);\n}\n\n\nfunction reset() {\n  return store.reset();\n}\n\n\nexport default {\n  getGlobalConfig, setGlobalConfig,\n  localChemInstance, getFetcher, fetcherInstances,\n  dataFetcherInstances, dataFetcherDomains,\n  getResources, setResources, getResourceColumns, getDataSourceColumns,\n  getAllTables, getTablesByFormat, getTable, getRecords,\n  getCurrentTable, getCurrentRecords,\n  setColumnsToShow, joinColumn,\n  updateTableAttribute, insertTable, updateTable,\n  deleteTable, reset\n};\n","\nimport {default as store} from './store/StoreConnection.js';\n\nconst localServer = store.localChemInstance();\n\n\nfunction initialize() {\n  if ('serviceWorker' in navigator && !debug) {\n    navigator.serviceWorker\n      .register('sw.js')\n      .then(registration => {\n        console.info(\n          'ServiceWorker registration successful with scope: ',\n          registration.scope\n        );\n      }).catch(err => {\n        console.info('ServiceWorker registration failed: ', err);\n      });\n  } else if (debug) {\n    console.info('Off-line mode is disabled for debugging');\n  } else {\n    console.info('Off-line mode is not supported');\n  }\n  const serverTmpl = localServer.templates().then(res => {\n    store.setGlobalConfig('templates', res.templates);\n  });\n  const serverConfig = localServer.status().then(res => {\n    store.setGlobalConfig('server', res);\n  });\n  // TODO: skip loader if there is already resources in the store\n  // 1. collate resource version\n  // 2. if no local resource or server resource is newer, fetch\n  const rsrcFetched = store.fetcherInstances()\n    .map(api => api.getResources())\n    .extendAsync().then(res => {\n      const indexed = res.map((e, i) => {\n        e.idx = i;\n        return e;\n      });\n      return store.setResources(indexed);\n    });\n  return Promise.all([serverTmpl, serverConfig, rsrcFetched]);\n}\n\n\nfunction loader() {\n  if (document.location.protocol === \"file:\") {\n    console.info('Off-line mode (local file)');\n    store.setGlobalConfig('onLine', false);\n    return Promise.resolve();\n  }\n  if ('onLine' in navigator) {\n    if (!navigator.onLine) {\n      console.info('Off-line mode (no internet connection)');\n      store.setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    }\n  }\n  return fetch(`${localServer.baseURL}favicon.ico`)\n    .then(() => {\n      // HTTP 404\n      store.setGlobalConfig('onLine', true);\n      return initialize();\n    }).catch(() => {\n      console.info('Off-line mode (server not responding)');\n      store.setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    });\n}\n\n\nexport default {\n  loader\n};\n","\n/** @module formatValue */\n\nimport d3 from 'd3';\n\n\n/**\n * Format number\n * @param {object} value - value\n * @param {string} type - si | scientific | rounded | raw\n */\nfunction formatNum(value, type) {\n  const conv = {\n    scientific: \".3e\",\n    si: \".3s\",\n    rounded: \".3r\"\n  };\n  if (type === 'raw') return value;\n  if (value === undefined || value === null || Number.isNaN(value)) return '';\n  return value == parseFloat(value) ? d3.format(conv[type])(value) : value;\n}\n\nfunction partialMatch(query, target) {\n  if (target === undefined || target === null || target === '') return false;\n  return target.toString().toUpperCase()\n    .indexOf(query.toString().toUpperCase()) !== -1;\n}\n\nfunction numericAsc(a, b) {\n  const fa = parseFloat(a);\n  const fb = parseFloat(b);\n  if (isNaN(fa) || isNaN(fb)) {\n    return String(b).localeCompare(String(a));\n  }\n  return fb - fa;\n}\n\n\nfunction numericDesc(a, b) {\n  return numericAsc(b, a);\n}\n\n\nfunction textAsc(a, b) {\n  return String(b).localeCompare(String(a));\n}\n\n\nfunction textDesc(a, b) {\n  return textAsc(b, a);\n}\n\n\nexport default {\n  formatNum, partialMatch,\n  numericAsc, numericDesc, textAsc, textDesc\n};\n","\n/** @module component */\n\nimport d3 from 'd3';\nimport {default as fmt} from '../helper/formatValue.js';\n\n\nfunction selectOptions(selection, data, key, text) {\n  const options = selection.selectAll('option')\n    .data(data, key);\n  options.exit().remove();\n  options.enter().append('option')\n    .merge(options)\n      .attr('value', key)\n      .text(text);\n}\n\n\nfunction checkboxList(selection, data, name, key, text) {\n  const items = selection.selectAll('li').data(data, key);\n  items.exit().remove();\n  const entered = items.enter().append('li')\n    .attr('class', 'form-check')\n    .append('label');\n  entered.append('input');\n  entered.append('span');\n  const updated = entered.merge(items.select('label'))\n    .attr('class', 'form-check-label');\n  updated.select('input')\n    .attr('type', 'checkbox')\n    .attr('class', 'form-check-input')\n    .attr('name', name)\n    .attr('value', key);\n  updated.select('span')\n    .text(text);\n}\n\n\nfunction createTable(selection, tbl) {\n  // Header\n  if (!selection.select('thead').size()) {\n    selection.append('thead').append('tr');\n  }\n  // Records\n  if (!selection.select('tbody').size()) {\n    selection.append('tbody');\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false\n  );\n  const header = selection.select('thead tr').selectAll('th')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('th')\n    .merge(header)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nfunction updateTableRecords(selection, rcds, keyFunc) {\n  const header = selection.select('thead tr').selectAll('th')\n    .data();\n  const rowSelection = selection.select('tbody').selectAll('tr')\n    .data(rcds, keyFunc);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('tr');\n  rowEntered.selectAll('td')\n    .data(d => header.map(e => d[e.key]))\n    .enter().append('td');\n  rowEntered.merge(rowSelection)\n    .selectAll('td')\n    .classed('align-middle', true)\n    .html((d, i) => {\n      if (d === undefined) return '';\n      if (header[i].valueType === 'plot') return '[plot]';\n      if (header[i].valueType === 'image') return '[image]';\n      if (header[i].hasOwnProperty('digit') && header[i].digit !== 'raw') {\n        return fmt.formatNum(d, header[i].digit);\n      }\n      return d;\n    });\n}\n\n\nfunction appendTableRows(selection, rcds, keyFunc) {\n  const newRcds = selection.select('tbody').selectAll('tr').data();\n  Array.prototype.push.apply(newRcds, rcds);\n  updateTableRecords(selection, newRcds, keyFunc);\n}\n\n\nfunction addSort(selection) {\n  selection.select('thead tr').selectAll('th')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? fmt.numericAsc : fmt.textAsc)\n        : (isNum ? fmt.numericDesc : fmt.textDesc);\n      selection.select('tbody').selectAll('tr')\n        .sort((a, b) => cmp(a[d.key], b[d.key]));\n      d3.select(`#sort-${d.key}`)\n        .text(isAsc ? '^' : 'v');\n    });\n}\n\n\nfunction formatNumbers(selection) {\n  // DEPRECATED: no longer used\n  selection.select('thead tr').selectAll('th')\n    .each((col, colIdx) => {\n      if (!col.hasOwnProperty('digit') || col.digit === 'raw') return;\n      selection.select('tbody').selectAll('tr')\n        .selectAll('td')\n          .filter((d, i) => i === colIdx)\n          .text(d => fmt.formatNum(d, col.digit));\n    });\n}\n\n\nexport default {\n  selectOptions, checkboxList,\n  createTable, updateTableRecords,\n  appendTableRows, addSort, formatNumbers\n};\n","\n/** @module dialog */\n\nimport d3 from 'd3';\nimport {default as d3form} from '../helper/d3Form.js';\nimport {default as dstr} from '../helper/dataStructure.js';\nimport {default as fmt} from '../helper/formatValue.js';\nimport {default as hfile} from '../helper/file.js';\nimport {default as parser} from '../helper/parser.js';\nimport {default as himg} from '../helper/image.js';\nimport {default as store} from '../store/StoreConnection.js';\nimport {default as cmp} from './Component.js';\n\nconst localServer = store.localChemInstance();\n\n\nfunction mergeDataSourceColumns(data) {\n  return store.getDataSourceColumns(data.domain, data.dataSource)\n  .then(cols => store.getFetcher(data.domain).formatResult(cols, data));\n}\n\n\nfunction pickDialog(rsrc, callback) {\n  d3.select('#pick-target')\n    .call(cmp.selectOptions, rsrc, d => d.entity, d => d.name)\n    .on('change', function () {\n      const rsrctbl = d3form.optionData(this);\n      d3.select('#pick-queryarea').text(rsrctbl.placeholders.ID);\n    });\n  d3.select('#pick-queryarea').text(rsrc[0].placeholders.ID);  // initial value\n  d3.select('#pick-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        method: 'chemsql',\n        targets: [d3form.value('#pick-target')],\n        key: 'ID',\n        values: d3form.textareaLines('#pick-queryarea'),\n        operator: 'fm'\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nfunction propDialog(rsrc, callback) {\n  d3.select('#prop-targets')\n    .call(cmp.checkboxList, rsrc, 'targets', d => d.entity, d => d.name)\n    .on('change', function () {\n      const cols = d3form.checkboxData('#prop-targets')\n        .map(d => d.columns)\n        .extend().unique('key');\n      d3.select('#prop-key')\n        .call(cmp.selectOptions, cols, d => d.key, d => d.name);\n    });\n  d3.select('#prop-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedColumn = d3form.optionData('#prop-key');\n      const query = {\n        method: selectedColumn.method,\n        targets: d3form.checkboxValues('#prop-targets'),\n        key: selectedColumn.key,\n        values: d3form.textareaLines('#prop-queryarea'),\n        operator: d3form.value('#prop-operator')\n      };\n      return localServer.getRecords(query)\n      .then(mergeDataSourceColumns)\n      .then(callback);\n    });\n}\n\n\nfunction structDialog(rsrc, callback) {\n  d3.select('#struct-qsrc')\n    .call(cmp.selectOptions, rsrc, d => d.entity, d => d.name);\n  d3.select('#struct-targets')\n    .call(cmp.checkboxList, rsrc, 'targets', d => d.entity, d => d.name);\n  d3.select('#struct-method').selectAll('option.rd')\n    .attr('disabled', store.getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#struct-method')\n    .on('change', function () {\n      const op = d3.select(this.selectedOptions[0]);\n      d3.select('#struct-thldtype')\n        .attr('disabled', op.classed('thld') ? null : 'disabled')\n        .property('value', op.classed('edge') ? 'edge' : 'sim');\n      d3.select('#struct-thld')\n        .attr('disabled', op.classed('thld') ? null : 'disabled');\n      d3.select('#struct-thldtype option.sim')\n        .attr('disabled', op.classed('sim') ? null : 'disabled');\n      d3.select('#struct-thldtype option.edge')\n        .attr('disabled', op.classed('edge') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.gls')\n        .attr('disabled', op.classed('gls') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n      d3.select('#struct-thld')\n        .attr('value', d3form.value('#struct-thldtype') === 'edge' ? 15 : 0.7)\n        .attr('min', d3form.value('#struct-thldtype') === 'edge' ? 5 : 0)\n        .attr('max', d3form.value('#struct-thldtype') === 'edge' ? 999 : 1.0)\n        .attr('step', d3form.value('#struct-thldtype') === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-thldtype')\n    .on('change', function () {\n      d3.select('#struct-thld')\n        .attr('value', this.value === 'edge' ? 15 : 0.7)\n        .attr('min', this.value === 'edge' ? 5 : 0)\n        .attr('max', this.value === 'edge' ? 999 : 1.0)\n        .attr('step', this.value === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-format')\n    .on('change', function () {\n      d3.select('#struct-qsrc')\n        .attr('disabled', this.value === 'dbid' ? null : 'disabled');\n    });\n  d3.select('#struct-preview')\n    .on('click', () => {\n      const fmt = d3form.value('#struct-format');\n      const query = {\n        format: fmt,\n        querySource: fmt === 'dbid' ? d3form.value('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? d3form.value('#struct-queryarea') : d3form.textareaLines('#struct-queryarea')[0],\n      };\n      return localServer.strprev(query)\n        .then(res => d3.select('#struct-image').html(res));\n    });\n  d3.select('#struct-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#struct-method').node().selectedOptions[0]);\n      const fmt = d3form.value('#struct-format');\n      const query = {\n        method: d3form.value('#struct-method'),\n        targets: d3form.checkboxValues('#struct-targets'),\n        format: fmt,\n        querySource: fmt === 'dbid' ? d3form.value('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? d3form.value('#struct-queryarea') : d3form.textareaLines('#struct-queryarea')[0],\n        thresholdType: d3form.value('#struct-thldtype'),\n        threshold: d3form.valueFloat('#struct-thld'),\n        ignoreHs: d3form.checked('#struct-ignoreh'),\n        diameter: mthdop.classed('gls') ? d3form.valueInt('#struct-diam') : null,\n        maxTreeSize: mthdop.classed('gls') ? d3form.valueInt('#struct-tree') : null,\n        molSizeCutoff: mthdop.classed('gls') ? d3form.valueInt('#struct-skip') : null,\n        timeout: mthdop.classed('rd') ? d3form.valueInt('#struct-timeout') : null\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nfunction sdfDialog(callback) {\n  d3.select('#sdf-file')\n    .on('change', () => {\n      const reader = new FileReader();\n      const file = document.getElementById('sdf-file').files[0];\n      reader.onload = (e) => {\n        d3.select('#sdf-cols')\n          .call(cmp.checkboxList, parser.getSDFPropList(e.target.result),\n                'columns', d => d, d => d\n          );\n      };\n      // Scan only first 100mb of the file due to memory limit.\n      reader.readAsText(file.slice(0, 100 * 1024 * 1024));\n    });\n  d3.select('#sdf-selectall')\n    .on('change', () => {\n      d3.select('#sdf-cols').selectAll('input')\n        .property('checked', d3form.checked('#sdf-selectall'));\n    });\n  d3.select('#sdf-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        contents: d3form.firstFile('#sdf-file'),\n        query: JSON.stringify({\n          columns: d3form.checkboxValues('#sdf-cols'),\n          implh: d3form.checked('#sdf-implh'),\n          recalc: d3form.checked('#sdf-recalc')\n        })\n      };\n      return localServer.importSDF(query).then(callback);\n    });\n}\n\n\nfunction columnDialog(tbl, callback) {\n  // TODO: need refactoring\n  const coltbl = {\n    columns: [\n      {key: 'name', sort: 'text', visible: true},\n      {key: 'visible', sort: 'text', visible: true},\n      {key: 'sort', sort: 'text', visible: true},\n      {key: 'digit', sort: 'numeric', visible: true}\n    ]\n  };\n  d3.select('#column-table thead').remove();\n  d3.select('#column-table tbody').remove();\n  d3.select('#column-table').call(cmp.createTable, coltbl)\n    .select('tbody').selectAll('tr')\n    .data(tbl.columns).enter().append('tr')\n    .each(function (row) {\n      d3.select(this).selectAll('td')\n        .data(d => coltbl.columns.map(e => d[e.key])).enter().append('td')\n        .each(function (cell, i) {\n          if (i === 0) {\n            d3.select(this).text(d => d);\n          } else if (i === 1) {\n            d3.select(this).classed('column-vis-select', true)\n              .append('input')\n                .attr('type', 'checkbox')\n                .attr('value', row.key)\n                .property('checked', d => d);\n          } else if (i === 2) {\n            d3.select(this).classed('column-sort-select', true)\n              .append('select')\n              .call(cmp.selectOptions,\n                    cell === 'none' ? ['none'] : ['numeric', 'text'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n          } else if (i === 3) {\n            d3.select(this).classed('column-digit-select', true)\n              .append('select')\n              .call(cmp.selectOptions, ['raw', 'rounded', 'scientific', 'si'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n            if (row.sort !== 'numeric') {\n              d3.select(this).select('select').attr('disabled', 'disabled');\n            }\n          }\n        });\n    });\n  d3.select('#column-table tbody').selectAll('tr')\n    .on('change', function () {\n        const sort = d3.select(this).select('.column-sort-select select').node().value;\n        d3.select(this).select('.column-digit-select select')\n          .attr('disabled', sort === 'numeric' ? null : 'disabled');\n    });\n  d3.select('#column-submit')\n    .on('click', () => {\n      const query = {\n        visibles: d3form.checkboxValues('.column-vis-select'),\n        sorts: d3form.optionValues('.column-sort-select'),\n        digits: d3form.optionValues('.column-digit-select')\n      };\n      return store.setColumnsToShow(query).then(callback);\n    });\n}\n\n\nfunction joinDialog(tbl, rcds, callback) {\n  const domains = store.dataFetcherDomains();\n  // Prevent implicit submission\n  document.getElementById('join-search')\n    .addEventListener('keypress', event => {\n      if (event.keyCode === 13) event.preventDefault();\n    });\n  return store.getResourceColumns(domains).then(rsrcs => {\n    const shownCols = tbl.columns.map(e => e.key);\n    d3.select('#join-keys')\n      .call(cmp.checkboxList, rsrcs.unique('key'), 'keys',\n            d => d.key, d => d.name)\n      .selectAll('li')\n      .each(function(d) { // disable already shown columns\n        const ex = shownCols.includes(d.key);\n        d3.select(this).selectAll('label').select('input')\n          .property('checked', ex)\n          .attr('disabled', ex ? 'disabled' : null);\n      });\n    d3.select('#join-search').on('keyup', function () {\n      const match = d => fmt.partialMatch(d3form.value(this), d.name);\n      d3.select('#join-keys').selectAll('li')\n        .style('visibility', d => match(d) ? null : 'hidden')\n        .style('position', d => match(d) ? null : 'absolute');\n    });\n    d3.select('#join-submit').on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedCols = d3form.checkboxValues('#join-keys');\n      const mpgs = rsrcs\n        .filter(col => !shownCols.includes(col.key))\n        .filter(col => selectedCols.includes(col.key))\n        .map(col => {\n          const ids = rcds.map(row => row.ID);\n          const api = store.getFetcher(col.domain);\n          return api.getMapping(ids, col);\n        });\n      return Promise.all(mpgs).then(res => {\n        // callback(res.filter(e => Object.keys(e.mapping).length !== 0));\n        callback(res);\n      });\n    });\n  });\n}\n\n\nfunction importColDialog(tbl, callback) {\n  d3.select('#importcol-file')\n    .on('change', () => {\n      const file = document.getElementById('importcol-file').files[0];\n      const isCsv = file.name.split('.').pop() === 'csv';\n      hfile.readFile(file).then(res => {\n        const mapping = isCsv ? dstr.csvToMapping(res) : JSON.parse(res);\n        const tbl = dstr.columnMappingToTable(mapping);\n        d3.select('#importcol-preview').call(cmp.createTable, tbl)\n          .call(cmp.updateTableRecords,\n                tbl.records.slice(0, 5), d => d[tbl.columns[0].key]);\n        // bind mapping\n        d3.select('#importcol-preview').datum(mapping);\n      });\n    });\n  d3.select('#importcol-submit')\n    .on('click', () => {\n      let mapping = d3.select('#importcol-preview').datum();\n      d3.select('#importcol-preview').datum(null);  // unbind mapping\n      // Generate thumbnails\n      const plotCols = [];\n      if (mapping.hasOwnProperty('column')) {\n        mapping = dstr.singleToMultiMapping(mapping);\n      }\n      mapping.columns.forEach((e, i) => {\n        if (e.valueType === 'plot') {\n          mapping.columns[i].valueType = 'image';\n          plotCols.push(i);\n        }\n      });\n      if (plotCols.length > 0) {\n        const ps = [];\n        Object.entries(mapping.mapping).forEach(m => {\n          plotCols.forEach(e => {\n            const p = himg.plotThumbnail(m[1][e])\n              .then(img => {\n                mapping.mapping[m[0]][e] = img;\n              });\n            ps.push(p);\n          });\n        });\n        Promise.all(ps).then(() => callback([mapping]));\n      } else {\n        callback([mapping]);\n      }\n    });\n}\n\n\nfunction graphDialog(tbl, rcds, callback) {\n  d3.select('#graph-measure').selectAll('option.rd')\n    .attr('disabled', store.getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#graph-measure')\n    .on('change', function () {\n      d3.select('#graph-options').selectAll('.gls')\n        .attr('disabled', this.value === 'gls' ? null : 'disabled');\n      d3.select('#graph-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n    });\n  d3.select('#graph-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#graph-measure').node().selectedOptions[0]);\n      const query = {\n        measure: d3form.value('#graph-measure'),\n        indices: [],\n        molecules: [],\n        nodeTableId: tbl.id,\n        threshold: d3form.valueFloat('#graph-thld'),\n        ignoreHs: d3form.checked('#graph-ignoreh'),\n        diameter: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-diam') : null,\n        maxTreeSize: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-tree') : null,\n        molSizeCutoff: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-skip') : null,\n        timeout: mthdop.classed('rd') ? d3form.valueInt('#graph-timeout') : null\n      };\n      rcds.forEach(e => {\n        query.molecules.push(e._mol);\n        query.indices.push(e._index);\n      });\n      return localServer.getRecords(query).then(callback);\n    });\n}\n\n\nfunction graphConfigDialog(edges, callback) {\n  d3.select('#graphconfig-thld')\n    .attr('value', edges.networkThreshold)\n    .attr('max', 1.0)\n    .attr('min', edges.query.threshold);\n  d3.select('#graphconfig-submit')\n    .on('click', () => {\n      const newThld = d3form.valueFloat('#graphconfig-thld');\n      if (newThld < edges.query.threshold) return;  // TODO: fool proof\n      callback(newThld);\n    });\n}\n\n\nfunction communityDialog(callback) {\n  d3.select('#community-name').attr('value', 'comm_');\n  d3.select('#community-submit')\n    .on('click', () => {\n      const query = {\n        name: d3form.value('#community-name'),\n        nulliso: d3form.checked('#community-nulliso')\n      };\n      callback(query);\n    });\n}\n\n\nexport default {\n  pickDialog, propDialog, structDialog, sdfDialog,\n  columnDialog, joinDialog, importColDialog, graphDialog,\n  graphConfigDialog, communityDialog\n};\n","\nimport d3 from 'd3';\nimport {default as d3scale} from '../helper/d3Scale.js';\nimport {default as d3form} from '../helper/d3Form.js';\nimport {default as fmt} from '../helper/formatValue.js';\nimport {default as cmp} from '../component/Component.js';\n\n\n\n// Get data\n\nfunction colorControlInput(id) {\n  const data = {\n    id: id,\n    column: d3form.optionData(`#${id}-col`)\n  };\n  const preset = d3form.optionData(`#${id}-preset`);\n  if (preset.scale.scale === 'ordinal') {\n    data.scale = preset.scale;\n    return data;\n  }\n  data.scale = {\n    scale: d3form.value(`#${id}-scaletype`),\n    domain: [\n      d3form.value(`#${id}-domain-from`),\n      d3form.value(`#${id}-domain-to`)\n    ],\n    unknown: '#696969'\n  };\n  const range = [d3form.value(`#${id}-range-from`)];\n  if (d3form.checked(`#${id}-range-enable-mid`)) {\n    range.push(d3form.value(`#${id}-range-mid`));\n  }\n  range.push(d3form.value(`#${id}-range-to`));\n  data.scale.range = range;\n  return data;\n}\n\n\nfunction labelControlInput() {\n  const data = colorControlInput('label');\n  data.text = d3form.value('#label-text');\n  data.size = d3form.value('#label-size');\n  data.visible = d3form.checked('#label-visible');\n  return data;\n}\n\n\nfunction sizeControlInput(id) {\n  return {\n    id: id,\n    scale: {\n      scale: d3form.value(`#${id}-scaletype`),\n      domain: [\n        d3form.value(`#${id}-domain-from`),\n        d3form.value(`#${id}-domain-to`)\n      ],\n      range: [\n        d3form.value(`#${id}-range-from`),\n        d3form.value(`#${id}-range-to`)\n      ],\n      unknown: 10\n    }\n  };\n}\n\n\nfunction nodeSizeControlInput() {\n  const data = sizeControlInput('size');\n  data.column = d3form.optionData('#size-col');\n  return data;\n}\n\n\nfunction nodeContentInput() {\n  return {\n    structure: {\n      visible: d3form.checked('#show-struct')\n    }\n  };\n}\n\n\nfunction edgeControlInput() {\n  const data = sizeControlInput('edge');\n  data.visible = d3form.checked('#edge-visible');\n  data.label = {\n    size: d3form.value('#edge-label-size'),\n    visible: d3form.checked('#edge-label-visible')\n  };\n  return data;\n}\n\n\n// Update DOM attributes\n\nfunction updateNodeColor(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .style('fill', d => d3scale.scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeSize(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .attr('r', d => d3scale.scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeLabelVisibility(visible) {\n  d3.selectAll('.node').select('.node-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateNodeLabel(data) {\n  d3.selectAll('.node').select('.node-label')\n    .text(d => {\n      if (!d.hasOwnProperty(data.text)) return '';\n      if (!data.column.hasOwnProperty('digit') || data.column.digit === 'raw') return d[data.text];\n      return fmt.formatNum(d[data.text], data.column.digit);\n    })\n    .attr('font-size', data.size)\n    .attr('visibility', data.visible ? 'inherit' : 'hidden')\n    .style('fill', d => d3scale.scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeStructure(data) {\n  d3.selectAll('.node').select('.node-struct')\n    .attr('visibility', data.structure.visible ? 'inherit' : 'hidden')\n    .each((d, i, nds) => {\n      const w = d3.select(nds[i]).select('svg').attr('width');\n      const h = d3.select(nds[i]).select('svg').attr('height');\n      d3.select(nds[i]).attr('transform', `translate(${-w / 2},${-h / 2})`);\n    });\n}\n\n\nfunction updateNodeImage(data) {\n  updateNodeSize(data.nodeSize);\n  updateNodeColor(data.nodeColor);\n  updateNodeLabel(data.nodeLabel);\n  updateNodeStructure(data.nodeContent);\n}\n\n\nfunction updateEdgeVisibility(visible) {\n  d3.selectAll('.link').select('.edge-line')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdgeLabelVisibility(visible) {\n  d3.selectAll('.link').select('.edge-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdge(data) {\n  d3.selectAll('.link').select('.edge-line')\n    .style('stroke-width', d => d3scale.scaleFunction(data.scale)(d.weight));\n  d3.selectAll('.link').select('.edge-label')\n    .attr('font-size', data.label.size);\n  updateEdgeVisibility(data.visible);\n  updateEdgeLabelVisibility(data.label.visible);\n}\n\n\nfunction updateRange(range, id) {\n  if (range.length === 2) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', null);\n    d3.select(`#${id}-range-mid`).attr('disabled','disabled');\n    d3.select(`#${id}-range-to`).property('value', range[1]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else if (range.length === 3) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', 'checked');\n    d3.select(`#${id}-range-mid`).property('value', range[1]);\n    d3.select(`#${id}-range-to`).property('value', range[2]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else {\n    d3.selectAll(`#${id}-range input`).attr('disabled', 'disabled');\n  }\n}\n\n\nfunction updateScale(scale, id) {\n  d3.select(`#${id}-scaletype`).property('value', scale.scale);\n  const hasDomain = scale.hasOwnProperty('domain');\n  d3.selectAll(`#${id}-domain input`)\n    .attr('disabled', hasDomain ? null : 'disabled');\n  if (hasDomain) {\n    d3.select(`#${id}-domain-from`).property('value', scale.domain[0]);\n    d3.select(`#${id}-domain-to`).property('value', scale.domain[1]);\n  }\n  updateRange(scale.range, id);\n}\n\n\nfunction updateControl(data) {\n  const id = data.id;\n  d3.select(`#${id}-visible`).attr('checked', data.visible ? 'checked' : null);\n  d3.select(`#${id}-text`).property('value', data.text);\n  d3.select(`#${id}-size`).property('value', data.size);\n  if (data.hasOwnProperty('column')) {\n    d3.select(`#${id}-col`).property('value', data.column.key);\n  }\n  if (data.hasOwnProperty('label')) {\n    d3.select(`#${id}-label-visible`)\n      .attr('checked', data.label.visible ? 'checked' : null);\n    d3.select(`#${id}-label-size`).property('value', data.label.size);\n  }\n  updateScale(data.scale, data.id);\n}\n\n\n\n// Generate controlBox elements\n\nfunction mainControlBox() {\n  d3.select('#show-struct')\n    .on('change', function () {\n      const data = nodeContentInput();\n      d3.select('#main-control').datum(data);\n      updateNodeStructure(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction colorControlBox(columns, id) {\n  d3.select(`#${id}-col`)\n    .call(cmp.selectOptions, columns, d => d.key, d => d.name);\n  d3.select(`#${id}-preset`)\n    .call(cmp.selectOptions, d3scale.colorPresets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(d3form.optionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-palette`)\n    .call(cmp.selectOptions, d3scale.colorPalette, d => d.name, d => d.name)\n    .on('change', function() {\n      updateRange(d3form.optionData(this).range, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(cmp.selectOptions, d3scale.scaleTypes, d => d.name, d => d.name);\n}\n\n\nfunction nodeColorControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  colorControlBox(textCols, 'color');\n  d3.selectAll('.color-update')\n    .on('change', () => {\n      const data = colorControlInput('color');\n      d3.select('#color-control').datum(data);\n      updateControl(data);\n      updateNodeColor(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction nodeLabelControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  d3.select('#label-text')\n    .call(cmp.selectOptions, textCols, d => d.key, d => d.name);\n  colorControlBox(textCols, 'label');\n  d3.select('#label-visible')\n    .on('change', function() {\n      updateNodeLabelVisibility(d3form.checked(this), 'label');\n      d3.select(`.label-update`).dispatch('change');\n    });\n  d3.selectAll('.label-update')\n    .on('change', () => {\n      const data = labelControlInput();\n      d3.select('#label-control').datum(data);\n      updateControl(data);\n      updateNodeLabel(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction sizeControlBox(presets, id) {\n  d3.select(`#${id}-preset`)\n    .call(cmp.selectOptions, presets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(d3form.optionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(cmp.selectOptions, d3scale.sizeScaleTypes, d => d.name, d => d.name);\n}\n\n\nfunction nodeSizeControlBox(columns) {\n  const numCols = columns.filter(e => e.sort === 'numeric');\n  d3.select(`#size-col`)\n    .call(cmp.selectOptions, numCols, d => d.key, d => d.name);\n  sizeControlBox(d3scale.sizePresets, 'size');\n  d3.selectAll('.size-update')\n    .on('change', () => {\n      const data = nodeSizeControlInput('size');\n      d3.select('#size-control').datum(data);\n      updateControl(data);\n      updateNodeSize(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction edgeControlBox() {\n  sizeControlBox(d3scale.edgeWidthPresets, 'edge');\n  d3.select('#edge-visible')\n    .on('change', function() {\n      updateEdgeVisibility(d3form.checked(this));\n      updateEdgeLabelVisibility(d3form.checked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.select('#edge-label-visible')\n    .on('change', function() {\n      updateEdgeLabelVisibility(d3form.checked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.selectAll('.edge-update')\n    .on('change', () => {\n      const data = edgeControlInput('edge');\n      d3.select('#edge-control').datum(data);\n      updateControl(data);\n      updateEdge(data);\n    })\n    .dispatch('change');\n}\n\n\nexport default {\n  updateNodeStructure, updateNodeImage, updateControl,\n  mainControlBox, nodeColorControlBox, nodeLabelControlBox, nodeSizeControlBox, edgeControlBox\n};\n","\nimport d3 from 'd3';\n\nimport {default as force} from './GraphForce.js';\n\nconst zoom = d3.zoom()\n  .on('zoom', () => {\n    d3.select('#graph-contents').attr('transform', d3.event.transform);\n  });\n\nconst dragWithForce = d3.drag()\n  .on('start', () => {\n    d3.select('#graph-contents').selectAll('.link')\n      .attr('visibility', 'hidden');\n    if (!d3.event.active) force.simulation.alphaTarget(0.1).restart();\n  })\n  .on('drag', d => {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  })\n  .on('end', d => {\n    if (!d3.event.active) force.simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  });\n\nconst dragNoForce = d3.drag()\n  .on('drag', function (d) {\n    d3.select(this)\n      .attr('transform', () => `translate(${d3.event.x}, ${d3.event.y})`);\n    d.x = d3.event.x;\n    d.y = d3.event.y;\n    const connected = d3.select('#graph-contents').selectAll('.link')\n      .filter(d => [d.source.index, d.target.index].includes(this.__data__.index));\n    connected.attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n      .attr('visibility', 'visible');\n    connected.select('.edge-line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', d => d.target.x - d.source.x)\n      .attr('y2', d => d.target.y - d.source.y);\n    connected.select('.edge-label')\n      .attr('x', d => (d.target.x - d.source.x) / 2)\n      .attr('y', d => (d.target.y - d.source.y) / 2);\n  })\n  .on('end', () => {\n    force.end();\n  });\n\n\nfunction stickNodes() {\n  force.simulation.alpha(0).stop();\n  d3.selectAll('.node').each(d => {\n    d.fx = d.x;\n    d.fy = d.y;\n  });\n  force.tick();\n  force.end();\n  d3.select('#stick-nodes').property('checked', true);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragNoForce);\n}\n\n\nfunction unstickNodes() {\n  d3.selectAll('.node').each(d => {\n    d.fx = null;\n    d.fy = null;\n  });\n  d3.select('#stick-nodes').property('checked', false);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'hidden');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragWithForce);\n}\n\n\nfunction relax() {\n  unstickNodes();\n  force.simulation.alpha(0.1).restart();\n}\n\n\nfunction restart() {\n  unstickNodes();\n  force.simulation.alpha(1).restart();\n}\n\n\nfunction fitToScreen() {\n  d3.select('#graph-field').call(zoom.transform, d3.zoomIdentity);\n  // TODO\n  /*\n  const p = 0.9;  // padding factor\n  const x = extent(selectAll('.node').data(), d => d.x);\n  const y = extent(selectAll('.node').data(), d => d.y);\n  const w = x[1] - x[0];\n  const h = y[1] - y[0];\n  const vb = select('#graph-field').attr('viewBox').split(' ');\n  const xScaleF = vb[2] / w * p;\n  const yScaleF = vb[3] / h * p;\n  const scaleF = Math.max(xScaleF, yScaleF);\n  const center = [(w * (1 - p) / 2 - x[0]) * xScaleF,\n                  (h * (1 - p) / 2 - y[0]) * yScaleF];\n  // Reset zoom point\n  zoom.scale(scaleF);\n  zoom.translate(center);\n  updateViewportTransform(center, scaleF);\n  */\n}\n\n\nexport default {\n  zoom, dragWithForce, dragNoForce,\n  stickNodes, unstickNodes,\n  relax, restart, fitToScreen\n};\n","\n/** @module graph */\n\nimport d3 from 'd3';\n\nimport {default as d3form} from './helper/d3Form.js';\nimport {default as d3scale} from './helper/d3Scale.js';\nimport {default as def} from './helper/definition.js';\nimport {default as hfile} from './helper/file.js';\nimport {default as loader} from './Loader.js';\nimport {default as store} from './store/StoreConnection.js';\nimport {default as header} from './component/Header.js';\nimport {default as dialog} from './component/Dialog.js';\nimport {default as force} from './graph/GraphForce.js';\nimport {default as control} from './graph/GraphControlBox.js';\nimport {default as component} from './graph/GraphComponent.js';\nimport {default as interaction} from './graph/GraphInteraction.js';\nimport {default as community} from './graph/communityDetection.js';\n\n\nconst localServer = store.localChemInstance();\n\n\nfunction takeSnapshot() {\n  return {\n    nodePositions: d3.selectAll('.node').data().map(d => ({x: d.x, y: d.y})),\n    fieldTransform: d3.zoomTransform(d3.select('#graph-field').node()),\n    nodeContent: d3.select('#main-control').datum(),\n    nodeColor: d3.select('#color-control').datum(),\n    nodeSize: d3.select('#size-control').datum(),\n    nodeLabel: d3.select('#label-control').datum(),\n    edge: d3.select('#edge-control').datum()\n  };\n}\n\n\nfunction saveSnapshot() {\n  const currentId = store.getGlobalConfig('urlQuery').id;\n  return store.updateTableAttribute(currentId, 'snapshot', takeSnapshot())\n    .then(() => console.info('Snapshot saved'));\n}\n\n\nfunction resume(snapshot) {\n  if (snapshot.hasOwnProperty('nodeContent')) {\n    d3.select('#main-control').datum(snapshot.nodeContent);\n    d3.select('#show-struct')\n      .property('checked',\n                snapshot.nodeContent.structure.visible ? true : false);\n  }\n  if (snapshot.hasOwnProperty('nodeColor')) {\n    d3.select('#color-control').datum(snapshot.nodeColor);\n    control.updateControl(snapshot.nodeColor);\n  }\n  if (snapshot.hasOwnProperty('nodeSize')) {\n    d3.select('#size-control').datum(snapshot.nodeSize);\n    control.updateControl(snapshot.nodeSize);\n  }\n  if (snapshot.hasOwnProperty('nodeLabel')) {\n    d3.select('#label-control').datum(snapshot.nodeLabel);\n    control.updateControl(snapshot.nodeLabel);\n  }\n  if (snapshot.hasOwnProperty('edge')) {\n    d3.select('#edge-control').datum(snapshot.edge);\n    control.updateControl(snapshot.edge);\n  }\n  if (snapshot.hasOwnProperty('fieldTransform')) {\n    const tf = snapshot.fieldTransform;\n    const transform = d3.zoomIdentity.translate(tf.x, tf.y).scale(tf.k);\n    d3.select('#graph-contents').attr('transform', transform);\n    d3.select('#graph-field').call(interaction.zoom.transform, transform);\n  }\n  if (snapshot.hasOwnProperty('nodePositions')) {\n    d3.selectAll('.node').each((d, i) => {\n      d.x = snapshot.nodePositions[i].x;\n      d.y = snapshot.nodePositions[i].y;\n    });\n  }\n  control.updateNodeImage(snapshot);\n}\n\n\nfunction getCurrentGraph() {\n  return store.getCurrentTable().then(edges => {\n    return store.getTable(edges.nodeTableId).then(nodes => {\n      return {edges: edges, nodes: nodes};\n    });\n  });\n}\n\n\nfunction start() {\n  return getCurrentGraph().then(g => {\n    header.renderStatus(g.edges, refresh, abort);\n    const edgesToDraw = g.edges.records\n      .filter(e => e.weight >= g.edges.networkThreshold);\n    const edgeDensity = d3.format('.3e')(edgesToDraw.length / g.edges.searchCount);\n    d3.select('#edge-density').text(edgeDensity);\n    d3.select('#network-thld').text(g.edges.networkThreshold);\n    component.graphEdges(d3.select('#graph-contents'), edgesToDraw);\n    component.graphNodes(d3.select('#graph-contents'), g.nodes.records);\n    d3.select('#show-struct').property('checked', false);  // for fast loading\n    force.setForce(\n      g.nodes.records, edgesToDraw, force.tick,\n      () => {\n        force.end();\n        saveSnapshot();\n      });\n    if (g.edges.hasOwnProperty('snapshot')) {\n      resume(g.edges.snapshot);\n      interaction.stickNodes();\n    } else {\n      interaction.restart();\n    }\n    d3.select('#graph-contents').style('opacity', 1e-6)\n      .transition()\n      .duration(1000)\n      .style('opacity', 1);\n  });\n}\n\n\nfunction render() {\n  return getCurrentGraph().then(g => {\n    g.nodes.records.forEach(e => { delete e._mol; });\n    dialog.graphConfigDialog(g.edges, thld => {\n      return store.updateTableAttribute(g.edges.id, 'networkThreshold', thld)\n        .then(saveSnapshot).then(start);\n    });\n    dialog.communityDialog(query => {\n      const nodeIds = g.nodes.records.map(e => e._index);\n      const visibleEdges = g.edges.records\n        .filter(e => e.weight >= g.edges.networkThreshold);\n      const comm = community.communityDetection(\n        nodeIds, visibleEdges, {nulliso: query.nulliso}\n      );\n      const mapping = {\n        key: '_index',\n        column: {\n          key: query.name, name: query.name, sort: 'numeric', visible: true\n        },\n        mapping: comm\n      };\n      store.joinColumn(mapping, g.nodes.id)\n        .then(() => {\n          const snapshot = takeSnapshot();\n          snapshot.nodeColor.column = query.name;\n          snapshot.nodeColor.scale = d3scale.colorPresets\n            .find(e => e.name === 'Categories').scale;\n          const currentId = store.getGlobalConfig('urlQuery').id;\n          return store.updateTableAttribute(currentId, 'snapshot', snapshot)\n            .then(() => console.info('snapshot saved'));\n        }).then(render);\n    });\n    control.mainControlBox();\n    control.nodeColorControlBox(g.nodes.columns);\n    control.nodeSizeControlBox(g.nodes.columns);\n    control.nodeLabelControlBox(g.nodes.columns);\n    control.edgeControlBox();\n    d3.select('#stick-nodes')\n      .on('change', function() {\n        d3form.checked(this) === true ? interaction.stickNodes() : interaction.relax();\n      });\n    d3.select('#nodetable').attr('href', `datatable.html?id=${g.edges.nodeTableId}`);\n    d3.select('#rename')\n      .on('click', () => {\n        d3.select('#prompt-title').text('Rename table');\n        d3.select('#prompt-label').text('New name');\n        d3.select('#prompt-input').attr('value', g.edges.name);\n        d3.select('#prompt-submit')\n          .on('click', () => {\n            const name = d3form.value('#prompt-input');\n            return store.updateTableAttribute(g.edges.id, 'name', name)\n              .then(store.getCurrentTable)\n              .then(t => header.renderStatus(t, refresh, abort));\n          });\n      });\n    return start();\n  });\n}\n\n\nfunction fetch_(command) {\n  return store.getCurrentTable().then(edges => {\n    if (!def.fetchable(edges)) return;\n    const query = {id: edges.id, command: command};\n    return localServer.getRecords(query).then(store.updateTable);\n  });\n}\n\n\nfunction refresh() {\n  return fetch_('update').then(isUpdated => {\n    if (isUpdated !== undefined) return start();\n  });\n}\n\n\nfunction abort() {\n  return fetch_('abort').then(isUpdated => {\n    if (isUpdated !== undefined) return start();\n  });\n}\n\n\nfunction loadNewGraph(grf) {\n  return Promise.all([\n    store.insertTable(grf.nodes),\n    store.insertTable(grf.edges)\n  ]).then(() => {\n    window.location = `graph.html?id=${grf.edges.id}`;\n  });\n}\n\n\nfunction run() {\n  d3.select('#export')\n    .on('click', () => {\n      // Working copy of edges and nodes are modified by d3.force.\n      // Load original data from store.\n      return getCurrentGraph().then(g => hfile.downloadJSON(g, g.edges.name));\n    });\n  d3.select('#graph-field')\n    .attr('viewBox', `0 0 ${force.fieldWidth} ${force.fieldHeight}`)\n    .call(interaction.zoom);\n  d3.select('#snapshot')\n    .on('click', saveSnapshot);\n  d3.select('#restart')\n    .on('click', interaction.restart);\n  d3.select('#import-json')\n    .on('click', () => document.getElementById('select-file').click());\n  d3.select('#select-file')\n    .on('change', () => {\n      const file = document.getElementById('select-file').files[0];\n      hfile.loadJSON(file).then(loadNewGraph);\n    });\n  if (store.getGlobalConfig('urlQuery').hasOwnProperty('location')) {\n    const url = store.getGlobalConfig('urlQuery').location;\n    return hfile.fetchJSON(url)\n      .then(tbls => {\n        return Promise.all([\n          store.insertTable(tbls.nodes),\n          store.insertTable(tbls.edges)\n        ]).then(() => tbls.edges.id);\n      })\n      .then(id => {\n        window.location = `graph.html?id=${id}`;\n      });\n  }\n  return loader.loader().then(() => {\n    if (store.getGlobalConfig('urlQuery').hasOwnProperty('id')) {\n      header.initializeWithData();\n      return fetch_('update').then(render);\n    } else {\n      header.initialize();\n      return Promise.resolve();\n    }\n  });\n}\n\nexport default {\n  force, control, component, interaction, community, run\n};\n","\n/** @module d3Form */\n\nimport d3 from 'd3';\n\n\nfunction value(selector) {\n  return d3.select(selector).node().value;\n}\n\n\nfunction valueInt(selector) {\n  return parseInt(d3.select(selector).node().value);\n}\n\n\nfunction valueFloat(selector) {\n  return parseFloat(d3.select(selector).node().value);\n}\n\n\nfunction checked(selector) {\n  return d3.select(selector).node().checked;\n}\n\n\nfunction firstFile(selector) {\n  return d3.select(selector).node().files[0];\n}\n\n\nfunction checkboxValues(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').nodes().map(e => e.value);\n}\n\n\nfunction optionValues(selector) {\n  return d3.selectAll(selector).selectAll('select').nodes().map(e => e.value);\n}\n\n\nfunction textareaLines(selector) {\n  return d3.select(selector).node().value.split('\\n').filter(e => e.length > 0);\n}\n\n\nfunction optionData(selector) {\n  const si = d3.select(selector).property('selectedIndex');\n  return d3.select(selector).selectAll('option').data().find((d, i) => i === si);\n}\n\n\nfunction checkboxData(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').data();\n}\n\n\nexport default {\n  value, valueInt, valueFloat, checked,\n  firstFile, checkboxValues, optionValues, textareaLines,\n  optionData, checkboxData\n};\n","\n/** @module d3Scale */\n\nimport d3 from 'd3';\n\nconst categoryMany = d3.schemeSet1\n  .concat(d3.schemeSet3, d3.schemePastel2, d3.schemeSet2);\nconst defaultSizeRange = [20, 80];\n\nconst colorPresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 8],\n      range: ['#6495ed', '#ccff66', '#ffa500'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Categories',\n    scale: {\n      scale: 'ordinal',\n      range: d3.schemeCategory20,\n      unknown: '#dedede'\n    }\n  },\n  {\n    name: 'ManyCategories',\n    scale: {\n      scale: 'ordinal',\n      range: categoryMany,\n      unknown: '#dedede'\n    }\n  }\n];\n\nconst sizePresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  }\n];\n\nconst edgeWidthPresets = [\n  {\n    name: 'Universal',\n    scale: {\n      scale: 'linear',\n      domain: [0.3, 1],\n      range: [0.5, 5],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Thin',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [0.5, 3],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Amplified',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [1, 10],\n      unknown: 1\n    }\n  }\n];\n\nconst colorPalette = [\n  {name: 'Aquamarine', range: ['#778899', '#7fffd4'], unknown: '#696969'},\n  {name: 'Chartreuse', range: ['#778899', '#7fff00'], unknown: '#696969'},\n  {name: 'Salmon', range: ['#778899', '#fa8072'], unknown: '#696969'},\n  {name: 'Violet', range: ['#778899', '#ee82ee'], unknown: '#696969'},\n  {name: 'blue-red', range: ['#87ceeb', '#fff5ee', '#fa8072'], unknown: '#696969'},\n  {name: 'Spectrum', range: ['#6495ed', '#ccff66', '#ffa500'], unknown: '#696969'}\n];\n\nconst scaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()},\n  {name: 'ordinal', func: d3.scaleOrdinal()}\n];\n\nconst sizeScaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()}\n];\n\nfunction scaleFunction(scale) {\n  let sf = scaleTypes.find(e => e.name === scale.scale).func;\n  let domain = scale.domain;\n  if (scale.range.length === 3) {\n    const mid = (parseFloat(scale.domain[0]) + parseFloat(scale.domain[1])) / 2;\n    domain = [scale.domain[0], mid, scale.domain[1]];\n  }\n  if (scale.scale !== 'ordinal') {\n    sf = sf.domain(domain);\n  }\n  sf = sf.range(scale.range);\n  if (['linear', 'log'].includes(scale.scale)) {\n    sf = sf.clamp(true);\n  }\n  return d => {\n    if (d === '' || typeof d === 'undefined' || d === null) {\n      return scale.unknown;\n    }\n    if (scale.scale !== 'ordinal' && parseFloat(d) != d) {\n      return scale.unknown;\n    }\n    if (scale.scale === 'log' && d <= 0) {\n      return scale.unknown;\n    }\n    const result = sf(d);\n    if (result === undefined) {\n      return scale.unknown;\n    }\n    return result;\n  };\n}\n\n\nexport default {\n  colorPresets, sizePresets, edgeWidthPresets,\n  colorPalette, scaleTypes, sizeScaleTypes,\n  scaleFunction\n};\n","\n/** @module definition */\n\nfunction fetchable(tbl) {\n  return ['In progress', 'Queued', 'Aborting'].includes(tbl.status);\n}\n\n\nfunction abortRequestable(tbl) {\n  return ['In progress', 'Queued'].includes(tbl.status);\n}\n\n\nfunction conclike(col) {\n  return col.hasOwnProperty('valueType')\n    && ['AC50', 'IC50', 'ED50'].includes(col.valueType);\n}\n\n\nfunction dataSourceId(domain, resource, column) {\n  return [domain, resource, column]\n    .map(e => e.capitalize())\n    .join('');  // DomainResourceColumn\n}\n\n\nexport default {\n  fetchable, abortRequestable, conclike, dataSourceId\n};\n","\nimport Dexie from 'Dexie';\n\n// TODO: can indexed records improve query performance ?\n// TODO: remove app table. no longer used\n\nconst schema = {\n  app: 'key',\n  items: 'id, format, responseDate',\n  resources: 'idx, id'\n};\n\nlet idb = new Dexie('Store');\nidb.version(1).stores(schema);\n\n\nfunction getAppSetting(key) {\n  return idb.app.where('key').equals(key).first()\n    .then(res => {\n      if (res === undefined) return undefined;\n      return res.value;\n    });\n}\n\n\nfunction putAppSetting(k, v) {  // returns id in success\n  return idb.app.put({ key: k, value: v });\n}\n\n\nfunction getResources() {\n  return idb.resources.orderBy('idx')\n    .toArray();\n}\n\n\nfunction putResources(data) { // returns last id in success\n  return idb.resources.bulkPut(data);\n}\n\n\nfunction getAllItems() {\n  return idb.items.orderBy('responseDate').reverse()\n    .toArray();\n}\n\n\nfunction getItemsByFormat(format) {\n  return idb.items.where('format').equals(format).reverse()\n    .sortBy('responseDate');\n}\n\n\nfunction getItemById(tableId) {\n  return idb.items.where('id').equals(tableId).first();\n}\n\n\nfunction updateItem(tableId, callback) {  // returns num of updated items\n  return idb.items.where('id').equals(tableId).modify(callback);\n}\n\n\nfunction deleteItem(tableId) { // returns num of deleted items\n  return idb.items.where('id').equals(tableId).delete();\n}\n\n\nfunction putItem(data) { // returns id in success\n  return idb.items.put(data);\n}\n\n\nfunction reset() {\n  // Try this before tackling with local db troubles\n  return idb.delete().then(() => {\n    idb = new Dexie('Store');\n    idb.version(1).stores(schema);\n  });\n}\n\nexport default {\n  getAppSetting, putAppSetting, getResources, putResources,\n  getAllItems, getItemsByFormat, getItemById,\n  updateItem, deleteItem, putItem, reset\n};\n","\nexport default class Fetcher {\n  constructor() {\n    this.baseURL = \"\";\n    this.available = false;\n  }\n\n  xhrRequest(url, formData=null, options={}) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('method' in options ? options.method : 'POST', url);\n      xhr.responseType = 'responseType' in options ? options.responseType : 'json';\n      xhr.withCredentials = 'withCredentials' in options ? options.withCredentials : false;\n      xhr.onload = () => {\n        if (xhr.status !== 200) {\n          reject(xhr);\n        } else {\n          resolve(xhr.response);\n        }\n      };\n      xhr.send(formData);\n    });\n  }\n\n  now() {\n    const now = new Date();\n    return now.toString();\n  }\n\n  getResources() {\n    // required\n  }\n\n  formatResult(cols, data) {\n    // to be called by store.updateTable\n    // required for chemical domain\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getRecords() {\n    // required\n  }\n\n  getRecordsByCompound() {\n    // required for activity domain\n  }\n\n  getMapping() {\n    // required for activity domain\n  }\n\n  getGraphEdges() {\n\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class LocalServerActivity extends Fetcher {\n  constructor() {\n    super();\n    this.baseURL = './';\n    this.domain = 'activity';\n    this.entities = [];\n  }\n\n  serializedRequest(url, query={}) {\n    const formData = new FormData();\n    formData.set('query', JSON.stringify(query));\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  request(url, query={}) {\n    const formData = new FormData();\n    const qmap = new Map(Object.entries(query));\n    qmap.forEach((v, k) => {\n      if (Array.isArray(v)) {\n        v.forEach(e => formData.append(k, e));\n      } else {\n        formData.set(k, v);\n      }\n    });\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'sql';\n            col.visible = true;\n          });\n          this.entities.push(rsrc.entity);\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(queries) {\n    return this.serializedRequest('sql', queries)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  getRecordsByCompound(compound) {\n    // TODO: this.entities\n    const query = {\n      method: 'sql',\n      targets: this.entities,\n      key: 'ID',\n      values: [compound],\n      operator: 'eq'\n    };\n    return this.getRecords(query);\n  }\n\n  getMapping(ids, column) {\n    const query = {\n      method: 'sql',\n      targets: [column.entity],\n      key: 'ID',\n      values: ids,\n      operator: 'fm'\n    };\n    return this.serializedRequest('sql', query)\n      .then(res => res.json())\n      .then(json => {\n        const mapping = {};\n        json.records.filter(row => row.hasOwnProperty(column.dataColumn))\n          .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n        return {\n          key: query.key,\n          column: column,\n          mapping: mapping,\n          lastUpdated: this.now(),\n        };\n      });\n  }\n\n  status() {\n    return this.request('server').then(res => res.json());\n  }\n\n  templates() {\n    return this.request('templates').then(res => res.json());\n  }\n\n  strprev(query) {\n    return this.serializedRequest('strprev', query).then(res => res.text());\n  }\n\n  exportExcel(query) {\n    return this.request('xlsx', query).then(res => res.blob());\n  }\n\n  exportSDFile(query) {\n    return this.request('exportsdf', query).then(res => res.text());\n  }\n\n  reportPreview(query) {\n    return this.request('reportprev', query).then(res => res.json());\n  }\n\n  report(query) {\n    return this.request('report', query).then(res => res.blob());\n  }\n}\n\n\nexport class LocalServerChemical extends LocalServerActivity {\n  constructor() {\n    super();\n    this.domain = 'chemical';\n    this.hiddenColumns = [\"_mw\", \"_mw_wo_sw\", \"_formula\", \"_logp\", \"_nonH\"];\n  }\n\n  formatResult(cols, data) {\n    if (cols.length === 0) {  // sdf\n      data.columns.forEach(col => {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      return data;\n    }\n    Array.prototype.push.apply(data.columns, cols);\n    if (data.hasOwnProperty('extraColumns')) {\n      Array.prototype.push.apply(data.columns, data.extraColumns);\n      delete data.extraColumns;\n    }\n    data.columns.forEach(col => {\n      if (!col.hasOwnProperty('name')) col.name = col.key;\n      if (col.key === data.query.key) {\n        col.visible = true;  // Search key\n      } else {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      }\n    });\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'chemsql';\n            col.visible = true;\n          });\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(query) {\n    let url;\n    if (query.hasOwnProperty('command')) {\n      url = 'rows';\n    } else if (query.hasOwnProperty('nodeTableId')) {\n      url = 'graph';\n    } else if (['chemsql', 'sql'].includes(query.method)) {\n      url = 'sql';\n    } else {\n      url = 'compute';\n    }\n    return this.serializedRequest(url, query)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  importSDF(query) {\n    return this.request('sdf', query)\n    .then(res => res.json())\n    .then(json => {\n      json.domain = this.domain;\n      json.columns.forEach(col =>{\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      const now = new Date();\n      json.lastUpdated = now.toString();\n      return json;\n    });\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class ScreenerFitting extends Fetcher {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting.yaml';\n    this.domain = null;\n    this.baseURL = null;\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n    });\n  }\n\n  request(queryString) {\n    return fetch(`${this.baseURL}${queryString}`, {\n      method: 'GET',\n      credentials : 'include'\n    }).then(res => res.json());\n  }\n\n  requestRecords(queryString) {\n    return this.request(queryString)\n      .then(json => {\n        const rcds = json.compounds.map(c => {\n          return {\n            ID: c.compoundId,\n            qcsRefId: c.qcsRefId,\n            layerIndex: c.layerIndex,\n            drcPlot: c.fitting.drcPlot,\n            AC50: c.fitting.linearAC50,\n            hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n          };\n        });\n        return { records: rcds };\n      });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/compounds?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/compounds?q=compoundId%3A${compound}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getMapping(ids, column) {\n    const refid_layer = column.entity.split(':');\n    const query = {\n      qcsRefId: refid_layer[0],\n      layerIndex: parseInt(refid_layer[1])\n    };\n    return this.getRecords(query).then(res => {\n      const mapping = {};\n      res.records.filter(row => ids.includes(row.ID))\n        .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n      return {\n        key: 'ID',\n        column: column,\n        mapping: mapping,\n        lastUpdated: this.now()\n      };\n    });\n  }\n\n  getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n    // compoundResult.fitting.drcPlot -> drcPlots/idstring\n    // returns image/png\n    const queryString = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n    return this.request(queryString);\n  }\n\n  getQcsInfo(qcsRefIds) {\n    const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n    const queryString = `/qcSessions?q=${ids}`;\n    return this.request(queryString).then(res => res.qcSessions);\n  }\n}\n\n\nexport class ScreenerRawValue extends ScreenerFitting{\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue.yaml';\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            col.key = 'rawValue';\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n      });\n  }\n\n  requestRecords(queryString, pred) {\n    return this.request(queryString).then(res => {\n      const rcds = res.plates.filter(plt => plt.wells.hasOwnProperty('compoundIds'))\n        .map(plt => {\n          return plt.wells.compoundIds.map((c, i) => {\n            return {\n              ID: c,\n              qcsRefId: plt.qcsRefId,\n              layerIndex: plt.layerIndex,\n              rawValue: plt.wells.rawValues[i]\n            };\n          }).filter(pred);\n        }).extend();\n      return { records: rcds };\n    });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/plates?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID !== null);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/plates?q=wells.compoundIds%3A${compound}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID === compound);\n  }\n}\n\n\n/*\nfunction request(query) {\n  return store.getDBResources('activity')\n    .then(rsrc => {\n      const url = `${rsrc.find(e => e.id === 'screenerapi').url}${query}`;\n      return server.request(url, null, {\n        method: 'GET',\n        responseType: 'json',\n        withCredentials : true\n      });\n    });\n}\n\n\nfunction getRawValuesByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const values = plt.wells.compoundIds.map((c, i) => {\n        if (c !== null) return { ID: c, rawValue: plt.wells.rawValues[i]};\n      }).filter(e => e !== undefined);\n      Array.prototype.push.apply(rcds, values);\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByQcs = getRawValuesByQcs;\n\n\nfunction getRawValuesMappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      plt.wells.compoundIds.forEach((c, i) => {\n        if (compoundIds.includes(c)) {\n          mapping[c] = plt.wells.rawValues[i];\n        }\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getRawValuesMappingColumn = getRawValuesMappingColumn;\n\n\nfunction getRawValuesByCompound(compoundId) {\n  const query = `/plates?q=wells.compoundIds%3A${compoundId}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const i = plt.wells.compoundIds.findIndex(c => c === compoundId);\n      rcds.push({\n        qcsRefId: plt.qcsRefId,\n        layerIndex: plt.layerIndex,\n        rawValue: plt.wells.rawValues[i]\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByCompound = getRawValuesByCompound;\n\n\nfunction getFittingByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByQcs = getFittingByQcs;\n\n\nfunction getAC50MappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.linearAC50`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.compounds.forEach(c => {\n      if (compoundIds.includes(c.compoundId)) {\n        mapping[c] = c.fitting.linearAC50;\n      }\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getAC50MappingColumn = getAC50MappingColumn;\n\n\nfunction getFittingByCompound(compoundId) {\n  const query = `/compounds?q=compoundId%3A${compoundId}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100,\n        qcsRefId: c.qcsRefId,\n        layerIndex: c.layerIndex\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByCompound = getFittingByCompound;\n\n\nfunction getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n  const query = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n  return request(query);\n}\nexports.getDrcPlot = getDrcPlot;\n\n\nfunction getQcsInfo(qcsRefIds) {\n  const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n  const query = `/qcSessions?q=${ids}`;\n  return request(query).then(res => res.qcSessions);\n}\nexports.getQcsInfo = getQcsInfo;\n\nfunction getAllResults(qcsRefId, layerIdx) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdx}\\\n&limit=200\\\n&fields=barcode%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => res);\n}\nexports.getAllResults = getAllResults;\n\n\nfunction getPlateStats(allResults) {\n  const plates = allResults.plates;\n  const parsed = plates.map(p => {\n    const lowMean = p.wellTypes.NEUTRAL_CONTROL.mean;\n    const lowStdDev = p.wellTypes.NEUTRAL_CONTROL.sd;\n    const highMean = p.wellTypes.INHIBITOR_CONTROL.mean;\n    const highStdDev = p.wellTypes.INHIBITOR_CONTROL.sd;\n    return {\n      barcode: p.barcode,\n      lowCtrlMean: lowMean,\n      lowCtrlStdDev: lowStdDev,\n      lowCtrlCV: lowStdDev / lowMean * 100,\n      highCtrlMean: highMean,\n      highCtrlStdDev: highStdDev,\n      highCtrlCV: highStdDev / highMean * 100,\n      SignalBackground: lowMean / highMean,\n      zPrime: p.zPrime\n    };\n  });\n  return parsed;\n}\nexports.getPlateStats = getPlateStats;\n\n\nfunction getWellValues(allResults) {\n  const plates = allResults.plates;\n  const results = {};\n  plates.forEach(p => {\n    p.wells.compoundIds.forEach((value, i) => {\n      if (value !== null) {\n        results[value] = p.wells.rawValues[i];\n      }\n    });\n  });\n  return results;\n}\nexports.getWellValues = getWellValues;\n\n\nfunction getFirstPlateValues(qcsRefId, layerIdxs) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdxs}\\\n&q=plateIndex%3A0\\\n&fields=layerIndex%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => {\n    const results = {};\n    res.plates.forEach(p => {\n      const idx = p.layerIndex;\n      p.wells.compoundIds.forEach(value => {\n        if (value !== null) {\n          if (!results.hasOwnProperty(value)) {\n            results[value] = {};\n          }\n          results[value][idx] = p.wells.rawValues[idx];\n        }\n      });\n    });\n  });\n}\nexports.getFirstPlateValues = getFirstPlateValues;\n*/\n","\nimport {ScreenerFitting, ScreenerRawValue} from './Screener.js';\n\n\nexport class ScreenerFittingStub extends ScreenerFitting {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting_stub.yaml';\n  }\n\n  fittingStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n      {ID: 'DB00189', drcPlot: 'dummy1', AC50: 2.1e-6, hill: 1.1, source: 'target1_validation'},\n      {ID: 'DB00193', drcPlot: 'dummy2', AC50: 4.2e-6, hill: null, source: 'target1_validation'},\n      {ID: 'DB00203', drcPlot: 'dummy3', AC50: 1.0e-5, hill: 0.9, source: 'target1_validation'},\n      {ID: 'DB00865', drcPlot: 'dummy4', AC50: 8.8e-8, hill: 2.1, source: 'target1_validation'},\n      {ID: 'DB01143', drcPlot: 'dummy5', AC50: 'n.d.', hill: null, source: 'target1_validation'},\n      {ID: 'DB01240', drcPlot: 'dummy6', AC50: null, hill: null, source: 'target1_validation'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.fittingStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.fittingStub({qcsRefId: 'QCS-YYYY', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n\n  qcsInfoStub(ids) {\n    if (!Array.isArray(ids)) throw `${ids} is not a string`;\n    const layers = [\n      {layerIndex: 0, name: 'Activity%'},\n      {layerIndex: 1, name: 'Background%'},\n      {layerIndex: 2, name: 'Correction'}\n    ];\n    return [\n      {qcsRefId: 'QCS-XXX0', name: 'hoge', layers: layers},\n      {qcsRefId: 'QCS-XXX1', name: 'fuga', layers: layers},\n      {qcsRefId: 'QCS-XXX2', name: 'piyo', layers: layers}\n    ];\n  }\n\n  getQcsInfo(qcsRefIds) {\n    return Promise.resolve(this.qcsInfoStub(qcsRefIds));\n  }\n}\n\n\nexport class ScreenerRawValueStub extends ScreenerRawValue {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue_stub.yaml';\n  }\n\n  rawValueStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n        {ID: 'DB00189', rawValue: 12.7, source: 'target1_screen'},\n        {ID: 'DB00193', rawValue: 43.6, source: 'target1_screen'},\n        {ID: 'DB00203', rawValue: 102.6, source: 'target1_screen'},\n        {ID: 'DB00865', rawValue: -0.6, source: 'target1_screen'},\n        {ID: 'DB01143', rawValue: 50, source: 'target1_screen'},\n        {ID: 'DB01240', rawValue: null, source: 'target1_screen'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.rawValueStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.rawValueStub({qcsRefId: 'QCS-XXXX', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n}\n","\n/** @module header */\n\nimport d3 from 'd3';\nimport {default as def} from '../helper/definition.js';\n\n\nfunction renderStatus(tbl, refresh_callback, abort_callback) {\n  d3.select('#loading-circle').style('display', 'none');\n  if (!tbl.hasOwnProperty('status')) tbl.status = 'Completed';\n  d3.select('title').text(tbl.name);\n  d3.select('#title').text(tbl.name);\n  d3.select('#refresh')\n    .text(tbl.status === 'Aborting' ? 'Abort requested' : 'Refresh')\n    .style('display', def.fetchable(tbl) ? 'inline-block' : 'none');\n  d3.select('#abort')\n    .style('display', def.abortRequestable(tbl) ? 'inline-block' : 'none');\n  const doneText = {\n    'datatable': 'entries found',\n    'connection': 'connections created'\n  };\n  const dtx = doneText[tbl.format];\n  d3.select('#progress')\n    .text(`(${tbl.status} - ${tbl.recordCount} ${dtx} in ${tbl.execTime} sec.)`);\n  if (tbl.status === 'In progress') {\n    d3.select('#progress').append('div').append('progress')\n      .attr('max', 100)\n      .attr('value', tbl.progress)\n      .text(`${tbl.progress}%`);\n  }\n  d3.select('#refresh').on('click', refresh_callback);\n  d3.select('#abort')\n    .on('click', () => {\n      d3.select('#confirm-message')\n        .text('Are you sure you want to abort this calculation job?');\n      d3.select('#confirm-submit')\n        .classed('btn-primary', false)\n        .classed('btn-warning', true)\n        .on('click', () => {\n          abort_callback();\n        });\n    });\n  console.info('Query');\n  console.info(tbl.query);  // query datails are available on browser console.\n}\n\n\nfunction initializeWithData() {\n  d3.select('#new-data').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n}\n\n\nfunction initialize() {\n  d3.select('#data-control').style('display', 'none');\n  d3.select('#nodedata').style('display', 'none');\n  d3.select('#refresh').style('display', 'none');\n  d3.select('#abort').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n  d3.select('#status').selectAll('li').style('display', 'none');\n}\n\n\nexport default {\n  renderStatus, initializeWithData, initialize\n};\n","\n/** @module dataStructure */\n\nfunction columnMappingToTable(mapping) {\n  const keyCol = {\n    key: mapping.key,\n    name: mapping.key,\n    sort: 'text',\n    visible: true\n  };\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  const tbl = {\n    columns: [keyCol].concat(cols),\n    records: Object.entries(mapping.mapping).map(entry => {\n      const rcd = {};\n      rcd[mapping.key] = entry[0];\n      if (mapping.hasOwnProperty('column')) {\n        rcd[mapping.column.key] = entry[1];\n      } else {\n        const colKeys = mapping.columns.map(col => col.key);\n        entry[1].forEach((val, i) => {\n          rcd[colKeys[i]] = val;\n        });\n      }\n      return rcd;\n    })\n  };\n  return tbl;\n}\n\n\nfunction csvToMapping(csvString) {\n  const lines = csvString.split(/\\n|\\r|\\r\\n/);\n  const header = lines.shift().split(',');\n  const key = header.shift();\n  const now = new Date();\n  const mapping = {\n    created: now.toString(),\n    columns: [],\n    key: key,\n    mapping: {}\n  };\n  const headerIdx = [];\n  header.forEach((h, i) => {\n    if (h === '') return;\n    headerIdx.push(i);\n    mapping.columns.push({key: h, name: h, sort: 'text', visible: true});\n  });\n  lines.forEach(line => {\n    const values = line.split(',');\n    const k = values.shift();\n    mapping.mapping[k] = Array(headerIdx.length);\n    headerIdx.forEach(i => {\n      mapping.mapping[k][i] = values[i];\n    });\n  });\n  return mapping;\n}\n\nfunction singleToMultiMapping(mapping) {\n  const newMapping = {};\n  Object.entries(mapping.mapping).forEach(m => {\n    newMapping[m[0]] = [m[1]];\n  });\n  return {\n    created: mapping.created,\n    columns: [mapping.column],\n    key: mapping.key,\n    mapping: newMapping\n  };\n}\n\n\nexport default {\n  columnMappingToTable, csvToMapping, singleToMultiMapping\n};\n","\n/** @module parser */\n\nfunction getSDFPropList(str) {\n  const re = />.*?<(\\S+)>/g;\n  const uniqCols = new Set();\n  let arr;\n  while ((arr = re.exec(str)) !== null) {\n    uniqCols.add(arr[1]);\n  }\n  return Array.from(uniqCols);\n}\n\n\nexport default {\n  getSDFPropList\n};\n","\n/** @module image */\n\nimport vega from 'vega';\n\nfunction showPlot(vegaSpec, selector) {\n  new vega.View(vega.parse(vegaSpec))\n    .initialize(selector)\n    .run();\n\n}\n\nfunction plotThumbnail(vegaSpec) {\n  const view = new vega.View(vega.parse(vegaSpec));\n  return view.toImageURL('png');  // Promise\n}\n\n\nexport default {\n  showPlot, plotThumbnail\n};\n","\nimport d3 from 'd3';\n\nconst fieldWidth = 1200;\nconst fieldHeight = 1200;\n\nconst simulation = d3.forceSimulation()\n  .force('link',\n    d3.forceLink().id(d => d._index)\n      .distance(60)\n      .strength(1))\n  .force('charge',\n    d3.forceManyBody()\n      .strength(-600)\n      .distanceMin(15)\n      .distanceMax(720))\n  .force('collide',\n    d3.forceCollide()\n      .radius(90))\n  .force('center',\n    d3.forceCenter(fieldWidth / 2, fieldHeight / 2))\n  .force('x',\n    d3.forceX()\n      .strength(0.002))\n  .force('y',\n    d3.forceY()\n      .strength(0.002))\n  .stop();\n\n\nfunction setForce(nodes, edges, tick, end) {\n  simulation.nodes(nodes)\n    .force('link').links(edges);\n  simulation.on('tick', tick)\n    .on('end', end);\n}\n\n\nfunction tick() {\n  d3.select('#graph-contents').selectAll('.node')\n    .attr('transform', d => `translate(${d.x}, ${d.y})`);\n  const alpha = simulation.alpha();\n  const isStopped = alpha <= simulation.alphaMin();\n  d3.select('#temperature')\n    .classed('progress-success', isStopped)\n    .classed('progress-warning', !isStopped)\n    .attr('value', isStopped ? 1 : 1 - alpha)\n    .text(isStopped ? 1 : 1 - alpha);\n}\n\n\nfunction end() {\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.edge-line')\n    .attr('x1', 0)\n    .attr('y1', 0)\n    .attr('x2', d => d.target.x - d.source.x)\n    .attr('y2', d => d.target.y - d.source.y);\n  d3.select('#graph-contents').selectAll('.edge-label')\n    .attr('x', d => (d.target.x - d.source.x) / 2)\n    .attr('y', d => (d.target.y - d.source.y) / 2);\n}\n\n\nexport default {\n  fieldWidth, fieldHeight, simulation, setForce, tick, end\n};\n","\nfunction graphNodes(selection, data) {\n  const nodes = selection.selectAll('.node')\n    .data(data, d => d.key);\n  nodes.exit().remove();\n  const entered = nodes.enter().append('g')\n    .attr('class', 'node');\n  entered.append('circle')\n    .attr('class', 'node-symbol');\n  entered.append('g')\n    .attr('class', 'node-struct');\n  entered.append('text')\n    .attr('class', 'node-label');\n  const updated = entered.merge(nodes);\n  updated.select('.node-symbol')\n    .attr('r', 20)\n    .style('fill', '#6c6');\n  updated.select('.node-struct')\n    .attr('visibility', 'hidden')\n    .html(d => d._structure);\n  updated.select('.node-label')\n    .attr('visibility', 'hidden')\n    .attr('x', 0)\n    .attr('y', 20 + 10)\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle');\n}\n\n\nfunction graphEdges(selection, data) {\n  const edges = selection.selectAll('.link')\n    .data(data, d => `${d.source}_${d.target}`);\n  edges.exit().remove();\n  const entered = edges.enter().append('g')\n    .attr('class', 'link');\n  entered.append('line')\n    .attr('class', 'edge-line');\n  entered.append('text')\n    .attr('class', 'edge-label');\n  const updated = entered.merge(edges);\n  updated.select('.edge-line')\n    .style('stroke', '#999')\n    .style('stroke-opacity', 0.6);\n  updated.select('.edge-label')\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle')\n    .attr('visibility', 'hidden')\n    .text(d => d.weight);\n}\n\n\nexport default {\n  graphNodes, graphEdges\n};\n","\nimport jLouvain from 'jLouvain';\n\n\nexport function communityDetection(nodes, edges, option) {\n  // TODO: partition resolution setting\n  // TODO: Error at edges.length 0\n  const community = jLouvain().nodes(nodes).edges(edges)();\n  // assign null to singletons\n  if (option.nulliso) {\n    const clusters = {};\n    Object.entries(community).forEach(e => {\n      if (!clusters.hasOwnProperty(e[1])) {\n        clusters[e[1]] = [];\n      }\n      clusters[e[1]].push(e[0]);\n    });\n    Object.entries(clusters).forEach(e => {\n      if (e[1].length === 1) {\n        community[e[1][0]] = null;\n      }\n    });\n  }\n  return community;\n}\n\n\nexport default {\n  communityDetection\n};\n"],"names":["readFile","file","sizeLimit","blob","Promise","resolve","reject","reader","FileReader","truncated","slice","onload","event","target","result","onerror","error","readAsArrayBuffer","readAsText","parseJSON","data","compressed","text","pako","inflate","to","JSON","parse","downloadDataFile","name","url","window","URL","createObjectURL","Blob","a","document","createElement","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","e","getGlobalConfig","key","globalConfig","getResources","domains","store","then","rsrcs","filter","includes","domain","getCurrentTable","q","hasOwnProperty","getItemById","id","updateTableAttribute","tblID","value","updateItem","item","initialize","navigator","debug","serviceWorker","register","registration","console","info","scope","catch","err","serverTmpl","localServer","templates","res","setGlobalConfig","serverConfig","status","rsrcFetched","fetcherInstances","map","api","extendAsync","indexed","i","idx","setResources","all","numericAsc","b","fa","parseFloat","fb","isNaN","String","localeCompare","textAsc","updateTableRecords","selection","rcds","keyFunc","header","select","selectAll","rowSelection","exit","remove","rowEntered","enter","append","d","merge","classed","html","undefined","valueType","digit","fmt","formatNum","mergeDataSourceColumns","getDataSourceColumns","dataSource","cols","getFetcher","formatResult","colorControlInput","column","d3form","optionData","preset","scale","unknown","range","checked","push","labelControlInput","size","visible","sizeControlInput","nodeSizeControlInput","nodeContentInput","structure","edgeControlInput","label","updateNodeColor","d3","style","d3scale","scaleFunction","updateNodeSize","attr","updateNodeLabelVisibility","updateNodeLabel","updateNodeStructure","each","nds","w","h","updateEdgeVisibility","updateEdgeLabelVisibility","updateEdge","weight","updateRange","length","property","updateScale","hasDomain","updateControl","colorControlBox","columns","call","cmp","selectOptions","colorPresets","on","this","dispatch","colorPalette","scaleTypes","sizeControlBox","presets","sizeScaleTypes","unstickNodes","fx","fy","dragWithForce","takeSnapshot","nodePositions","x","y","fieldTransform","zoomTransform","node","nodeContent","datum","nodeColor","nodeSize","nodeLabel","edge","saveSnapshot","currentId","resume","snapshot","control","tf","transform","zoomIdentity","translate","k","interaction","zoom","updateNodeImage","getCurrentGraph","edges","getTable","nodeTableId","nodes","start","g","renderStatus","refresh","abort","edgesToDraw","records","networkThreshold","edgeDensity","format","searchCount","component","graphEdges","graphNodes","force","setForce","tick","end","stickNodes","restart","transition","duration","render","forEach","_mol","dialog","graphConfigDialog","thld","communityDialog","query","nodeIds","_index","visibleEdges","comm","community","communityDetection","nulliso","mapping","sort","joinColumn","find","mainControlBox","nodeColorControlBox","nodeSizeControlBox","nodeLabelControlBox","edgeControlBox","relax","t","fetch_","command","def","fetchable","getRecords","updateTable","isUpdated","loadNewGraph","grf","insertTable","location","selector","valueInt","parseInt","valueFloat","firstFile","files","checkboxValues","optionValues","textareaLines","split","si","checkboxData","categoryMany","schemeSet1","concat","schemeSet3","schemePastel2","schemeSet2","defaultSizeRange","schemeCategory20","sizePresets","edgeWidthPresets","func","scaleLinear","scaleLog","scaleQuantize","scaleOrdinal","sf","mid","clamp","tbl","abortRequestable","conclike","col","dataSourceId","resource","capitalize","join","loadJSON","endsWith","fetchJSON","decoded","decodeURIComponent","fetch","arrayBuffer","json","downloadJSON","compress","str","stringify","gzip","schema","app","items","resources","idb","Dexie","version","stores","getAppSetting","where","equals","first","putAppSetting","v","put","orderBy","toArray","putResources","bulkPut","getAllItems","reverse","getItemsByFormat","sortBy","tableId","callback","modify","deleteItem","delete","putItem","Fetcher","[object Object]","baseURL","available","formData","options","xhr","XMLHttpRequest","open","method","responseType","withCredentials","response","send","Date","toString","lastUpdated","now","LocalServerActivity","super","entities","FormData","set","body","credentials","Map","Object","entries","Array","isArray","request","rsrc","dataColumn","entity","queries","serializedRequest","compound","targets","values","operator","ids","row","ID","LocalServerChemical","hiddenColumns","prototype","apply","extraColumns","ScreenerFitting","resourceFile","enabled","qcsRefId","layerIndex","queryString","compounds","c","compoundId","drcPlot","fitting","AC50","linearAC50","hill","Math","round","hillCoefficient","qcsRefIds","requestRecords","refid_layer","plotId","min","max","qcSessions","ScreenerRawValue","pred","plates","plt","wells","compoundIds","rawValue","rawValues","extend","ScreenerFittingStub","source","fittingStub","layers","qcsInfoStub","ScreenerRawValueStub","rawValueStub","onLine","server","urlQuery","search","substring","API","chemical","activity","screenerrawvalue","screenerfitting","screenerrawvaluestub","screenerfittingstub","localChemInstance","get","from","dataFetcherInstances","dataFetcherDomains","getResourceColumns","tags","getAllTables","getTablesByFormat","getCurrentRecords","setColumnsToShow","updates","visibles","sorts","digits","rcd","unique","update","responseDate","recordCount","searchDoneCount","execTime","progress","assign","deleteTable","reset","loader","protocol","refresh_callback","abort_callback","dtx","datatable","connection","initializeWithData","columnMappingToTable","keyCol","entry","colKeys","val","csvToMapping","csvString","lines","shift","created","headerIdx","line","singleToMultiMapping","newMapping","m","type","conv","scientific","rounded","Number","partialMatch","toUpperCase","indexOf","numericDesc","textDesc","getSDFPropList","re","uniqCols","Set","arr","exec","add","showPlot","vegaSpec","vega","View","run","plotThumbnail","toImageURL","checkboxList","entered","updated","createTable","appendTableRows","newRcds","addSort","isAsc","isNum","formatNumbers","colIdx","pickDialog","rsrctbl","placeholders","propDialog","selectedColumn","structDialog","op","selectedOptions","querySource","strprev","mthdop","thresholdType","threshold","ignoreHs","diameter","maxTreeSize","molSizeCutoff","timeout","sdfDialog","getElementById","parser","contents","implh","recalc","importSDF","columnDialog","coltbl","cell","joinDialog","addEventListener","keyCode","preventDefault","shownCols","ex","match","selectedCols","mpgs","getMapping","importColDialog","isCsv","pop","hfile","dstr","plotCols","ps","p","himg","img","graphDialog","measure","indices","molecules","newThld","simulation","forceSimulation","forceLink","distance","strength","forceManyBody","distanceMin","distanceMax","forceCollide","radius","forceCenter","fieldWidth","fieldHeight","forceX","forceY","stop","links","alpha","isStopped","alphaMin","textCols","numCols","_structure","drag","active","alphaTarget","dragNoForce","connected","index","__data__","fitToScreen","option","jLouvain","clusters","click","tbls"],"mappings":"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"}