{"version":3,"file":"graph.js","sources":["../src/helper/d3Selection.js","../src/helper/d3Scale.js","../src/helper/definition.js","../src/helper/file.js","../src/store/StoreConnection.js","../src/Loader.js","../src/component/Header.js","../src/helper/formatValue.js","../src/component/Component.js","../src/component/Dialog.js","../src/graph/GraphForce.js","../src/graph/GraphControlBox.js","../src/graph/GraphComponent.js","../src/graph/GraphInteraction.js","../src/graph/communityDetection.js","../src/graph.js","../src/store/IDBStore.js","../src/fetcher/Fetcher.js","../src/fetcher/LocalServer.js","../src/fetcher/Screener.js","../src/fetcher/ScreenerTestStub.js"],"sourcesContent":["\nimport d3 from 'd3';\n\n\nexport function formValue(selector) {\n  return d3.select(selector).node().value;\n}\n\n\nexport function formInt(selector) {\n  return parseInt(d3.select(selector).node().value);\n}\n\n\nexport function formFloat(selector) {\n  return parseFloat(d3.select(selector).node().value);\n}\n\n\nexport function formChecked(selector) {\n  return d3.select(selector).node().checked;\n}\n\n\nexport function firstFile(selector) {\n  return d3.select(selector).node().files[0];\n}\n\n\nexport function checkboxValues(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').nodes().map(e => e.value);\n}\n\n\nexport function selectedOptionValues(selector) {\n  return d3.selectAll(selector).selectAll('select').nodes().map(e => e.value);\n}\n\n\nexport function textareaLines(selector) {\n  return d3.select(selector).node().value.split('\\n').filter(e => e.length > 0);\n}\n\n\nexport function selectedOptionData(selector) {\n  const si = d3.select(selector).property('selectedIndex');\n  return d3.select(selector).selectAll('option').data().find((d, i) => i === si);\n}\n\n\nexport function selectedCheckboxesData(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').data();\n}\n","\nimport d3 from 'd3';\n\nconst categoryMany = d3.schemeSet1\n  .concat(d3.schemeSet3, d3.schemePastel2, d3.schemeSet2);\nconst defaultSizeRange = [20, 80];\n\nexport const colorPresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 8],\n      range: ['#6495ed', '#ccff66', '#ffa500'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Categories',\n    scale: {\n      scale: 'ordinal',\n      range: d3.schemeCategory20,\n      unknown: '#dedede'\n    }\n  },\n  {\n    name: 'ManyCategories',\n    scale: {\n      scale: 'ordinal',\n      range: categoryMany,\n      unknown: '#dedede'\n    }\n  }\n];\n\nexport const sizePresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  }\n];\n\nexport const edgeWidthPresets = [\n  {\n    name: 'Universal',\n    scale: {\n      scale: 'linear',\n      domain: [0.3, 1],\n      range: [0.5, 5],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Thin',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [0.5, 3],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Amplified',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [1, 10],\n      unknown: 1\n    }\n  }\n];\n\nexport const colorPalette = [\n  {name: 'Aquamarine', range: ['#778899', '#7fffd4'], unknown: '#696969'},\n  {name: 'Chartreuse', range: ['#778899', '#7fff00'], unknown: '#696969'},\n  {name: 'Salmon', range: ['#778899', '#fa8072'], unknown: '#696969'},\n  {name: 'Violet', range: ['#778899', '#ee82ee'], unknown: '#696969'},\n  {name: 'blue-red', range: ['#87ceeb', '#fff5ee', '#fa8072'], unknown: '#696969'},\n  {name: 'Spectrum', range: ['#6495ed', '#ccff66', '#ffa500'], unknown: '#696969'}\n];\n\nexport const scaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()},\n  {name: 'ordinal', func: d3.scaleOrdinal()}\n];\n\nexport const sizeScaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()}\n];\n\nexport function scaleFunction(scale) {\n  let sf = scaleTypes.find(e => e.name === scale.scale).func;\n  let domain = scale.domain;\n  if (scale.range.length === 3) {\n    const mid = (parseFloat(scale.domain[0]) + parseFloat(scale.domain[1])) / 2;\n    domain = [scale.domain[0], mid, scale.domain[1]];\n  }\n  if (scale.scale !== 'ordinal') {\n    sf = sf.domain(domain);\n  }\n  sf = sf.range(scale.range);\n  if (['linear', 'log'].includes(scale.scale)) {\n    sf = sf.clamp(true);\n  }\n  return d => {\n    if (d === '' || typeof d === 'undefined' || d === null) {\n      return scale.unknown;\n    }\n    if (scale.scale !== 'ordinal' && parseFloat(d) != d) {\n      return scale.unknown;\n    }\n    if (scale.scale === 'log' && d <= 0) {\n      return scale.unknown;\n    }\n    const result = sf(d);\n    if (result === undefined) {\n      return scale.unknown;\n    }\n    return result;\n  };\n}\n","\nexport function fetchable(tbl) {\n  return ['In progress', 'Queued', 'Aborting'].includes(tbl.status);\n}\n\n\nexport function abortRequestable(tbl) {\n  return ['In progress', 'Queued'].includes(tbl.status);\n}\n\n\nexport function conclike(col) {\n  return col.hasOwnProperty('valueType')\n    && ['AC50', 'IC50', 'ED50'].includes(col.valueType);\n}\n\n\nexport function dataSourceId(domain, resource, column) {\n  return [domain, resource, column]\n    .map(e => e.capitalize())\n    .join('');  // DomainResourceColumn\n}\n","\nimport pako from 'pako';\n\n\nexport function readFile(file, sizeLimit, blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const truncated = sizeLimit ? file.slice(0, sizeLimit) : file;\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    if (blob) {\n      reader.readAsArrayBuffer(truncated);\n    } else {\n      reader.readAsText(truncated);\n    }\n  });\n}\n\n\nexport function parseJSON(data, compressed) {\n  const text = compressed ? pako.inflate(data, {to: 'string'}) : data;\n  return JSON.parse(text);\n}\n\n\nexport function loadJSON(file) {\n  const compressed = file.name.endsWith('.gz');\n  return readFile(file, false, compressed)\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function fetchJSON(url) {\n  const decoded = decodeURIComponent(url);\n  const compressed = decoded.endsWith('.gz');\n  return fetch(decoded)\n    .then(res => compressed ? res.arrayBuffer() : res.json())\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function downloadDataFile(data, name) {\n  try {\n    // cannot hundle large file with dataURI scheme\n    // url = \"data:application/json,\" + encodeURIComponent(JSON.stringify(json))\n    const url = window.URL.createObjectURL(new Blob([data]));\n    const a = document.createElement('a');\n    a.download = name;\n    a.href = url;\n    // a.click() does not work on firefox\n    a.dispatchEvent(new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    }));\n    // window.URL.revokeObjectURL(url) does not work on firefox\n  } catch (e) {\n    // no DOM (unit testing)\n  }\n}\n\n\nexport function downloadJSON(json, name, compress=true) {\n  const str = JSON.stringify(json);\n  const data = compress ? pako.gzip(str) : str;\n  const ext = compress ? '.gz' : '';\n  downloadDataFile(data, `${name}.json${ext}`);\n}\n","\nimport {dataSourceId} from '../helper/definition.js';\nimport {default as store} from './IDBStore.js';\nimport {LocalServerActivity, LocalServerChemical} from '../fetcher/LocalServer.js';\nimport {ScreenerFitting, ScreenerRawValue} from '../fetcher/Screener.js';\nimport {ScreenerFittingStub, ScreenerRawValueStub} from '../fetcher/ScreenerTestStub.js';\n\n\n// Global config\n\nconst globalConfig = {\n  \"onLine\": true,\n  \"server\": {},\n  \"templates\": {},\n  \"urlQuery\": {}\n};\n\nwindow.location.search.substring(1).split(\"&\")\n  .map(e => e.split('=')).forEach(e => {\n    globalConfig.urlQuery[e[0]] = e[1];\n  });\n\n\nexport function getGlobalConfig(key) {\n  return globalConfig[key];\n}\n\n\nexport function setGlobalConfig(key, value) {\n  globalConfig[key] = value;\n}\n\n\n// API instances\n\nconst API = new Map(Object.entries({\n  chemical: new LocalServerChemical(),\n  activity: new LocalServerActivity(),\n  screenerrawvalue: new ScreenerRawValue(),\n  screenerfitting: new ScreenerFitting(),\n  screenerrawvaluestub: new ScreenerRawValueStub(),\n  screenerfittingstub: new ScreenerFittingStub()\n}));\n\n\nexport function localChemInstance() {\n  return API.get('chemical');\n}\n\n\nexport function getFetcher(domain) {\n  return API.get(domain);\n}\n\n\nexport function fetcherInstances() {\n  return Array.from(API.values());\n}\n\n\nexport function dataFetcherInstances() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(v);\n  });\n  return res;\n}\n\n\nexport function dataFetcherDomains() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(k);\n  });\n  return res;\n}\n\n\n// API data resource on local IndexedDB\n\nexport function getResources(domains) {\n  return store.getResources().then(rsrcs => {\n    return rsrcs.filter(e => domains.includes(e.domain));\n  });\n}\n\n\nexport function setResources(rsrcs) {\n  return store.putResources(rsrcs);\n}\n\n\nexport function getResourceColumns(domains) {\n  return getResources(domains).then(rsrcs => {\n    return rsrcs.map(rsrc => {\n      return rsrc.columns.map(col => {\n        col.domain = rsrc.domain;\n        col.key = dataSourceId(rsrc.domain, rsrc.id, col.key);\n        col.entity = rsrc.entity;\n        if (!col.hasOwnProperty('tags')) col.tags = rsrc.tags;\n        return col;\n      });\n    }).extend();\n  });\n}\n\n\nexport function getDataSourceColumns(domain, ids) {\n  return store.getResources([domain]).then(rsrcs => {\n    return ids.map(d => rsrcs.find(e => e.id === d).columns)\n      .extend();\n  });\n}\n\n\n// Datatable on local IndexedDB\n\nexport function getAllTables() {\n  return store.getAllItems();\n}\n\n\nexport function getTablesByFormat(format) {\n  return store.getItemsByFormat(format);\n}\n\n\nexport function getTable(tableId) {\n  return store.getItemById(tableId);\n}\n\n\nexport function getRecords(tableId) {\n  return store.getItemById(tableId)\n    .then(tbl => tbl.records);\n}\n\n\nexport function getCurrentTable() {\n  const q = getGlobalConfig('urlQuery');\n  if (!q.hasOwnProperty('id')) return Promise.resolve();\n  return store.getItemById(q.id);\n}\n\n\nexport function getCurrentRecords() {\n  return getCurrentTable().then(tbl => tbl.records);\n}\n\n\nexport function setColumnsToShow(updates) {\n  return store.updateItem(getGlobalConfig('urlQuery').id, item => {\n    item.columns.forEach((col, i) => {\n      col.visible = updates.visibles.includes(col.key);\n      col.sort = updates.sorts[i];\n      col.digit = updates.digits[i];\n    });\n  });\n}\n\n\nexport function joinColumn(mapping, tableId=globalConfig.urlQuery.id) {\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  return store.updateItem(tableId, item => {\n    item.records\n      .filter(rcd => mapping.mapping.hasOwnProperty(rcd[mapping.key]))\n      .forEach(rcd => {\n        if (mapping.hasOwnProperty('column')) {\n          rcd[mapping.column.key] = mapping.mapping[rcd[mapping.key]];\n        } else {\n          mapping.columns.forEach((col, i) => {\n            rcd[col.key] = mapping.mapping[rcd[mapping.key]][i];\n          });\n        }\n      });\n    item.columns = item.columns.concat(cols).unique('key');\n    item.lastUpdated = mapping.lastUpdated;\n  });\n}\n\n\nexport function updateTableAttribute(tblID, key, value) {\n  return store.updateItem(tblID, item => {\n    item[key] = value;\n  });\n}\n\n\nexport function insertTable(data) {\n  return store.putItem(data);\n}\n\n\nexport function updateTable(data) {\n  if (data === undefined) return Promise.resolve();  // No update\n  if (data.status === 'Failure') {  // No data found on server\n    return updateTableAttribute(data.id, 'status', 'Failure');\n  }\n  // update\n  return store.updateItem(data.id, item => {\n    const update = {\n      responseDate: data.responseDate,\n      records: data.records,\n      columns: data.columns,\n      recordCount: data.recordCount,\n      searchDoneCount: data.searchDoneCount,\n      execTime: data.execTime,\n      progress: data.progress,\n      status: data.status,\n    };\n    if (data.hasOwnProperty('lastUpdated')) {\n      update.lastUpdated = data.lastUpdated;\n    }\n    Object.assign(item, update);\n  });\n}\n\n\nexport function deleteTable(id) {\n  return store.deleteItem(id);\n}\n\n\nexport function reset() {\n  return store.reset();\n}\n","\nimport {\n  setGlobalConfig, localChemInstance, fetcherInstances, setResources\n} from './store/StoreConnection.js';\n\nconst localServer = localChemInstance();\n\n\nfunction initialize() {\n  if ('serviceWorker' in navigator && !debug) {\n    navigator.serviceWorker\n      .register('sw.js')\n      .then(registration => {\n        console.info(\n          'ServiceWorker registration successful with scope: ',\n          registration.scope\n        );\n      }).catch(err => {\n        console.info('ServiceWorker registration failed: ', err);\n      });\n  } else if (debug) {\n    console.info('Off-line mode is disabled for debugging');\n  } else {\n    console.info('Off-line mode is not supported');\n  }\n  const serverTmpl = localServer.templates().then(res => {\n    setGlobalConfig('templates', res.templates);\n  });\n  const serverConfig = localServer.status().then(res => {\n    setGlobalConfig('server', res);\n  });\n  // TODO: skip loader if there is already resources in the store\n  // 1. collate resource version\n  // 2. if no local resource or server resource is newer, fetch\n  const rsrcFetched = fetcherInstances()\n    .map(api => api.getResources())\n    .extendAsync().then(res => {\n      const indexed = res.map((e, i) => {\n        e.idx = i;\n        return e;\n      });\n      return setResources(indexed);\n    });\n  return Promise.all([serverTmpl, serverConfig, rsrcFetched]);\n}\n\n\nexport function loader() {\n  if (document.location.protocol === \"file:\") {\n    console.info('Off-line mode (local file)');\n    setGlobalConfig('onLine', false);\n    return Promise.resolve();\n  }\n  if ('onLine' in navigator) {\n    if (!navigator.onLine) {\n      console.info('Off-line mode (no internet connection)');\n      setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    }\n  }\n  return fetch(`${localServer.baseURL}favicon.ico`)\n    .then(() => {\n      // HTTP 404\n      setGlobalConfig('onLine', true);\n      return initialize();\n    }).catch(() => {\n      console.info('Off-line mode (server not responding)');\n      setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    });\n}\n","\nimport d3 from 'd3';\nimport {fetchable, abortRequestable} from '../helper/definition.js';\n\n\nexport function renderStatus(tbl, refresh_callback, abort_callback) {\n  d3.select('#loading-circle').style('display', 'none');\n  if (!tbl.hasOwnProperty('status')) tbl.status = 'Completed';\n  d3.select('title').text(tbl.name);\n  d3.select('#title').text(tbl.name);\n  d3.select('#refresh')\n    .text(tbl.status === 'Aborting' ? 'Abort requested' : 'Refresh')\n    .style('display', fetchable(tbl) ? 'inline-block' : 'none');\n  d3.select('#abort')\n    .style('display', abortRequestable(tbl) ? 'inline-block' : 'none');\n  const doneText = {\n    'datatable': 'entries found',\n    'connection': 'connections created'\n  };\n  const dtx = doneText[tbl.format];\n  d3.select('#progress')\n    .text(`(${tbl.status} - ${tbl.recordCount} ${dtx} in ${tbl.execTime} sec.)`);\n  if (tbl.status === 'In progress') {\n    d3.select('#progress').append('div').append('progress')\n      .attr('max', 100)\n      .attr('value', tbl.progress)\n      .text(`${tbl.progress}%`);\n  }\n  d3.select('#refresh').on('click', refresh_callback);\n  d3.select('#abort')\n    .on('click', () => {\n      d3.select('#confirm-message')\n        .text('Are you sure you want to abort this calculation job?');\n      d3.select('#confirm-submit')\n        .classed('btn-primary', false)\n        .classed('btn-warning', true)\n        .on('click', () => {\n          abort_callback();\n        });\n    });\n  console.info('Query');\n  console.info(tbl.query);  // query datails are available on browser console.\n}\n\n\nexport function initializeWithData() {\n  d3.select('#new-data').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n}\n\n\nexport function initialize() {\n  d3.select('#data-control').style('display', 'none');\n  d3.select('#nodedata').style('display', 'none');\n  d3.select('#refresh').style('display', 'none');\n  d3.select('#abort').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n  d3.select('#status').selectAll('li').style('display', 'none');\n}\n","\nimport d3 from 'd3';\n\n\n/**\n * Format number\n * @param {object} value - value\n * @param {string} type - si | scientific | rounded | raw\n */\nexport function formatNum(value, type) {\n  const conv = {\n    scientific: \".3e\",\n    si: \".3s\",\n    rounded: \".3r\"\n  };\n  if (type === 'raw') return value;\n  if (value === undefined || value === null || Number.isNaN(value)) return '';\n  return value == parseFloat(value) ? d3.format(conv[type])(value) : value;\n}\n\nexport function partialMatch(query, target) {\n  if (target === undefined || target === null || target === '') return false;\n  return target.toString().toUpperCase()\n    .indexOf(query.toString().toUpperCase()) !== -1;\n}\n\nexport function numericAsc(a, b) {\n  const fa = parseFloat(a);\n  const fb = parseFloat(b);\n  if (isNaN(fa) || isNaN(fb)) {\n    return String(b).localeCompare(String(a));\n  }\n  return fb - fa;\n}\n\n\nexport function numericDesc(a, b) {\n  return numericAsc(b, a);\n}\n\n\nexport function textAsc(a, b) {\n  return String(b).localeCompare(String(a));\n}\n\n\nexport function textDesc(a, b) {\n  return textAsc(b, a);\n}\n","\nimport d3 from 'd3';\nimport {\n  formatNum, numericAsc, textAsc, numericDesc, textDesc\n} from '../helper/formatValue.js';\n\n\nexport function selectOptions(selection, data, key, text) {\n  const options = selection.selectAll('option')\n    .data(data, key);\n  options.exit().remove();\n  options.enter().append('option')\n    .merge(options)\n      .attr('value', key)\n      .text(text);\n}\n\n\nexport function checkboxList(selection, data, name, key, text) {\n  const items = selection.selectAll('li').data(data, key);\n  items.exit().remove();\n  const entered = items.enter().append('li')\n    .attr('class', 'form-check')\n    .append('label');\n  entered.append('input');\n  entered.append('span');\n  const updated = entered.merge(items.select('label'))\n    .attr('class', 'form-check-label');\n  updated.select('input')\n    .attr('type', 'checkbox')\n    .attr('class', 'form-check-input')\n    .attr('name', name)\n    .attr('value', key);\n  updated.select('span')\n    .text(text);\n}\n\n\nexport function createTable(selection, tbl) {\n  // Header\n  if (!selection.select('thead').size()) {\n    selection.append('thead').append('tr');\n  }\n  // Records\n  if (!selection.select('tbody').size()) {\n    selection.append('tbody');\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false\n  );\n  const header = selection.select('thead tr').selectAll('th')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('th')\n    .merge(header)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nexport function updateTableRecords(selection, rcds, keyFunc) {\n  const header = selection.select('thead tr').selectAll('th')\n    .data();\n  const rowSelection = selection.select('tbody').selectAll('tr')\n    .data(rcds, keyFunc);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('tr');\n  rowEntered.selectAll('td')\n    .data(d => header.map(e => d[e.key]))\n    .enter().append('td');\n  rowEntered.merge(rowSelection)\n    .selectAll('td')\n    .classed('align-middle', true)\n    .html((d, i) => {\n      if (d === undefined) return '';\n      if (header[i].valueType === 'plot') return '[plot]';\n      if (header[i].valueType === 'image') return '[image]';\n      if (header[i].hasOwnProperty('digit') && header[i].digit !== 'raw') {\n        return formatNum(d, header[i].digit);\n      }\n      return d;\n    });\n}\n\n\nexport function appendTableRows(selection, rcds, keyFunc) {\n  const newRcds = selection.select('tbody').selectAll('tr').data();\n  Array.prototype.push.apply(newRcds, rcds);\n  updateTableRecords(selection, newRcds, keyFunc);\n}\n\n\nexport function addSort(selection) {\n  selection.select('thead tr').selectAll('th')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? numericAsc : textAsc)\n        : (isNum ? numericDesc : textDesc);\n      selection.select('tbody').selectAll('tr')\n        .sort((a, b) => cmp(a[d.key], b[d.key]));\n      d3.select(`#sort-${d.key}`)\n        .text(isAsc ? '^' : 'v');\n    });\n}\n\n\nexport function formatNumbers(selection) {\n  // DEPRECATED: no longer used\n  selection.select('thead tr').selectAll('th')\n    .each((col, colIdx) => {\n      if (!col.hasOwnProperty('digit') || col.digit === 'raw') return;\n      selection.select('tbody').selectAll('tr')\n        .selectAll('td')\n          .filter((d, i) => i === colIdx)\n          .text(d => formatNum(d, col.digit));\n    });\n}\n","\nimport d3 from 'd3';\nimport {\n  formValue, formInt, formFloat, formChecked,\n  checkboxValues, selectedOptionValues, textareaLines,\n  firstFile, selectedCheckboxesData, selectedOptionData\n} from '../helper/d3Selection.js';\nimport {\n  csvToMapping, columnMappingToTable, singleToMultiMapping\n} from '../helper/dataStructure.js';\nimport {partialMatch} from '../helper/formatValue.js';\nimport {readFile} from '../helper/file.js';\nimport {getSDFPropList} from '../helper/parser.js';\nimport {plotThumbnail} from '../helper/image.js';\nimport {\n  localChemInstance, getFetcher, dataFetcherDomains, getGlobalConfig,\n  getResourceColumns, getDataSourceColumns, setColumnsToShow\n} from '../store/StoreConnection.js';\nimport {\n  checkboxList, selectOptions, createTable, updateTableRecords\n} from './Component.js';\n\nconst localServer = localChemInstance();\n\n\nfunction mergeDataSourceColumns(data) {\n  return getDataSourceColumns(data.domain, data.dataSource)\n  .then(cols => getFetcher(data.domain).formatResult(cols, data));\n}\n\n\nexport function pickDialog(rsrc, callback) {\n  d3.select('#pick-target')\n    .call(selectOptions, rsrc, d => d.entity, d => d.name)\n    .on('change', function () {\n      const rsrctbl = selectedOptionData(this);\n      d3.select('#pick-queryarea').text(rsrctbl.placeholders.ID);\n    });\n  d3.select('#pick-queryarea').text(rsrc[0].placeholders.ID);  // initial value\n  d3.select('#pick-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        method: 'chemsql',\n        targets: [formValue('#pick-target')],\n        key: 'ID',\n        values: textareaLines('#pick-queryarea'),\n        operator: 'fm'\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nexport function propDialog(rsrc, callback) {\n  d3.select('#prop-targets')\n    .call(checkboxList, rsrc, 'targets', d => d.entity, d => d.name)\n    .on('change', function () {\n      const cols = selectedCheckboxesData('#prop-targets')\n        .map(d => d.columns)\n        .extend().unique('key');\n      d3.select('#prop-key')\n        .call(selectOptions, cols, d => d.key, d => d.name);\n    });\n  d3.select('#prop-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedColumn = selectedOptionData('#prop-key');\n      const query = {\n        method: selectedColumn.method,\n        targets: checkboxValues('#prop-targets'),\n        key: selectedColumn.key,\n        values: textareaLines('#prop-queryarea'),\n        operator: formValue('#prop-operator')\n      };\n      return localServer.getRecords(query)\n      .then(mergeDataSourceColumns)\n      .then(callback);\n    });\n}\n\n\nexport function structDialog(rsrc, callback) {\n  d3.select('#struct-qsrc')\n    .call(selectOptions, rsrc, d => d.entity, d => d.name);\n  d3.select('#struct-targets')\n    .call(checkboxList, rsrc, 'targets', d => d.entity, d => d.name);\n  d3.select('#struct-method').selectAll('option.rd')\n    .attr('disabled', getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#struct-method')\n    .on('change', function () {\n      const op = d3.select(this.selectedOptions[0]);\n      d3.select('#struct-thldtype')\n        .attr('disabled', op.classed('thld') ? null : 'disabled')\n        .property('value', op.classed('edge') ? 'edge' : 'sim');\n      d3.select('#struct-thld')\n        .attr('disabled', op.classed('thld') ? null : 'disabled');\n      d3.select('#struct-thldtype option.sim')\n        .attr('disabled', op.classed('sim') ? null : 'disabled');\n      d3.select('#struct-thldtype option.edge')\n        .attr('disabled', op.classed('edge') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.gls')\n        .attr('disabled', op.classed('gls') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n      d3.select('#struct-thld')\n        .attr('value', formValue('#struct-thldtype') === 'edge' ? 15 : 0.7)\n        .attr('min', formValue('#struct-thldtype') === 'edge' ? 5 : 0)\n        .attr('max', formValue('#struct-thldtype') === 'edge' ? 999 : 1.0)\n        .attr('step', formValue('#struct-thldtype') === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-thldtype')\n    .on('change', function () {\n      d3.select('#struct-thld')\n        .attr('value', this.value === 'edge' ? 15 : 0.7)\n        .attr('min', this.value === 'edge' ? 5 : 0)\n        .attr('max', this.value === 'edge' ? 999 : 1.0)\n        .attr('step', this.value === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-format')\n    .on('change', function () {\n      d3.select('#struct-qsrc')\n        .attr('disabled', this.value === 'dbid' ? null : 'disabled');\n    });\n  d3.select('#struct-preview')\n    .on('click', () => {\n      const fmt = formValue('#struct-format');\n      const query = {\n        format: fmt,\n        querySource: fmt === 'dbid' ? formValue('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? formValue('#struct-queryarea') : textareaLines('#struct-queryarea')[0],\n      };\n      return localServer.strprev(query)\n        .then(res => d3.select('#struct-image').html(res));\n    });\n  d3.select('#struct-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#struct-method').node().selectedOptions[0]);\n      const fmt = formValue('#struct-format');\n      const query = {\n        method: formValue('#struct-method'),\n        targets: checkboxValues('#struct-targets'),\n        format: fmt,\n        querySource: fmt === 'dbid' ? formValue('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? formValue('#struct-queryarea') : textareaLines('#struct-queryarea')[0],\n        thresholdType: formValue('#struct-thldtype'),\n        threshold: formFloat('#struct-thld'),\n        ignoreHs: formChecked('#struct-ignoreh'),\n        diameter: mthdop.classed('gls') ? formInt('#struct-diam') : null,\n        maxTreeSize: mthdop.classed('gls') ? formInt('#struct-tree') : null,\n        molSizeCutoff: mthdop.classed('gls') ? formInt('#struct-skip') : null,\n        timeout: mthdop.classed('rd') ? formInt('#struct-timeout') : null\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nexport function sdfDialog(callback) {\n  d3.select('#sdf-file')\n    .on('change', () => {\n      const reader = new FileReader();\n      const file = document.getElementById('sdf-file').files[0];\n      reader.onload = (e) => {\n        d3.select('#sdf-cols')\n          .call(checkboxList, getSDFPropList(e.target.result),\n                'columns', d => d, d => d\n          );\n      };\n      // Scan only first 100mb of the file due to memory limit.\n      reader.readAsText(file.slice(0, 100 * 1024 * 1024));\n    });\n  d3.select('#sdf-selectall')\n    .on('change', () => {\n      d3.select('#sdf-cols').selectAll('input')\n        .property('checked', formChecked('#sdf-selectall'));\n    });\n  d3.select('#sdf-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        contents: firstFile('#sdf-file'),\n        query: JSON.stringify({\n          columns: checkboxValues('#sdf-cols'),\n          implh: formChecked('#sdf-implh'),\n          recalc: formChecked('#sdf-recalc')\n        })\n      };\n      return localServer.importSDF(query).then(callback);\n    });\n}\n\nexport function columnDialog(tbl, callback) {\n  // TODO: need refactoring\n  const coltbl = {\n    columns: [\n      {key: 'name', sort: 'text', visible: true},\n      {key: 'visible', sort: 'text', visible: true},\n      {key: 'sort', sort: 'text', visible: true},\n      {key: 'digit', sort: 'numeric', visible: true}\n    ]\n  };\n  d3.select('#column-table thead').remove();\n  d3.select('#column-table tbody').remove();\n  d3.select('#column-table').call(createTable, coltbl)\n    .select('tbody').selectAll('tr')\n    .data(tbl.columns).enter().append('tr')\n    .each(function (row) {\n      d3.select(this).selectAll('td')\n        .data(d => coltbl.columns.map(e => d[e.key])).enter().append('td')\n        .each(function (cell, i) {\n          if (i === 0) {\n            d3.select(this).text(d => d);\n          } else if (i === 1) {\n            d3.select(this).classed('column-vis-select', true)\n              .append('input')\n                .attr('type', 'checkbox')\n                .attr('value', row.key)\n                .property('checked', d => d);\n          } else if (i === 2) {\n            d3.select(this).classed('column-sort-select', true)\n              .append('select')\n              .call(selectOptions,\n                    cell === 'none' ? ['none'] : ['numeric', 'text'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n          } else if (i === 3) {\n            d3.select(this).classed('column-digit-select', true)\n              .append('select')\n              .call(selectOptions, ['raw', 'rounded', 'scientific', 'si'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n            if (row.sort !== 'numeric') {\n              d3.select(this).select('select').attr('disabled', 'disabled');\n            }\n          }\n        });\n    });\n  d3.select('#column-table tbody').selectAll('tr')\n    .on('change', function () {\n        const sort = d3.select(this).select('.column-sort-select select').node().value;\n        d3.select(this).select('.column-digit-select select')\n          .attr('disabled', sort === 'numeric' ? null : 'disabled');\n    });\n  d3.select('#column-submit')\n    .on('click', () => {\n      const query = {\n        visibles: checkboxValues('.column-vis-select'),\n        sorts: selectedOptionValues('.column-sort-select'),\n        digits: selectedOptionValues('.column-digit-select')\n      };\n      return setColumnsToShow(query).then(callback);\n    });\n}\n\n\nexport function joinDialog(tbl, rcds, callback) {\n  const domains = dataFetcherDomains();\n  // Prevent implicit submission\n  document.getElementById('join-search')\n    .addEventListener('keypress', event => {\n      if (event.keyCode === 13) event.preventDefault();\n    });\n  return getResourceColumns(domains).then(rsrcs => {\n    const shownCols = tbl.columns.map(e => e.key);\n    d3.select('#join-keys')\n      .call(checkboxList, rsrcs.unique('key'), 'keys',\n            d => d.key, d => d.name)\n      .selectAll('li')\n      .each(function(d) { // disable already shown columns\n        const ex = shownCols.includes(d.key);\n        d3.select(this).selectAll('label').select('input')\n          .property('checked', ex)\n          .attr('disabled', ex ? 'disabled' : null);\n      });\n    d3.select('#join-search').on('keyup', function () {\n      const match = d => partialMatch(formValue(this), d.name);\n      d3.select('#join-keys').selectAll('li')\n        .style('visibility', d => match(d) ? null : 'hidden')\n        .style('position', d => match(d) ? null : 'absolute');\n    });\n    d3.select('#join-submit').on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedCols = checkboxValues('#join-keys');\n      const mpgs = rsrcs\n        .filter(col => !shownCols.includes(col.key))\n        .filter(col => selectedCols.includes(col.key))\n        .map(col => {\n          const ids = rcds.map(row => row.ID);\n          const api = getFetcher(col.domain);\n          return api.getMapping(ids, col);\n        });\n      return Promise.all(mpgs).then(res => {\n        // callback(res.filter(e => Object.keys(e.mapping).length !== 0));\n        callback(res);\n      });\n    });\n  });\n}\n\n\nexport function importColDialog(tbl, callback) {\n  d3.select('#importcol-file')\n    .on('change', () => {\n      const file = document.getElementById('importcol-file').files[0];\n      const isCsv = file.name.split('.').pop() === 'csv';\n      readFile(file).then(res => {\n        const mapping = isCsv ? csvToMapping(res) : JSON.parse(res);\n        const tbl = columnMappingToTable(mapping);\n        d3.select('#importcol-preview').call(createTable, tbl)\n          .call(updateTableRecords,\n                tbl.records.slice(0, 5), d => d[tbl.columns[0].key]);\n        // bind mapping\n        d3.select('#importcol-preview').datum(mapping);\n      });\n    });\n  d3.select('#importcol-submit')\n    .on('click', () => {\n      let mapping = d3.select('#importcol-preview').datum();\n      d3.select('#importcol-preview').datum(null);  // unbind mapping\n      // Generate thumbnails\n      const plotCols = [];\n      if (mapping.hasOwnProperty('column')) {\n        mapping = singleToMultiMapping(mapping);\n      }\n      mapping.columns.forEach((e, i) => {\n        if (e.valueType === 'plot') {\n          mapping.columns[i].valueType = 'image';\n          plotCols.push(i);\n        }\n      });\n      if (plotCols.length > 0) {\n        const ps = [];\n        Object.entries(mapping.mapping).forEach(m => {\n          plotCols.forEach(e => {\n            const p = plotThumbnail(m[1][e])\n              .then(img => {\n                mapping.mapping[m[0]][e] = img;\n              });\n            ps.push(p);\n          });\n        });\n        Promise.all(ps).then(() => callback([mapping]));\n      } else {\n        callback([mapping]);\n      }\n    });\n}\n\n\nexport function graphDialog(tbl, rcds, callback) {\n  d3.select('#graph-measure').selectAll('option.rd')\n    .attr('disabled', getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#graph-measure')\n    .on('change', function () {\n      d3.select('#graph-options').selectAll('.gls')\n        .attr('disabled', this.value === 'gls' ? null : 'disabled');\n      d3.select('#graph-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n    });\n  d3.select('#graph-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#graph-measure').node().selectedOptions[0]);\n      const query = {\n        measure: formValue('#graph-measure'),\n        indices: [],\n        molecules: [],\n        nodeTableId: tbl.id,\n        threshold: formFloat('#graph-thld'),\n        ignoreHs: formChecked('#graph-ignoreh'),\n        diameter: mthdop.node().value === 'gls' ? formInt('#graph-diam') : null,\n        maxTreeSize: mthdop.node().value === 'gls' ? formInt('#graph-tree') : null,\n        molSizeCutoff: mthdop.node().value === 'gls' ? formInt('#graph-skip') : null,\n        timeout: mthdop.classed('rd') ? formInt('#graph-timeout') : null\n      };\n      rcds.forEach(e => {\n        query.molecules.push(e._mol);\n        query.indices.push(e._index);\n      });\n      return localServer.getRecords(query).then(callback);\n    });\n}\n\n\nexport function graphConfigDialog(edges, callback) {\n  d3.select('#graphconfig-thld')\n    .attr('value', edges.networkThreshold)\n    .attr('max', 1.0)\n    .attr('min', edges.query.threshold);\n  d3.select('#graphconfig-submit')\n    .on('click', () => {\n      const newThld = formFloat('#graphconfig-thld');\n      if (newThld < edges.query.threshold) return;  // TODO: fool proof\n      callback(newThld);\n    });\n}\n\n\nexport function communityDialog(callback) {\n  d3.select('#community-name').attr('value', 'comm_');\n  d3.select('#community-submit')\n    .on('click', () => {\n      const query = {\n        name: formValue('#community-name'),\n        nulliso: formChecked('#community-nulliso')\n      };\n      callback(query);\n    });\n}\n","\nimport d3 from 'd3';\n\nexport const fieldWidth = 1200;\nexport const fieldHeight = 1200;\n\nexport const simulation = d3.forceSimulation()\n  .force('link',\n    d3.forceLink().id(d => d._index)\n      .distance(60)\n      .strength(1))\n  .force('charge',\n    d3.forceManyBody()\n      .strength(-600)\n      .distanceMin(15)\n      .distanceMax(720))\n  .force('collide',\n    d3.forceCollide()\n      .radius(90))\n  .force('center',\n    d3.forceCenter(fieldWidth / 2, fieldHeight / 2))\n  .force('x',\n    d3.forceX()\n      .strength(0.002))\n  .force('y',\n    d3.forceY()\n      .strength(0.002))\n  .stop();\n\n\nexport function setForce(nodes, edges, tick, end) {\n  simulation.nodes(nodes)\n    .force('link').links(edges);\n  simulation.on('tick', tick)\n    .on('end', end);\n}\n\n\nexport function tick() {\n  d3.select('#graph-contents').selectAll('.node')\n    .attr('transform', d => `translate(${d.x}, ${d.y})`);\n  const alpha = simulation.alpha();\n  const isStopped = alpha <= simulation.alphaMin();\n  d3.select('#temperature')\n    .classed('progress-success', isStopped)\n    .classed('progress-warning', !isStopped)\n    .attr('value', isStopped ? 1 : 1 - alpha)\n    .text(isStopped ? 1 : 1 - alpha);\n}\n\n\nexport function end() {\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.edge-line')\n    .attr('x1', 0)\n    .attr('y1', 0)\n    .attr('x2', d => d.target.x - d.source.x)\n    .attr('y2', d => d.target.y - d.source.y);\n  d3.select('#graph-contents').selectAll('.edge-label')\n    .attr('x', d => (d.target.x - d.source.x) / 2)\n    .attr('y', d => (d.target.y - d.source.y) / 2);\n}\n","\nimport d3 from 'd3';\nimport {\n  colorPresets, sizePresets, edgeWidthPresets,\n  colorPalette, scaleTypes, sizeScaleTypes, scaleFunction\n} from '../helper/d3Scale.js';\nimport {formValue, formChecked, selectedOptionData} from '../helper/d3Selection.js';\nimport {formatNum} from '../helper/formatValue.js';\nimport {selectOptions} from '../component/Component.js';\n\n\n\n// Get data\n\nfunction colorControlInput(id) {\n  const data = {\n    id: id,\n    column: selectedOptionData(`#${id}-col`)\n  };\n  const preset = selectedOptionData(`#${id}-preset`);\n  if (preset.scale.scale === 'ordinal') {\n    data.scale = preset.scale;\n    return data;\n  }\n  data.scale = {\n    scale: formValue(`#${id}-scaletype`),\n    domain: [\n      formValue(`#${id}-domain-from`),\n      formValue(`#${id}-domain-to`)\n    ],\n    unknown: '#696969'\n  };\n  const range = [formValue(`#${id}-range-from`)];\n  if (formChecked(`#${id}-range-enable-mid`)) {\n    range.push(formValue(`#${id}-range-mid`));\n  }\n  range.push(formValue(`#${id}-range-to`));\n  data.scale.range = range;\n  return data;\n}\n\n\nfunction labelControlInput() {\n  const data = colorControlInput('label');\n  data.text = formValue('#label-text');\n  data.size = formValue('#label-size');\n  data.visible = formChecked('#label-visible');\n  return data;\n}\n\n\nfunction sizeControlInput(id) {\n  return {\n    id: id,\n    scale: {\n      scale: formValue(`#${id}-scaletype`),\n      domain: [\n        formValue(`#${id}-domain-from`),\n        formValue(`#${id}-domain-to`)\n      ],\n      range: [\n        formValue(`#${id}-range-from`),\n        formValue(`#${id}-range-to`)\n      ],\n      unknown: 10\n    }\n  };\n}\n\n\nfunction nodeSizeControlInput() {\n  const data = sizeControlInput('size');\n  data.column = selectedOptionData('#size-col');\n  return data;\n}\n\n\nfunction nodeContentInput() {\n  return {\n    structure: {\n      visible: formChecked('#show-struct')\n    }\n  };\n}\n\n\nfunction edgeControlInput() {\n  const data = sizeControlInput('edge');\n  data.visible = formChecked('#edge-visible');\n  data.label = {\n    size: formValue('#edge-label-size'),\n    visible: formChecked('#edge-label-visible')\n  };\n  return data;\n}\n\n\n// Update DOM attributes\n\nfunction updateNodeColor(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .style('fill', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeSize(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .attr('r', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeLabelVisibility(visible) {\n  d3.selectAll('.node').select('.node-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateNodeLabel(data) {\n  d3.selectAll('.node').select('.node-label')\n    .text(d => {\n      if (!d.hasOwnProperty(data.text)) return '';\n      if (!data.column.hasOwnProperty('digit') || data.column.digit === 'raw') return d[data.text];\n      return formatNum(d[data.text], data.column.digit);\n    })\n    .attr('font-size', data.size)\n    .attr('visibility', data.visible ? 'inherit' : 'hidden')\n    .style('fill', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nexport function updateNodeStructure(data) {\n  d3.selectAll('.node').select('.node-struct')\n    .attr('visibility', data.structure.visible ? 'inherit' : 'hidden')\n    .each((d, i, nds) => {\n      const w = d3.select(nds[i]).select('svg').attr('width');\n      const h = d3.select(nds[i]).select('svg').attr('height');\n      d3.select(nds[i]).attr('transform', `translate(${-w / 2},${-h / 2})`);\n    });\n}\n\n\nexport function updateNodeImage(data) {\n  updateNodeSize(data.nodeSize);\n  updateNodeColor(data.nodeColor);\n  updateNodeLabel(data.nodeLabel);\n  updateNodeStructure(data.nodeContent);\n}\n\n\nfunction updateEdgeVisibility(visible) {\n  d3.selectAll('.link').select('.edge-line')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdgeLabelVisibility(visible) {\n  d3.selectAll('.link').select('.edge-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdge(data) {\n  d3.selectAll('.link').select('.edge-line')\n    .style('stroke-width', d => scaleFunction(data.scale)(d.weight));\n  d3.selectAll('.link').select('.edge-label')\n    .attr('font-size', data.label.size);\n  updateEdgeVisibility(data.visible);\n  updateEdgeLabelVisibility(data.label.visible);\n}\n\n\nfunction updateRange(range, id) {\n  if (range.length === 2) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', null);\n    d3.select(`#${id}-range-mid`).attr('disabled','disabled');\n    d3.select(`#${id}-range-to`).property('value', range[1]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else if (range.length === 3) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', 'checked');\n    d3.select(`#${id}-range-mid`).property('value', range[1]);\n    d3.select(`#${id}-range-to`).property('value', range[2]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else {\n    d3.selectAll(`#${id}-range input`).attr('disabled', 'disabled');\n  }\n}\n\n\nfunction updateScale(scale, id) {\n  d3.select(`#${id}-scaletype`).property('value', scale.scale);\n  const hasDomain = scale.hasOwnProperty('domain');\n  d3.selectAll(`#${id}-domain input`)\n    .attr('disabled', hasDomain ? null : 'disabled');\n  if (hasDomain) {\n    d3.select(`#${id}-domain-from`).property('value', scale.domain[0]);\n    d3.select(`#${id}-domain-to`).property('value', scale.domain[1]);\n  }\n  updateRange(scale.range, id);\n}\n\n\nexport function updateControl(data) {\n  const id = data.id;\n  d3.select(`#${id}-visible`).attr('checked', data.visible ? 'checked' : null);\n  d3.select(`#${id}-text`).property('value', data.text);\n  d3.select(`#${id}-size`).property('value', data.size);\n  if (data.hasOwnProperty('column')) {\n    d3.select(`#${id}-col`).property('value', data.column.key);\n  }\n  if (data.hasOwnProperty('label')) {\n    d3.select(`#${id}-label-visible`)\n      .attr('checked', data.label.visible ? 'checked' : null);\n    d3.select(`#${id}-label-size`).property('value', data.label.size);\n  }\n  updateScale(data.scale, data.id);\n}\n\n\n\n// Generate controlBox elements\n\nexport function mainControlBox() {\n  d3.select('#show-struct')\n    .on('change', function () {\n      const data = nodeContentInput();\n      d3.select('#main-control').datum(data);\n      updateNodeStructure(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction colorControlBox(columns, id) {\n  d3.select(`#${id}-col`)\n    .call(selectOptions, columns, d => d.key, d => d.name);\n  d3.select(`#${id}-preset`)\n    .call(selectOptions, colorPresets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(selectedOptionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-palette`)\n    .call(selectOptions, colorPalette, d => d.name, d => d.name)\n    .on('change', function() {\n      updateRange(selectedOptionData(this).range, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(selectOptions, scaleTypes, d => d.name, d => d.name);\n}\n\n\nexport function nodeColorControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  colorControlBox(textCols, 'color');\n  d3.selectAll('.color-update')\n    .on('change', () => {\n      const data = colorControlInput('color');\n      d3.select('#color-control').datum(data);\n      updateControl(data);\n      updateNodeColor(data);\n    })\n    .dispatch('change');\n}\n\n\nexport function nodeLabelControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  d3.select('#label-text')\n    .call(selectOptions, textCols, d => d.key, d => d.name);\n  colorControlBox(textCols, 'label');\n  d3.select('#label-visible')\n    .on('change', function() {\n      updateNodeLabelVisibility(formChecked(this), 'label');\n      d3.select(`.label-update`).dispatch('change');\n    });\n  d3.selectAll('.label-update')\n    .on('change', () => {\n      const data = labelControlInput();\n      d3.select('#label-control').datum(data);\n      updateControl(data);\n      updateNodeLabel(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction sizeControlBox(presets, id) {\n  d3.select(`#${id}-preset`)\n    .call(selectOptions, presets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(selectedOptionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(selectOptions, sizeScaleTypes, d => d.name, d => d.name);\n}\n\n\nexport function nodeSizeControlBox(columns) {\n  const numCols = columns.filter(e => e.sort === 'numeric');\n  d3.select(`#size-col`)\n    .call(selectOptions, numCols, d => d.key, d => d.name);\n  sizeControlBox(sizePresets, 'size');\n  d3.selectAll('.size-update')\n    .on('change', () => {\n      const data = nodeSizeControlInput('size');\n      d3.select('#size-control').datum(data);\n      updateControl(data);\n      updateNodeSize(data);\n    })\n    .dispatch('change');\n}\n\n\nexport function edgeControlBox() {\n  sizeControlBox(edgeWidthPresets, 'edge');\n  d3.select('#edge-visible')\n    .on('change', function() {\n      updateEdgeVisibility(formChecked(this));\n      updateEdgeLabelVisibility(formChecked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.select('#edge-label-visible')\n    .on('change', function() {\n      updateEdgeLabelVisibility(formChecked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.selectAll('.edge-update')\n    .on('change', () => {\n      const data = edgeControlInput('edge');\n      d3.select('#edge-control').datum(data);\n      updateControl(data);\n      updateEdge(data);\n    })\n    .dispatch('change');\n}\n","\n\nexport function graphNodes(selection, data) {\n  const nodes = selection.selectAll('.node')\n    .data(data, d => d.key);\n  nodes.exit().remove();\n  const entered = nodes.enter().append('g')\n    .attr('class', 'node');\n  entered.append('circle')\n    .attr('class', 'node-symbol');\n  entered.append('g')\n    .attr('class', 'node-struct');\n  entered.append('text')\n    .attr('class', 'node-label');\n  const updated = entered.merge(nodes);\n  updated.select('.node-symbol')\n    .attr('r', 20)\n    .style('fill', '#6c6');\n  updated.select('.node-struct')\n    .attr('visibility', 'hidden')\n    .html(d => d._structure);\n  updated.select('.node-label')\n    .attr('visibility', 'hidden')\n    .attr('x', 0)\n    .attr('y', 20 + 10)\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle');\n}\n\n\nexport function graphEdges(selection, data) {\n  const edges = selection.selectAll('.link')\n    .data(data, d => `${d.source}_${d.target}`);\n  edges.exit().remove();\n  const entered = edges.enter().append('g')\n    .attr('class', 'link');\n  entered.append('line')\n    .attr('class', 'edge-line');\n  entered.append('text')\n    .attr('class', 'edge-label');\n  const updated = entered.merge(edges);\n  updated.select('.edge-line')\n    .style('stroke', '#999')\n    .style('stroke-opacity', 0.6);\n  updated.select('.edge-label')\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle')\n    .attr('visibility', 'hidden')\n    .text(d => d.weight);\n}\n","\nimport d3 from 'd3';\n\nimport {simulation, tick, end} from './GraphForce.js';\n\nexport const zoom = d3.zoom()\n  .on('zoom', () => {\n    d3.select('#graph-contents').attr('transform', d3.event.transform);\n  });\n\nexport const dragWithForce = d3.drag()\n  .on('start', () => {\n    d3.select('#graph-contents').selectAll('.link')\n      .attr('visibility', 'hidden');\n    if (!d3.event.active) simulation.alphaTarget(0.1).restart();\n  })\n  .on('drag', d => {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  })\n  .on('end', d => {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  });\n\nexport const dragNoForce = d3.drag()\n  .on('drag', function (d) {\n    d3.select(this)\n      .attr('transform', () => `translate(${d3.event.x}, ${d3.event.y})`);\n    d.x = d3.event.x;\n    d.y = d3.event.y;\n    const connected = d3.select('#graph-contents').selectAll('.link')\n      .filter(d => [d.source.index, d.target.index].includes(this.__data__.index));\n    connected.attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n      .attr('visibility', 'visible');\n    connected.select('.edge-line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', d => d.target.x - d.source.x)\n      .attr('y2', d => d.target.y - d.source.y);\n    connected.select('.edge-label')\n      .attr('x', d => (d.target.x - d.source.x) / 2)\n      .attr('y', d => (d.target.y - d.source.y) / 2);\n  })\n  .on('end', () => {\n    end();\n  });\n\n\nexport function stickNodes() {\n  simulation.alpha(0).stop();\n  d3.selectAll('.node').each(d => {\n    d.fx = d.x;\n    d.fy = d.y;\n  });\n  tick();\n  end();\n  d3.select('#stick-nodes').property('checked', true);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragNoForce);\n}\n\n\nexport function unstickNodes() {\n  d3.selectAll('.node').each(d => {\n    d.fx = null;\n    d.fy = null;\n  });\n  d3.select('#stick-nodes').property('checked', false);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'hidden');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragWithForce);\n}\n\n\nexport function relax() {\n  unstickNodes();\n  simulation.alpha(0.1).restart();\n}\n\n\nexport function restart() {\n  unstickNodes();\n  simulation.alpha(1).restart();\n}\n\n\nexport function fitToScreen() {\n  d3.select('#graph-field').call(zoom.transform, d3.zoomIdentity);\n  // TODO\n  /*\n  const p = 0.9;  // padding factor\n  const x = extent(selectAll('.node').data(), d => d.x);\n  const y = extent(selectAll('.node').data(), d => d.y);\n  const w = x[1] - x[0];\n  const h = y[1] - y[0];\n  const vb = select('#graph-field').attr('viewBox').split(' ');\n  const xScaleF = vb[2] / w * p;\n  const yScaleF = vb[3] / h * p;\n  const scaleF = Math.max(xScaleF, yScaleF);\n  const center = [(w * (1 - p) / 2 - x[0]) * xScaleF,\n                  (h * (1 - p) / 2 - y[0]) * yScaleF];\n  // Reset zoom point\n  zoom.scale(scaleF);\n  zoom.translate(center);\n  updateViewportTransform(center, scaleF);\n  */\n}\n","\nimport jLouvain from 'jLouvain';\n\n\nexport function communityDetection(nodes, edges, option) {\n  // TODO: partition resolution setting\n  // TODO: Error at edges.length 0\n  const community = jLouvain().nodes(nodes).edges(edges)();\n  // assign null to singletons\n  if (option.nulliso) {\n    const clusters = {};\n    Object.entries(community).forEach(e => {\n      if (!clusters.hasOwnProperty(e[1])) {\n        clusters[e[1]] = [];\n      }\n      clusters[e[1]].push(e[0]);\n    });\n    Object.entries(clusters).forEach(e => {\n      if (e[1].length === 1) {\n        community[e[1][0]] = null;\n      }\n    });\n  }\n  return community;\n}\n","\nimport d3 from 'd3';\n\nimport {formChecked, formValue} from './helper/d3Selection.js';\nimport {colorPresets} from './helper/d3Scale.js';\nimport {fetchable} from './helper/definition.js';\nimport {loadJSON, fetchJSON, downloadJSON} from './helper/file.js';\nimport {loader} from './Loader.js';\nimport {\n  getGlobalConfig, localChemInstance, getTable, insertTable, updateTable,\n  joinColumn, getCurrentTable, updateTableAttribute\n} from './store/StoreConnection.js';\nimport {renderStatus, initialize, initializeWithData} from './component/Header.js';\nimport {graphConfigDialog, communityDialog} from './component/Dialog.js';\n\nimport {setForce, tick, end, fieldWidth, fieldHeight} from './graph/GraphForce.js';\nimport {\n  nodeColorControlBox, nodeSizeControlBox, nodeLabelControlBox, edgeControlBox,\n  updateNodeImage, mainControlBox, updateControl\n} from './graph/GraphControlBox.js';\nimport {graphNodes, graphEdges} from './graph/GraphComponent.js';\nimport {zoom, restart, relax, stickNodes} from './graph/GraphInteraction.js';\nimport {communityDetection} from './graph/communityDetection.js';\n\n\nconst localServer = localChemInstance();\n\n\nfunction takeSnapshot() {\n  return {\n    nodePositions: d3.selectAll('.node').data().map(d => ({x: d.x, y: d.y})),\n    fieldTransform: d3.zoomTransform(d3.select('#graph-field').node()),\n    nodeContent: d3.select('#main-control').datum(),\n    nodeColor: d3.select('#color-control').datum(),\n    nodeSize: d3.select('#size-control').datum(),\n    nodeLabel: d3.select('#label-control').datum(),\n    edge: d3.select('#edge-control').datum()\n  };\n}\n\n\nfunction saveSnapshot() {\n  const currentId = getGlobalConfig('urlQuery').id;\n  return updateTableAttribute(currentId, 'snapshot', takeSnapshot())\n    .then(() => console.info('Snapshot saved'));\n}\n\n\nfunction resume(snapshot) {\n  if (snapshot.hasOwnProperty('nodeContent')) {\n    d3.select('#main-control').datum(snapshot.nodeContent);\n    d3.select('#show-struct')\n      .property('checked',\n                snapshot.nodeContent.structure.visible ? true : false);\n  }\n  if (snapshot.hasOwnProperty('nodeColor')) {\n    d3.select('#color-control').datum(snapshot.nodeColor);\n    updateControl(snapshot.nodeColor);\n  }\n  if (snapshot.hasOwnProperty('nodeSize')) {\n    d3.select('#size-control').datum(snapshot.nodeSize);\n    updateControl(snapshot.nodeSize);\n  }\n  if (snapshot.hasOwnProperty('nodeLabel')) {\n    d3.select('#label-control').datum(snapshot.nodeLabel);\n    updateControl(snapshot.nodeLabel);\n  }\n  if (snapshot.hasOwnProperty('edge')) {\n    d3.select('#edge-control').datum(snapshot.edge);\n    updateControl(snapshot.edge);\n  }\n  if (snapshot.hasOwnProperty('fieldTransform')) {\n    const tf = snapshot.fieldTransform;\n    const transform = d3.zoomIdentity.translate(tf.x, tf.y).scale(tf.k);\n    d3.select('#graph-contents').attr('transform', transform);\n    d3.select('#graph-field').call(zoom.transform, transform);\n  }\n  if (snapshot.hasOwnProperty('nodePositions')) {\n    d3.selectAll('.node').each((d, i) => {\n      d.x = snapshot.nodePositions[i].x;\n      d.y = snapshot.nodePositions[i].y;\n    });\n  }\n  updateNodeImage(snapshot);\n}\n\n\nfunction getCurrentGraph() {\n  return getCurrentTable().then(edges => {\n    return getTable(edges.nodeTableId).then(nodes => {\n      return {edges: edges, nodes: nodes};\n    });\n  });\n}\n\n\nfunction start() {\n  return getCurrentGraph().then(g => {\n    renderStatus(g.edges, refresh, abort);\n    const edgesToDraw = g.edges.records\n      .filter(e => e.weight >= g.edges.networkThreshold);\n    const edgeDensity = d3.format('.3e')(edgesToDraw.length / g.edges.searchCount);\n    d3.select('#edge-density').text(edgeDensity);\n    d3.select('#network-thld').text(g.edges.networkThreshold);\n    graphEdges(d3.select('#graph-contents'), edgesToDraw);\n    graphNodes(d3.select('#graph-contents'), g.nodes.records);\n    d3.select('#show-struct').property('checked', false);  // for fast loading\n    setForce(\n      g.nodes.records, edgesToDraw, tick,\n      () => {\n        end();\n        saveSnapshot();\n      });\n    if (g.edges.hasOwnProperty('snapshot')) {\n      resume(g.edges.snapshot);\n      stickNodes();\n    } else {\n      restart();\n    }\n    d3.select('#graph-contents').style('opacity', 1e-6)\n      .transition()\n      .duration(1000)\n      .style('opacity', 1);\n  });\n}\n\n\nfunction render() {\n  return getCurrentGraph().then(g => {\n    g.nodes.records.forEach(e => { delete e._mol; });\n    graphConfigDialog(g.edges, thld => {\n      return updateTableAttribute(g.edges.id, 'networkThreshold', thld)\n        .then(saveSnapshot).then(start);\n    });\n    communityDialog(query => {\n      const nodeIds = g.nodes.records.map(e => e._index);\n      const visibleEdges = g.edges.records\n        .filter(e => e.weight >= g.edges.networkThreshold);\n      const community = communityDetection(\n        nodeIds, visibleEdges, {nulliso: query.nulliso}\n      );\n      const mapping = {\n        key: '_index',\n        column: {\n          key: query.name, name: query.name, sort: 'numeric', visible: true\n        },\n        mapping: community\n      };\n      joinColumn(mapping, g.nodes.id)\n        .then(() => {\n          const snapshot = takeSnapshot();\n          snapshot.nodeColor.column = query.name;\n          snapshot.nodeColor.scale = colorPresets\n            .find(e => e.name === 'Categories').scale;\n          const currentId = getGlobalConfig('urlQuery').id;\n          return updateTableAttribute(currentId, 'snapshot', snapshot)\n            .then(() => console.info('snapshot saved'));\n        }).then(render);\n    });\n    mainControlBox();\n    nodeColorControlBox(g.nodes.columns);\n    nodeSizeControlBox(g.nodes.columns);\n    nodeLabelControlBox(g.nodes.columns);\n    edgeControlBox();\n    d3.select('#stick-nodes')\n      .on('change', function() {\n        formChecked(this) === true ? stickNodes() : relax();\n      });\n    d3.select('#nodetable').attr('href', `datatable.html?id=${g.edges.nodeTableId}`);\n    d3.select('#rename')\n      .on('click', () => {\n        d3.select('#prompt-title').text('Rename table');\n        d3.select('#prompt-label').text('New name');\n        d3.select('#prompt-input').attr('value', g.edges.name);\n        d3.select('#prompt-submit')\n          .on('click', () => {\n            const name = formValue('#prompt-input');\n            return updateTableAttribute(g.edges.id, 'name', name)\n              .then(getCurrentTable)\n              .then(t => renderStatus(t, refresh, abort));\n          });\n      });\n    return start();\n  });\n}\n\n\nfunction fetch_(command) {\n  return getCurrentTable().then(edges => {\n    if (!fetchable(edges)) return;\n    const query = { id: edges.id, command: command };\n    return localServer.getRecords(query).then(updateTable);\n  });\n}\n\n\nfunction refresh() {\n  return fetch_('update').then(isUpdated => {\n    if (isUpdated !== undefined) return start();\n  });\n}\n\n\nfunction abort() {\n  return fetch_('abort').then(isUpdated => {\n    if (isUpdated !== undefined) return start();\n  });\n}\n\n\nfunction loadNewGraph(grf) {\n  return Promise.all([\n    insertTable(grf.nodes),\n    insertTable(grf.edges)\n  ]).then(() => {\n    window.location = `graph.html?id=${grf.edges.id}`;\n  });\n}\n\n\nd3.select('#export')\n  .on('click', () => {\n    // Working copy of edges and nodes are modified by d3.force.\n    // Load original data from store.\n    return getCurrentGraph().then(g => downloadJSON(g, g.edges.name));\n  });\n\n\nd3.select('#graph-field')\n  .attr('viewBox', `0 0 ${fieldWidth} ${fieldHeight}`)\n  .call(zoom);\n\n\nd3.select('#snapshot')\n  .on('click', saveSnapshot);\n\n\nd3.select('#restart')\n  .on('click', restart);\n\n\nd3.select('#import-json')\n  .on('click', () => document.getElementById('select-file').click());\nd3.select('#select-file')\n  .on('change', () => {\n    const file = document.getElementById('select-file').files[0];\n    loadJSON(file).then(loadNewGraph);\n  });\n\n\nfunction run() {\n  if (getGlobalConfig('urlQuery').hasOwnProperty('location')) {\n    const url = getGlobalConfig('urlQuery').location;\n    return fetchJSON(url)\n      .then(tbls => {\n        return Promise.all([\n          insertTable(tbls.nodes),\n          insertTable(tbls.edges)\n        ]).then(() => tbls.edges.id);\n      })\n      .then(id => {\n        window.location = `graph.html?id=${id}`;\n      });\n  }\n  return loader().then(() => {\n    if (getGlobalConfig('urlQuery').hasOwnProperty('id')) {\n      initializeWithData();\n      return fetch_('update').then(render);\n    } else {\n      initialize();\n      return Promise.resolve();\n    }\n  });\n}\nrun();\n","\nimport Dexie from 'Dexie';\n\n// TODO: can indexed records improve query performance ?\n// TODO: remove app table. no longer used\n\nconst schema = {\n  app: 'key',\n  items: 'id, format, responseDate',\n  resources: 'idx, id'\n};\n\nlet idb = new Dexie('Store');\nidb.version(1).stores(schema);\n\n\nfunction getAppSetting(key) {\n  return idb.app.where('key').equals(key).first()\n    .then(res => {\n      if (res === undefined) return undefined;\n      return res.value;\n    });\n}\n\n\nfunction putAppSetting(k, v) {  // returns id in success\n  return idb.app.put({ key: k, value: v });\n}\n\n\nfunction getResources() {\n  return idb.resources.orderBy('idx')\n    .toArray();\n}\n\n\nfunction putResources(data) { // returns last id in success\n  return idb.resources.bulkPut(data);\n}\n\n\nfunction getAllItems() {\n  return idb.items.orderBy('responseDate').reverse()\n    .toArray();\n}\n\n\nfunction getItemsByFormat(format) {\n  return idb.items.where('format').equals(format).reverse()\n    .sortBy('responseDate');\n}\n\n\nfunction getItemById(tableId) {\n  return idb.items.where('id').equals(tableId).first();\n}\n\n\nfunction updateItem(tableId, callback) {  // returns num of updated items\n  return idb.items.where('id').equals(tableId).modify(callback);\n}\n\n\nfunction deleteItem(tableId) { // returns num of deleted items\n  return idb.items.where('id').equals(tableId).delete();\n}\n\n\nfunction putItem(data) { // returns id in success\n  return idb.items.put(data);\n}\n\n\nfunction reset() {\n  // Try this before tackling with local db troubles\n  return idb.delete().then(() => {\n    idb = new Dexie('Store');\n    idb.version(1).stores(schema);\n  });\n}\n\nexport default {\n  getAppSetting, putAppSetting, getResources, putResources,\n  getAllItems, getItemsByFormat, getItemById,\n  updateItem, deleteItem, putItem, reset\n};\n","\nexport default class Fetcher {\n  constructor() {\n    this.baseURL = \"\";\n    this.available = false;\n  }\n\n  xhrRequest(url, formData=null, options={}) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('method' in options ? options.method : 'POST', url);\n      xhr.responseType = 'responseType' in options ? options.responseType : 'json';\n      xhr.withCredentials = 'withCredentials' in options ? options.withCredentials : false;\n      xhr.onload = () => {\n        if (xhr.status !== 200) {\n          reject(xhr);\n        } else {\n          resolve(xhr.response);\n        }\n      };\n      xhr.send(formData);\n    });\n  }\n\n  now() {\n    const now = new Date();\n    return now.toString();\n  }\n\n  getResources() {\n    // required\n  }\n\n  formatResult(cols, data) {\n    // to be called by store.updateTable\n    // required for chemical domain\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getRecords() {\n    // required\n  }\n\n  getRecordsByCompound() {\n    // required for activity domain\n  }\n\n  getMapping() {\n    // required for activity domain\n  }\n\n  getGraphEdges() {\n\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class LocalServerActivity extends Fetcher {\n  constructor() {\n    super();\n    this.baseURL = './';\n    this.domain = 'activity';\n    this.entities = [];\n  }\n\n  serializedRequest(url, query={}) {\n    const formData = new FormData();\n    formData.set('query', JSON.stringify(query));\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  request(url, query={}) {\n    const formData = new FormData();\n    const qmap = new Map(Object.entries(query));\n    qmap.forEach((v, k) => {\n      if (Array.isArray(v)) {\n        v.forEach(e => formData.append(k, e));\n      } else {\n        formData.set(k, v);\n      }\n    });\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'sql';\n            col.visible = true;\n          });\n          this.entities.push(rsrc.entity);\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(queries) {\n    return this.serializedRequest('sql', queries)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  getRecordsByCompound(compound) {\n    // TODO: this.entities\n    const query = {\n      method: 'sql',\n      targets: this.entities,\n      key: 'ID',\n      values: [compound],\n      operator: 'eq'\n    };\n    return this.getRecords(query);\n  }\n\n  getMapping(ids, column) {\n    const query = {\n      method: 'sql',\n      targets: [column.entity],\n      key: 'ID',\n      values: ids,\n      operator: 'fm'\n    };\n    return this.serializedRequest('sql', query)\n      .then(res => res.json())\n      .then(json => {\n        const mapping = {};\n        json.records.filter(row => row.hasOwnProperty(column.dataColumn))\n          .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n        return {\n          key: query.key,\n          column: column,\n          mapping: mapping,\n          lastUpdated: this.now(),\n        };\n      });\n  }\n\n  status() {\n    return this.request('server').then(res => res.json());\n  }\n\n  templates() {\n    return this.request('templates').then(res => res.json());\n  }\n\n  strprev(query) {\n    return this.serializedRequest('strprev', query).then(res => res.text());\n  }\n\n  exportExcel(query) {\n    return this.request('xlsx', query).then(res => res.blob());\n  }\n\n  exportSDFile(query) {\n    return this.request('exportsdf', query).then(res => res.text());\n  }\n\n  reportPreview(query) {\n    return this.request('reportprev', query).then(res => res.json());\n  }\n\n  report(query) {\n    return this.request('report', query).then(res => res.blob());\n  }\n}\n\n\nexport class LocalServerChemical extends LocalServerActivity {\n  constructor() {\n    super();\n    this.domain = 'chemical';\n    this.hiddenColumns = [\"_mw\", \"_mw_wo_sw\", \"_formula\", \"_logp\", \"_nonH\"];\n  }\n\n  formatResult(cols, data) {\n    if (cols.length === 0) {  // sdf\n      data.columns.forEach(col => {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      return data;\n    }\n    Array.prototype.push.apply(data.columns, cols);\n    if (data.hasOwnProperty('extraColumns')) {\n      Array.prototype.push.apply(data.columns, data.extraColumns);\n      delete data.extraColumns;\n    }\n    data.columns.forEach(col => {\n      if (!col.hasOwnProperty('name')) col.name = col.key;\n      if (col.key === data.query.key) {\n        col.visible = true;  // Search key\n      } else {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      }\n    });\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'chemsql';\n            col.visible = true;\n          });\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(query) {\n    let url;\n    if (query.hasOwnProperty('command')) {\n      url = 'rows';\n    } else if (query.hasOwnProperty('nodeTableId')) {\n      url = 'graph';\n    } else if (['chemsql', 'sql'].includes(query.method)) {\n      url = 'sql';\n    } else {\n      url = 'compute';\n    }\n    return this.serializedRequest(url, query)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  importSDF(query) {\n    return this.request('sdf', query)\n    .then(res => res.json())\n    .then(json => {\n      json.domain = this.domain;\n      json.columns.forEach(col =>{\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      const now = new Date();\n      json.lastUpdated = now.toString();\n      return json;\n    });\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class ScreenerFitting extends Fetcher {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting.yaml';\n    this.domain = null;\n    this.baseURL = null;\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n    });\n  }\n\n  request(queryString) {\n    return fetch(`${this.baseURL}${queryString}`, {\n      method: 'GET',\n      credentials : 'include'\n    }).then(res => res.json());\n  }\n\n  requestRecords(queryString) {\n    return this.request(queryString)\n      .then(json => {\n        const rcds = json.compounds.map(c => {\n          return {\n            ID: c.compoundId,\n            qcsRefId: c.qcsRefId,\n            layerIndex: c.layerIndex,\n            drcPlot: c.fitting.drcPlot,\n            AC50: c.fitting.linearAC50,\n            hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n          };\n        });\n        return { records: rcds };\n      });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/compounds?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/compounds?q=compoundId%3A${compound}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getMapping(ids, column) {\n    const refid_layer = column.entity.split(':');\n    const query = {\n      qcsRefId: refid_layer[0],\n      layerIndex: parseInt(refid_layer[1])\n    };\n    return this.getRecords(query).then(res => {\n      const mapping = {};\n      res.records.filter(row => ids.includes(row.ID))\n        .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n      return {\n        key: 'ID',\n        column: column,\n        mapping: mapping,\n        lastUpdated: this.now()\n      };\n    });\n  }\n\n  getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n    // compoundResult.fitting.drcPlot -> drcPlots/idstring\n    // returns image/png\n    const queryString = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n    return this.request(queryString);\n  }\n\n  getQcsInfo(qcsRefIds) {\n    const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n    const queryString = `/qcSessions?q=${ids}`;\n    return this.request(queryString).then(res => res.qcSessions);\n  }\n}\n\n\nexport class ScreenerRawValue extends ScreenerFitting{\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue.yaml';\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            col.key = 'rawValue';\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n      });\n  }\n\n  requestRecords(queryString, pred) {\n    return this.request(queryString).then(res => {\n      const rcds = res.plates.filter(plt => plt.wells.hasOwnProperty('compoundIds'))\n        .map(plt => {\n          return plt.wells.compoundIds.map((c, i) => {\n            return {\n              ID: c,\n              qcsRefId: plt.qcsRefId,\n              layerIndex: plt.layerIndex,\n              rawValue: plt.wells.rawValues[i]\n            };\n          }).filter(pred);\n        }).extend();\n      return { records: rcds };\n    });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/plates?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID !== null);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/plates?q=wells.compoundIds%3A${compound}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID === compound);\n  }\n}\n\n\n/*\nfunction request(query) {\n  return store.getDBResources('activity')\n    .then(rsrc => {\n      const url = `${rsrc.find(e => e.id === 'screenerapi').url}${query}`;\n      return server.request(url, null, {\n        method: 'GET',\n        responseType: 'json',\n        withCredentials : true\n      });\n    });\n}\n\n\nfunction getRawValuesByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const values = plt.wells.compoundIds.map((c, i) => {\n        if (c !== null) return { ID: c, rawValue: plt.wells.rawValues[i]};\n      }).filter(e => e !== undefined);\n      Array.prototype.push.apply(rcds, values);\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByQcs = getRawValuesByQcs;\n\n\nfunction getRawValuesMappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      plt.wells.compoundIds.forEach((c, i) => {\n        if (compoundIds.includes(c)) {\n          mapping[c] = plt.wells.rawValues[i];\n        }\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getRawValuesMappingColumn = getRawValuesMappingColumn;\n\n\nfunction getRawValuesByCompound(compoundId) {\n  const query = `/plates?q=wells.compoundIds%3A${compoundId}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const i = plt.wells.compoundIds.findIndex(c => c === compoundId);\n      rcds.push({\n        qcsRefId: plt.qcsRefId,\n        layerIndex: plt.layerIndex,\n        rawValue: plt.wells.rawValues[i]\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByCompound = getRawValuesByCompound;\n\n\nfunction getFittingByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByQcs = getFittingByQcs;\n\n\nfunction getAC50MappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.linearAC50`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.compounds.forEach(c => {\n      if (compoundIds.includes(c.compoundId)) {\n        mapping[c] = c.fitting.linearAC50;\n      }\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getAC50MappingColumn = getAC50MappingColumn;\n\n\nfunction getFittingByCompound(compoundId) {\n  const query = `/compounds?q=compoundId%3A${compoundId}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100,\n        qcsRefId: c.qcsRefId,\n        layerIndex: c.layerIndex\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByCompound = getFittingByCompound;\n\n\nfunction getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n  const query = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n  return request(query);\n}\nexports.getDrcPlot = getDrcPlot;\n\n\nfunction getQcsInfo(qcsRefIds) {\n  const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n  const query = `/qcSessions?q=${ids}`;\n  return request(query).then(res => res.qcSessions);\n}\nexports.getQcsInfo = getQcsInfo;\n\nfunction getAllResults(qcsRefId, layerIdx) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdx}\\\n&limit=200\\\n&fields=barcode%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => res);\n}\nexports.getAllResults = getAllResults;\n\n\nfunction getPlateStats(allResults) {\n  const plates = allResults.plates;\n  const parsed = plates.map(p => {\n    const lowMean = p.wellTypes.NEUTRAL_CONTROL.mean;\n    const lowStdDev = p.wellTypes.NEUTRAL_CONTROL.sd;\n    const highMean = p.wellTypes.INHIBITOR_CONTROL.mean;\n    const highStdDev = p.wellTypes.INHIBITOR_CONTROL.sd;\n    return {\n      barcode: p.barcode,\n      lowCtrlMean: lowMean,\n      lowCtrlStdDev: lowStdDev,\n      lowCtrlCV: lowStdDev / lowMean * 100,\n      highCtrlMean: highMean,\n      highCtrlStdDev: highStdDev,\n      highCtrlCV: highStdDev / highMean * 100,\n      SignalBackground: lowMean / highMean,\n      zPrime: p.zPrime\n    };\n  });\n  return parsed;\n}\nexports.getPlateStats = getPlateStats;\n\n\nfunction getWellValues(allResults) {\n  const plates = allResults.plates;\n  const results = {};\n  plates.forEach(p => {\n    p.wells.compoundIds.forEach((value, i) => {\n      if (value !== null) {\n        results[value] = p.wells.rawValues[i];\n      }\n    });\n  });\n  return results;\n}\nexports.getWellValues = getWellValues;\n\n\nfunction getFirstPlateValues(qcsRefId, layerIdxs) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdxs}\\\n&q=plateIndex%3A0\\\n&fields=layerIndex%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => {\n    const results = {};\n    res.plates.forEach(p => {\n      const idx = p.layerIndex;\n      p.wells.compoundIds.forEach(value => {\n        if (value !== null) {\n          if (!results.hasOwnProperty(value)) {\n            results[value] = {};\n          }\n          results[value][idx] = p.wells.rawValues[idx];\n        }\n      });\n    });\n  });\n}\nexports.getFirstPlateValues = getFirstPlateValues;\n*/\n","\nimport {ScreenerFitting, ScreenerRawValue} from './Screener.js';\n\n\nexport class ScreenerFittingStub extends ScreenerFitting {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting_stub.yaml';\n  }\n\n  fittingStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n      {ID: 'DB00189', drcPlot: 'dummy1', AC50: 2.1e-6, hill: 1.1, source: 'target1_validation'},\n      {ID: 'DB00193', drcPlot: 'dummy2', AC50: 4.2e-6, hill: null, source: 'target1_validation'},\n      {ID: 'DB00203', drcPlot: 'dummy3', AC50: 1.0e-5, hill: 0.9, source: 'target1_validation'},\n      {ID: 'DB00865', drcPlot: 'dummy4', AC50: 8.8e-8, hill: 2.1, source: 'target1_validation'},\n      {ID: 'DB01143', drcPlot: 'dummy5', AC50: 'n.d.', hill: null, source: 'target1_validation'},\n      {ID: 'DB01240', drcPlot: 'dummy6', AC50: null, hill: null, source: 'target1_validation'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.fittingStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.fittingStub({qcsRefId: 'QCS-YYYY', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n\n  qcsInfoStub(ids) {\n    if (!Array.isArray(ids)) throw `${ids} is not a string`;\n    const layers = [\n      {layerIndex: 0, name: 'Activity%'},\n      {layerIndex: 1, name: 'Background%'},\n      {layerIndex: 2, name: 'Correction'}\n    ];\n    return [\n      {qcsRefId: 'QCS-XXX0', name: 'hoge', layers: layers},\n      {qcsRefId: 'QCS-XXX1', name: 'fuga', layers: layers},\n      {qcsRefId: 'QCS-XXX2', name: 'piyo', layers: layers}\n    ];\n  }\n\n  getQcsInfo(qcsRefIds) {\n    return Promise.resolve(this.qcsInfoStub(qcsRefIds));\n  }\n}\n\n\nexport class ScreenerRawValueStub extends ScreenerRawValue {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue_stub.yaml';\n  }\n\n  rawValueStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n        {ID: 'DB00189', rawValue: 12.7, source: 'target1_screen'},\n        {ID: 'DB00193', rawValue: 43.6, source: 'target1_screen'},\n        {ID: 'DB00203', rawValue: 102.6, source: 'target1_screen'},\n        {ID: 'DB00865', rawValue: -0.6, source: 'target1_screen'},\n        {ID: 'DB01143', rawValue: 50, source: 'target1_screen'},\n        {ID: 'DB01240', rawValue: null, source: 'target1_screen'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.rawValueStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.rawValueStub({qcsRefId: 'QCS-XXXX', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n}\n"],"names":["formValue","selector","d3","select","node","value","formFloat","parseFloat","formChecked","checked","selectedOptionData","si","property","selectAll","data","find","d","i","scaleFunction","scale","sf","scaleTypes","e","name","func","domain","range","length","mid","includes","clamp","unknown","result","undefined","fetchable","tbl","status","abortRequestable","readFile","file","sizeLimit","blob","Promise","resolve","reject","reader","FileReader","truncated","slice","onload","event","target","onerror","error","readAsArrayBuffer","readAsText","parseJSON","compressed","text","pako","inflate","to","JSON","parse","loadJSON","endsWith","then","fetchJSON","url","decoded","decodeURIComponent","fetch","res","arrayBuffer","json","downloadDataFile","window","URL","createObjectURL","Blob","a","document","createElement","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","downloadJSON","compress","str","stringify","gzip","getGlobalConfig","key","globalConfig","setGlobalConfig","localChemInstance","API","get","fetcherInstances","Array","from","values","setResources","rsrcs","store","putResources","getTable","tableId","getItemById","getCurrentTable","q","hasOwnProperty","id","joinColumn","mapping","urlQuery","cols","column","columns","updateItem","item","records","filter","rcd","forEach","col","concat","unique","lastUpdated","updateTableAttribute","tblID","insertTable","putItem","updateTable","update","responseDate","recordCount","searchDoneCount","execTime","progress","Object","assign","initialize","navigator","debug","serviceWorker","register","registration","console","info","scope","catch","err","serverTmpl","localServer","templates","serverConfig","rsrcFetched","map","api","getResources","extendAsync","idx","all","loader","location","protocol","onLine","baseURL","renderStatus","refresh_callback","abort_callback","style","dtx","datatable","connection","format","append","attr","on","classed","query","initializeWithData","formatNum","type","conv","scientific","rounded","Number","isNaN","selectOptions","selection","options","exit","remove","enter","merge","graphConfigDialog","edges","callback","networkThreshold","threshold","newThld","communityDialog","nulliso","setForce","nodes","tick","end","simulation","force","links","x","y","alpha","isStopped","alphaMin","source","colorControlInput","preset","push","labelControlInput","size","visible","sizeControlInput","nodeSizeControlInput","nodeContentInput","structure","edgeControlInput","label","updateNodeColor","updateNodeSize","updateNodeLabelVisibility","updateNodeLabel","digit","updateNodeStructure","each","nds","w","h","updateNodeImage","nodeSize","nodeColor","nodeLabel","nodeContent","updateEdgeVisibility","updateEdgeLabelVisibility","updateEdge","weight","updateRange","updateScale","hasDomain","updateControl","mainControlBox","datum","dispatch","colorControlBox","call","colorPresets","this","colorPalette","nodeColorControlBox","sort","nodeLabelControlBox","textCols","sizeControlBox","presets","sizeScaleTypes","nodeSizeControlBox","numCols","sizePresets","edgeControlBox","edgeWidthPresets","graphNodes","entered","updated","html","_structure","graphEdges","stickNodes","stop","fx","fy","dragNoForce","unstickNodes","dragWithForce","relax","restart","communityDetection","option","community","jLouvain","clusters","entries","takeSnapshot","nodePositions","fieldTransform","zoomTransform","edge","saveSnapshot","resume","snapshot","tf","transform","zoomIdentity","translate","k","zoom","getCurrentGraph","nodeTableId","start","g","refresh","abort","edgesToDraw","edgeDensity","searchCount","transition","duration","render","_mol","thld","_index","t","fetch_","command","getRecords","isUpdated","loadNewGraph","grf","categoryMany","schemeSet1","schemeSet3","schemePastel2","schemeSet2","defaultSizeRange","schemeCategory20","scaleLinear","scaleLog","scaleQuantize","scaleOrdinal","schema","app","items","resources","idb","Dexie","version","stores","getAppSetting","where","equals","first","putAppSetting","v","put","orderBy","toArray","bulkPut","getAllItems","reverse","getItemsByFormat","sortBy","modify","deleteItem","delete","Fetcher","[object Object]","available","formData","xhr","XMLHttpRequest","open","method","responseType","withCredentials","response","send","Date","toString","now","LocalServerActivity","super","entities","FormData","set","body","credentials","Map","isArray","request","rsrc","dataColumn","entity","queries","serializedRequest","compound","targets","operator","ids","row","ID","LocalServerChemical","hiddenColumns","prototype","apply","extraColumns","ScreenerFitting","resourceFile","enabled","qcsRefId","layerIndex","queryString","compounds","c","compoundId","drcPlot","fitting","AC50","linearAC50","hill","Math","round","hillCoefficient","qcsRefIds","join","requestRecords","refid_layer","split","parseInt","plotId","min","max","qcSessions","ScreenerRawValue","pred","plates","plt","wells","compoundIds","rawValue","rawValues","extend","ScreenerFittingStub","fittingStub","rcds","layers","qcsInfoStub","ScreenerRawValueStub","rawValueStub","server","search","substring","chemical","activity","screenerrawvalue","screenerfitting","screenerrawvaluestub","screenerfittingstub","forceSimulation","forceLink","distance","strength","forceManyBody","distanceMin","distanceMax","forceCollide","radius","forceCenter","fieldWidth","fieldHeight","forceX","forceY","drag","active","alphaTarget","connected","index","__data__","getElementById","click","files","tbls"],"mappings":"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"}