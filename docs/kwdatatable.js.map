{"version":3,"file":"kwdatatable.js","sources":["../src/helper/file.js","../src/store/StoreConnection.js","../src/Loader.js","../src/helper/formatValue.js","../src/component/Component.js","../src/component/Dialog.js","../src/component/DataGrid.js","../src/datatable.js","../src/helper/d3Form.js","../src/helper/definition.js","../src/store/IDBStore.js","../src/fetcher/Fetcher.js","../src/fetcher/LocalServer.js","../src/fetcher/Screener.js","../src/fetcher/ScreenerTestStub.js","../src/helper/dataStructure.js","../src/helper/parser.js","../src/helper/image.js","../src/component/Header.js"],"sourcesContent":["\n/** @module file */\n\nimport pako from 'pako';\n\n\nfunction readFile(file, sizeLimit, blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const truncated = sizeLimit ? file.slice(0, sizeLimit) : file;\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    if (blob) {\n      reader.readAsArrayBuffer(truncated);\n    } else {\n      reader.readAsText(truncated);\n    }\n  });\n}\n\n\nfunction parseJSON(data, compressed) {\n  const text = compressed ? pako.inflate(data, {to: 'string'}) : data;\n  return JSON.parse(text);\n}\n\n\nfunction loadJSON(file) {\n  const compressed = file.name.endsWith('.gz');\n  return readFile(file, false, compressed)\n    .then(data => parseJSON(data, compressed));\n}\n\n\nfunction fetchJSON(url) {\n  const decoded = decodeURIComponent(url);\n  const compressed = decoded.endsWith('.gz');\n  return fetch(decoded)\n    .then(res => compressed ? res.arrayBuffer() : res.json())\n    .then(data => parseJSON(data, compressed));\n}\n\n\nfunction downloadDataFile(data, name) {\n  try {\n    // cannot hundle large file with dataURI scheme\n    // url = \"data:application/json,\" + encodeURIComponent(JSON.stringify(json))\n    const url = window.URL.createObjectURL(new Blob([data]));\n    const a = document.createElement('a');\n    a.download = name;\n    a.href = url;\n    // a.click() does not work on firefox\n    a.dispatchEvent(new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    }));\n    // window.URL.revokeObjectURL(url) does not work on firefox\n  } catch (e) {\n    // no DOM (unit testing)\n  }\n}\n\n\nfunction downloadJSON(json, name, compress=true) {\n  const str = JSON.stringify(json);\n  const data = compress ? pako.gzip(str) : str;\n  const ext = compress ? '.gz' : '';\n  downloadDataFile(data, `${name}.json${ext}`);\n}\n\n\nexport default {\n  readFile, parseJSON, loadJSON, fetchJSON,\n  downloadDataFile, downloadJSON\n};\n","\nimport {default as def} from '../helper/definition.js';\nimport {default as store} from './IDBStore.js';\nimport {LocalServerActivity, LocalServerChemical} from '../fetcher/LocalServer.js';\nimport {ScreenerFitting, ScreenerRawValue} from '../fetcher/Screener.js';\nimport {ScreenerFittingStub, ScreenerRawValueStub} from '../fetcher/ScreenerTestStub.js';\n\n\n// Global config\n\nconst globalConfig = {\n  \"onLine\": true,\n  \"server\": {},\n  \"templates\": {},\n  \"urlQuery\": {}\n};\n\nwindow.location.search.substring(1).split(\"&\")\n  .map(e => e.split('=')).forEach(e => {\n    globalConfig.urlQuery[e[0]] = e[1];\n  });\n\n\nfunction getGlobalConfig(key) {\n  return globalConfig[key];\n}\n\n\nfunction setGlobalConfig(key, value) {\n  globalConfig[key] = value;\n}\n\n\n// API instances\n\nconst API = new Map(Object.entries({\n  chemical: new LocalServerChemical(),\n  activity: new LocalServerActivity(),\n  screenerrawvalue: new ScreenerRawValue(),\n  screenerfitting: new ScreenerFitting(),\n  screenerrawvaluestub: new ScreenerRawValueStub(),\n  screenerfittingstub: new ScreenerFittingStub()\n}));\n\n\nfunction localChemInstance() {\n  return API.get('chemical');\n}\n\n\nfunction getFetcher(domain) {\n  return API.get(domain);\n}\n\n\nfunction fetcherInstances() {\n  return Array.from(API.values());\n}\n\n\nfunction dataFetcherInstances() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(v);\n  });\n  return res;\n}\n\n\nfunction dataFetcherDomains() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(k);\n  });\n  return res;\n}\n\n\n// API data resource on local IndexedDB\n\nfunction getResources(domains) {\n  return store.getResources().then(rsrcs => {\n    return rsrcs.filter(e => domains.includes(e.domain));\n  });\n}\n\n\nfunction setResources(rsrcs) {\n  return store.putResources(rsrcs);\n}\n\n\nfunction getResourceColumns(domains) {\n  return getResources(domains).then(rsrcs => {\n    return rsrcs.map(rsrc => {\n      return rsrc.columns.map(col => {\n        col.domain = rsrc.domain;\n        col.key = def.dataSourceId(rsrc.domain, rsrc.id, col.key);\n        col.entity = rsrc.entity;\n        if (!col.hasOwnProperty('tags')) col.tags = rsrc.tags;\n        return col;\n      });\n    }).extend();\n  });\n}\n\n\nfunction getDataSourceColumns(domain, ids) {\n  return store.getResources([domain]).then(rsrcs => {\n    return ids.map(d => rsrcs.find(e => e.id === d).columns)\n      .extend();\n  });\n}\n\n\n// Datatable on local IndexedDB\n\nfunction getAllTables() {\n  return store.getAllItems();\n}\n\n\nfunction getTablesByFormat(format) {\n  return store.getItemsByFormat(format);\n}\n\n\nfunction getTable(tableId) {\n  return store.getItemById(tableId);\n}\n\n\nfunction getRecords(tableId) {\n  return store.getItemById(tableId)\n    .then(tbl => tbl.records);\n}\n\n\nfunction getCurrentTable() {\n  const q = getGlobalConfig('urlQuery');\n  if (!q.hasOwnProperty('id')) return Promise.resolve();\n  return store.getItemById(q.id);\n}\n\n\nfunction getCurrentRecords() {\n  return getCurrentTable().then(tbl => tbl.records);\n}\n\n\nfunction setColumnsToShow(updates) {\n  return store.updateItem(getGlobalConfig('urlQuery').id, item => {\n    item.columns.forEach((col, i) => {\n      col.visible = updates.visibles.includes(col.key);\n      col.sort = updates.sorts[i];\n      col.digit = updates.digits[i];\n    });\n  });\n}\n\n\nfunction joinColumn(mapping, tableId=globalConfig.urlQuery.id) {\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  return store.updateItem(tableId, item => {\n    item.records\n      .filter(rcd => mapping.mapping.hasOwnProperty(rcd[mapping.key]))\n      .forEach(rcd => {\n        if (mapping.hasOwnProperty('column')) {\n          rcd[mapping.column.key] = mapping.mapping[rcd[mapping.key]];\n        } else {\n          mapping.columns.forEach((col, i) => {\n            rcd[col.key] = mapping.mapping[rcd[mapping.key]][i];\n          });\n        }\n      });\n    item.columns = item.columns.concat(cols).unique('key');\n    item.lastUpdated = mapping.lastUpdated;\n  });\n}\n\n\nfunction updateTableAttribute(tblID, key, value) {\n  return store.updateItem(tblID, item => {\n    item[key] = value;\n  });\n}\n\n\nfunction insertTable(data) {\n  return store.putItem(data);\n}\n\n\nfunction updateTable(data) {\n  if (data === undefined) return Promise.resolve();  // No update\n  if (data.status === 'Failure') {  // No data found on server\n    return updateTableAttribute(data.id, 'status', 'Failure');\n  }\n  // update\n  return store.updateItem(data.id, item => {\n    const update = {\n      responseDate: data.responseDate,\n      records: data.records,\n      columns: data.columns,\n      recordCount: data.recordCount,\n      searchDoneCount: data.searchDoneCount,\n      execTime: data.execTime,\n      progress: data.progress,\n      status: data.status,\n    };\n    if (data.hasOwnProperty('lastUpdated')) {\n      update.lastUpdated = data.lastUpdated;\n    }\n    Object.assign(item, update);\n  });\n}\n\n\nfunction deleteTable(id) {\n  return store.deleteItem(id);\n}\n\n\nfunction reset() {\n  return store.reset();\n}\n\n\nexport default {\n  getGlobalConfig, setGlobalConfig,\n  localChemInstance, getFetcher, fetcherInstances,\n  dataFetcherInstances, dataFetcherDomains,\n  getResources, setResources, getResourceColumns, getDataSourceColumns,\n  getAllTables, getTablesByFormat, getTable, getRecords,\n  getCurrentTable, getCurrentRecords,\n  setColumnsToShow, joinColumn,\n  updateTableAttribute, insertTable, updateTable,\n  deleteTable, reset\n};\n","\nimport {default as store} from './store/StoreConnection.js';\n\nconst localServer = store.localChemInstance();\n\n\nfunction initialize() {\n  if ('serviceWorker' in navigator && !debug) {\n    navigator.serviceWorker\n      .register('sw.js')\n      .then(registration => {\n        console.info(\n          'ServiceWorker registration successful with scope: ',\n          registration.scope\n        );\n      }).catch(err => {\n        console.info('ServiceWorker registration failed: ', err);\n      });\n  } else if (debug) {\n    console.info('Off-line mode is disabled for debugging');\n  } else {\n    console.info('Off-line mode is not supported');\n  }\n  const serverTmpl = localServer.templates().then(res => {\n    store.setGlobalConfig('templates', res.templates);\n  });\n  const serverConfig = localServer.status().then(res => {\n    store.setGlobalConfig('server', res);\n  });\n  // TODO: skip loader if there is already resources in the store\n  // 1. collate resource version\n  // 2. if no local resource or server resource is newer, fetch\n  const rsrcFetched = store.fetcherInstances()\n    .map(api => api.getResources())\n    .extendAsync().then(res => {\n      const indexed = res.map((e, i) => {\n        e.idx = i;\n        return e;\n      });\n      return store.setResources(indexed);\n    });\n  return Promise.all([serverTmpl, serverConfig, rsrcFetched]);\n}\n\n\nfunction loader() {\n  if (document.location.protocol === \"file:\") {\n    console.info('Off-line mode (local file)');\n    store.setGlobalConfig('onLine', false);\n    return Promise.resolve();\n  }\n  if ('onLine' in navigator) {\n    if (!navigator.onLine) {\n      console.info('Off-line mode (no internet connection)');\n      store.setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    }\n  }\n  return fetch(`${localServer.baseURL}favicon.ico`)\n    .then(() => {\n      // HTTP 404\n      store.setGlobalConfig('onLine', true);\n      return initialize();\n    }).catch(() => {\n      console.info('Off-line mode (server not responding)');\n      store.setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    });\n}\n\n\nexport default {\n  loader\n};\n","\n/** @module formatValue */\n\nimport d3 from 'd3';\n\n\n/**\n * Format number\n * @param {object} value - value\n * @param {string} type - si | scientific | rounded | raw\n */\nfunction formatNum(value, type) {\n  const conv = {\n    scientific: \".3e\",\n    si: \".3s\",\n    rounded: \".3r\"\n  };\n  if (type === 'raw') return value;\n  if (value === undefined || value === null || Number.isNaN(value)) return '';\n  return value == parseFloat(value) ? d3.format(conv[type])(value) : value;\n}\n\nfunction partialMatch(query, target) {\n  if (target === undefined || target === null || target === '') return false;\n  return target.toString().toUpperCase()\n    .indexOf(query.toString().toUpperCase()) !== -1;\n}\n\nfunction numericAsc(a, b) {\n  const fa = parseFloat(a);\n  const fb = parseFloat(b);\n  if (isNaN(fa) || isNaN(fb)) {\n    return String(b).localeCompare(String(a));\n  }\n  return fb - fa;\n}\n\n\nfunction numericDesc(a, b) {\n  return numericAsc(b, a);\n}\n\n\nfunction textAsc(a, b) {\n  return String(b).localeCompare(String(a));\n}\n\n\nfunction textDesc(a, b) {\n  return textAsc(b, a);\n}\n\n\nexport default {\n  formatNum, partialMatch,\n  numericAsc, numericDesc, textAsc, textDesc\n};\n","\n/** @module component */\n\nimport d3 from 'd3';\nimport {default as fmt} from '../helper/formatValue.js';\n\n\nfunction selectOptions(selection, data, key, text) {\n  const options = selection.selectAll('option')\n    .data(data, key);\n  options.exit().remove();\n  options.enter().append('option')\n    .merge(options)\n      .attr('value', key)\n      .text(text);\n}\n\n\nfunction checkboxList(selection, data, name, key, text) {\n  const items = selection.selectAll('li').data(data, key);\n  items.exit().remove();\n  const entered = items.enter().append('li')\n    .attr('class', 'form-check')\n    .append('label');\n  entered.append('input');\n  entered.append('span');\n  const updated = entered.merge(items.select('label'))\n    .attr('class', 'form-check-label');\n  updated.select('input')\n    .attr('type', 'checkbox')\n    .attr('class', 'form-check-input')\n    .attr('name', name)\n    .attr('value', key);\n  updated.select('span')\n    .text(text);\n}\n\n\nfunction createTable(selection, tbl) {\n  // Header\n  if (!selection.select('thead').size()) {\n    selection.append('thead').append('tr');\n  }\n  // Records\n  if (!selection.select('tbody').size()) {\n    selection.append('tbody');\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false\n  );\n  const header = selection.select('thead tr').selectAll('th')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('th')\n    .merge(header)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nfunction updateTableRecords(selection, rcds, keyFunc) {\n  const header = selection.select('thead tr').selectAll('th')\n    .data();\n  const rowSelection = selection.select('tbody').selectAll('tr')\n    .data(rcds, keyFunc);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('tr');\n  rowEntered.selectAll('td')\n    .data(d => header.map(e => d[e.key]))\n    .enter().append('td');\n  rowEntered.merge(rowSelection)\n    .selectAll('td')\n    .classed('align-middle', true)\n    .html((d, i) => {\n      if (d === undefined) return '';\n      if (header[i].valueType === 'plot') return '[plot]';\n      if (header[i].valueType === 'image') return '[image]';\n      if (header[i].hasOwnProperty('digit') && header[i].digit !== 'raw') {\n        return fmt.formatNum(d, header[i].digit);\n      }\n      return d;\n    });\n}\n\n\nfunction appendTableRows(selection, rcds, keyFunc) {\n  const newRcds = selection.select('tbody').selectAll('tr').data();\n  Array.prototype.push.apply(newRcds, rcds);\n  updateTableRecords(selection, newRcds, keyFunc);\n}\n\n\nfunction addSort(selection) {\n  selection.select('thead tr').selectAll('th')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? fmt.numericAsc : fmt.textAsc)\n        : (isNum ? fmt.numericDesc : fmt.textDesc);\n      selection.select('tbody').selectAll('tr')\n        .sort((a, b) => cmp(a[d.key], b[d.key]));\n      d3.select(`#sort-${d.key}`)\n        .text(isAsc ? '^' : 'v');\n    });\n}\n\n\nfunction formatNumbers(selection) {\n  // DEPRECATED: no longer used\n  selection.select('thead tr').selectAll('th')\n    .each((col, colIdx) => {\n      if (!col.hasOwnProperty('digit') || col.digit === 'raw') return;\n      selection.select('tbody').selectAll('tr')\n        .selectAll('td')\n          .filter((d, i) => i === colIdx)\n          .text(d => fmt.formatNum(d, col.digit));\n    });\n}\n\n\nexport default {\n  selectOptions, checkboxList,\n  createTable, updateTableRecords,\n  appendTableRows, addSort, formatNumbers\n};\n","\n/** @module dialog */\n\nimport d3 from 'd3';\nimport {default as d3form} from '../helper/d3Form.js';\nimport {default as dstr} from '../helper/dataStructure.js';\nimport {default as fmt} from '../helper/formatValue.js';\nimport {default as hfile} from '../helper/file.js';\nimport {default as parser} from '../helper/parser.js';\nimport {default as himg} from '../helper/image.js';\nimport {default as store} from '../store/StoreConnection.js';\nimport {default as cmp} from './Component.js';\n\nconst localServer = store.localChemInstance();\n\n\nfunction mergeDataSourceColumns(data) {\n  return store.getDataSourceColumns(data.domain, data.dataSource)\n  .then(cols => store.getFetcher(data.domain).formatResult(cols, data));\n}\n\n\nfunction pickDialog(rsrc, callback) {\n  d3.select('#pick-target')\n    .call(cmp.selectOptions, rsrc, d => d.entity, d => d.name)\n    .on('change', function () {\n      const rsrctbl = d3form.optionData(this);\n      d3.select('#pick-queryarea').text(rsrctbl.placeholders.ID);\n    });\n  d3.select('#pick-queryarea').text(rsrc[0].placeholders.ID);  // initial value\n  d3.select('#pick-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        method: 'chemsql',\n        targets: [d3form.value('#pick-target')],\n        key: 'ID',\n        values: d3form.textareaLines('#pick-queryarea'),\n        operator: 'fm'\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nfunction propDialog(rsrc, callback) {\n  d3.select('#prop-targets')\n    .call(cmp.checkboxList, rsrc, 'targets', d => d.entity, d => d.name)\n    .on('change', function () {\n      const cols = d3form.checkboxData('#prop-targets')\n        .map(d => d.columns)\n        .extend().unique('key');\n      d3.select('#prop-key')\n        .call(cmp.selectOptions, cols, d => d.key, d => d.name);\n    });\n  d3.select('#prop-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedColumn = d3form.optionData('#prop-key');\n      const query = {\n        method: selectedColumn.method,\n        targets: d3form.checkboxValues('#prop-targets'),\n        key: selectedColumn.key,\n        values: d3form.textareaLines('#prop-queryarea'),\n        operator: d3form.value('#prop-operator')\n      };\n      return localServer.getRecords(query)\n      .then(mergeDataSourceColumns)\n      .then(callback);\n    });\n}\n\n\nfunction structDialog(rsrc, callback) {\n  d3.select('#struct-qsrc')\n    .call(cmp.selectOptions, rsrc, d => d.entity, d => d.name);\n  d3.select('#struct-targets')\n    .call(cmp.checkboxList, rsrc, 'targets', d => d.entity, d => d.name);\n  d3.select('#struct-method').selectAll('option.rd')\n    .attr('disabled', store.getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#struct-method')\n    .on('change', function () {\n      const op = d3.select(this.selectedOptions[0]);\n      d3.select('#struct-thldtype')\n        .attr('disabled', op.classed('thld') ? null : 'disabled')\n        .property('value', op.classed('edge') ? 'edge' : 'sim');\n      d3.select('#struct-thld')\n        .attr('disabled', op.classed('thld') ? null : 'disabled');\n      d3.select('#struct-thldtype option.sim')\n        .attr('disabled', op.classed('sim') ? null : 'disabled');\n      d3.select('#struct-thldtype option.edge')\n        .attr('disabled', op.classed('edge') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.gls')\n        .attr('disabled', op.classed('gls') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n      d3.select('#struct-thld')\n        .attr('value', d3form.value('#struct-thldtype') === 'edge' ? 15 : 0.7)\n        .attr('min', d3form.value('#struct-thldtype') === 'edge' ? 5 : 0)\n        .attr('max', d3form.value('#struct-thldtype') === 'edge' ? 999 : 1.0)\n        .attr('step', d3form.value('#struct-thldtype') === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-thldtype')\n    .on('change', function () {\n      d3.select('#struct-thld')\n        .attr('value', this.value === 'edge' ? 15 : 0.7)\n        .attr('min', this.value === 'edge' ? 5 : 0)\n        .attr('max', this.value === 'edge' ? 999 : 1.0)\n        .attr('step', this.value === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-format')\n    .on('change', function () {\n      d3.select('#struct-qsrc')\n        .attr('disabled', this.value === 'dbid' ? null : 'disabled');\n    });\n  d3.select('#struct-preview')\n    .on('click', () => {\n      const fmt = d3form.value('#struct-format');\n      const query = {\n        format: fmt,\n        querySource: fmt === 'dbid' ? d3form.value('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? d3form.value('#struct-queryarea') : d3form.textareaLines('#struct-queryarea')[0],\n      };\n      return localServer.strprev(query)\n        .then(res => d3.select('#struct-image').html(res));\n    });\n  d3.select('#struct-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#struct-method').node().selectedOptions[0]);\n      const fmt = d3form.value('#struct-format');\n      const query = {\n        method: d3form.value('#struct-method'),\n        targets: d3form.checkboxValues('#struct-targets'),\n        format: fmt,\n        querySource: fmt === 'dbid' ? d3form.value('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? d3form.value('#struct-queryarea') : d3form.textareaLines('#struct-queryarea')[0],\n        thresholdType: d3form.value('#struct-thldtype'),\n        threshold: d3form.valueFloat('#struct-thld'),\n        ignoreHs: d3form.checked('#struct-ignoreh'),\n        diameter: mthdop.classed('gls') ? d3form.valueInt('#struct-diam') : null,\n        maxTreeSize: mthdop.classed('gls') ? d3form.valueInt('#struct-tree') : null,\n        molSizeCutoff: mthdop.classed('gls') ? d3form.valueInt('#struct-skip') : null,\n        timeout: mthdop.classed('rd') ? d3form.valueInt('#struct-timeout') : null\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nfunction sdfDialog(callback) {\n  d3.select('#sdf-file')\n    .on('change', () => {\n      const reader = new FileReader();\n      const file = document.getElementById('sdf-file').files[0];\n      reader.onload = (e) => {\n        d3.select('#sdf-cols')\n          .call(cmp.checkboxList, parser.getSDFPropList(e.target.result),\n                'columns', d => d, d => d\n          );\n      };\n      // Scan only first 100mb of the file due to memory limit.\n      reader.readAsText(file.slice(0, 100 * 1024 * 1024));\n    });\n  d3.select('#sdf-selectall')\n    .on('change', () => {\n      d3.select('#sdf-cols').selectAll('input')\n        .property('checked', d3form.checked('#sdf-selectall'));\n    });\n  d3.select('#sdf-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        contents: d3form.firstFile('#sdf-file'),\n        query: JSON.stringify({\n          columns: d3form.checkboxValues('#sdf-cols'),\n          implh: d3form.checked('#sdf-implh'),\n          recalc: d3form.checked('#sdf-recalc')\n        })\n      };\n      return localServer.importSDF(query).then(callback);\n    });\n}\n\n\nfunction columnDialog(tbl, callback) {\n  // TODO: need refactoring\n  const coltbl = {\n    columns: [\n      {key: 'name', sort: 'text', visible: true},\n      {key: 'visible', sort: 'text', visible: true},\n      {key: 'sort', sort: 'text', visible: true},\n      {key: 'digit', sort: 'numeric', visible: true}\n    ]\n  };\n  d3.select('#column-table thead').remove();\n  d3.select('#column-table tbody').remove();\n  d3.select('#column-table').call(cmp.createTable, coltbl)\n    .select('tbody').selectAll('tr')\n    .data(tbl.columns).enter().append('tr')\n    .each(function (row) {\n      d3.select(this).selectAll('td')\n        .data(d => coltbl.columns.map(e => d[e.key])).enter().append('td')\n        .each(function (cell, i) {\n          if (i === 0) {\n            d3.select(this).text(d => d);\n          } else if (i === 1) {\n            d3.select(this).classed('column-vis-select', true)\n              .append('input')\n                .attr('type', 'checkbox')\n                .attr('value', row.key)\n                .property('checked', d => d);\n          } else if (i === 2) {\n            d3.select(this).classed('column-sort-select', true)\n              .append('select')\n              .call(cmp.selectOptions,\n                    cell === 'none' ? ['none'] : ['numeric', 'text'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n          } else if (i === 3) {\n            d3.select(this).classed('column-digit-select', true)\n              .append('select')\n              .call(cmp.selectOptions, ['raw', 'rounded', 'scientific', 'si'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n            if (row.sort !== 'numeric') {\n              d3.select(this).select('select').attr('disabled', 'disabled');\n            }\n          }\n        });\n    });\n  d3.select('#column-table tbody').selectAll('tr')\n    .on('change', function () {\n        const sort = d3.select(this).select('.column-sort-select select').node().value;\n        d3.select(this).select('.column-digit-select select')\n          .attr('disabled', sort === 'numeric' ? null : 'disabled');\n    });\n  d3.select('#column-submit')\n    .on('click', () => {\n      const query = {\n        visibles: d3form.checkboxValues('.column-vis-select'),\n        sorts: d3form.optionValues('.column-sort-select'),\n        digits: d3form.optionValues('.column-digit-select')\n      };\n      return store.setColumnsToShow(query).then(callback);\n    });\n}\n\n\nfunction joinDialog(tbl, rcds, callback) {\n  const domains = store.dataFetcherDomains();\n  // Prevent implicit submission\n  document.getElementById('join-search')\n    .addEventListener('keypress', event => {\n      if (event.keyCode === 13) event.preventDefault();\n    });\n  return store.getResourceColumns(domains).then(rsrcs => {\n    const shownCols = tbl.columns.map(e => e.key);\n    d3.select('#join-keys')\n      .call(cmp.checkboxList, rsrcs.unique('key'), 'keys',\n            d => d.key, d => d.name)\n      .selectAll('li')\n      .each(function(d) { // disable already shown columns\n        const ex = shownCols.includes(d.key);\n        d3.select(this).selectAll('label').select('input')\n          .property('checked', ex)\n          .attr('disabled', ex ? 'disabled' : null);\n      });\n    d3.select('#join-search').on('keyup', function () {\n      const match = d => fmt.partialMatch(d3form.value(this), d.name);\n      d3.select('#join-keys').selectAll('li')\n        .style('visibility', d => match(d) ? null : 'hidden')\n        .style('position', d => match(d) ? null : 'absolute');\n    });\n    d3.select('#join-submit').on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedCols = d3form.checkboxValues('#join-keys');\n      const mpgs = rsrcs\n        .filter(col => !shownCols.includes(col.key))\n        .filter(col => selectedCols.includes(col.key))\n        .map(col => {\n          const ids = rcds.map(row => row.ID);\n          const api = store.getFetcher(col.domain);\n          return api.getMapping(ids, col);\n        });\n      return Promise.all(mpgs).then(res => {\n        // callback(res.filter(e => Object.keys(e.mapping).length !== 0));\n        callback(res);\n      });\n    });\n  });\n}\n\n\nfunction importColDialog(tbl, callback) {\n  d3.select('#importcol-file')\n    .on('change', () => {\n      const file = document.getElementById('importcol-file').files[0];\n      const isCsv = file.name.split('.').pop() === 'csv';\n      hfile.readFile(file).then(res => {\n        const mapping = isCsv ? dstr.csvToMapping(res) : JSON.parse(res);\n        const tbl = dstr.columnMappingToTable(mapping);\n        d3.select('#importcol-preview').call(cmp.createTable, tbl)\n          .call(cmp.updateTableRecords,\n                tbl.records.slice(0, 5), d => d[tbl.columns[0].key]);\n        // bind mapping\n        d3.select('#importcol-preview').datum(mapping);\n      });\n    });\n  d3.select('#importcol-submit')\n    .on('click', () => {\n      let mapping = d3.select('#importcol-preview').datum();\n      d3.select('#importcol-preview').datum(null);  // unbind mapping\n      // Generate thumbnails\n      const plotCols = [];\n      if (mapping.hasOwnProperty('column')) {\n        mapping = dstr.singleToMultiMapping(mapping);\n      }\n      mapping.columns.forEach((e, i) => {\n        if (e.valueType === 'plot') {\n          mapping.columns[i].valueType = 'image';\n          plotCols.push(i);\n        }\n      });\n      if (plotCols.length > 0) {\n        const ps = [];\n        Object.entries(mapping.mapping).forEach(m => {\n          plotCols.forEach(e => {\n            const p = himg.plotThumbnail(m[1][e])\n              .then(img => {\n                mapping.mapping[m[0]][e] = img;\n              });\n            ps.push(p);\n          });\n        });\n        Promise.all(ps).then(() => callback([mapping]));\n      } else {\n        callback([mapping]);\n      }\n    });\n}\n\n\nfunction graphDialog(tbl, rcds, callback) {\n  d3.select('#graph-measure').selectAll('option.rd')\n    .attr('disabled', store.getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#graph-measure')\n    .on('change', function () {\n      d3.select('#graph-options').selectAll('.gls')\n        .attr('disabled', this.value === 'gls' ? null : 'disabled');\n      d3.select('#graph-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n    });\n  d3.select('#graph-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#graph-measure').node().selectedOptions[0]);\n      const query = {\n        measure: d3form.value('#graph-measure'),\n        indices: [],\n        molecules: [],\n        nodeTableId: tbl.id,\n        threshold: d3form.valueFloat('#graph-thld'),\n        ignoreHs: d3form.checked('#graph-ignoreh'),\n        diameter: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-diam') : null,\n        maxTreeSize: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-tree') : null,\n        molSizeCutoff: mthdop.node().value === 'gls' ? d3form.valueInt('#graph-skip') : null,\n        timeout: mthdop.classed('rd') ? d3form.valueInt('#graph-timeout') : null\n      };\n      rcds.forEach(e => {\n        query.molecules.push(e._mol);\n        query.indices.push(e._index);\n      });\n      return localServer.getRecords(query).then(callback);\n    });\n}\n\n\nfunction graphConfigDialog(edges, callback) {\n  d3.select('#graphconfig-thld')\n    .attr('value', edges.networkThreshold)\n    .attr('max', 1.0)\n    .attr('min', edges.query.threshold);\n  d3.select('#graphconfig-submit')\n    .on('click', () => {\n      const newThld = d3form.valueFloat('#graphconfig-thld');\n      if (newThld < edges.query.threshold) return;  // TODO: fool proof\n      callback(newThld);\n    });\n}\n\n\nfunction communityDialog(callback) {\n  d3.select('#community-name').attr('value', 'comm_');\n  d3.select('#community-submit')\n    .on('click', () => {\n      const query = {\n        name: d3form.value('#community-name'),\n        nulliso: d3form.checked('#community-nulliso')\n      };\n      callback(query);\n    });\n}\n\n\nexport default {\n  pickDialog, propDialog, structDialog, sdfDialog,\n  columnDialog, joinDialog, importColDialog, graphDialog,\n  graphConfigDialog, communityDialog\n};\n","\n/** @module dataGrid */\n\nimport d3 from 'd3';\nimport {default as fmt} from '../helper/formatValue.js';\nimport {default as img} from '../helper/image.js';\n\n\nconst defaultColumnWidth = {\n  numeric: 120,\n  text: 200,\n  none: 200\n};\n\nconst defaultColumnHeight = {\n  numeric: 40,\n  text: 40,\n  none: 200\n};\n\n\nfunction createDataGrid(selection, tbl) {\n  // Header\n  if (!selection.select('div.dg-header').size()) {\n    selection.append('div').classed('dg-header', true);\n  }\n  // Body\n  if (!selection.select('div.dg-viewport').size()) {\n    selection.append('div').classed('dg-viewport', true)\n      .append('div').classed('dg-body', true);\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false)\n    .map(e => {\n      e.width = defaultColumnWidth[e.sort || 'numeric'];\n      e.height = defaultColumnHeight[e.sort || 'numeric'];\n      return e;\n    });\n  const rowSize = {\n    height: cols.reduce((a, b) => a.height > b.height ? a : b).height,\n    width: cols.reduce((a, b) => ({width: a.width + b.width})).width\n  };\n  selection.style('width', `${rowSize.width}px`);\n  selection.select('.dg-header').datum(rowSize);\n  const header = selection.select('.dg-header').selectAll('.dg-hcell')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('div')\n      .classed('dg-hcell', true)\n      .style('display', 'inline-block')\n    .merge(header)\n      .style('width', d => `${d.width}px`)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nfunction updateRows(selection, rcds, keyFunc, position, visibleRows) {\n  const rSize = selection.select('.dg-header').datum();\n  const cData = selection.select('.dg-header').selectAll('.dg-hcell')\n    .data();\n  const topPos = Math.min(position, Math.max(0, rcds.length - visibleRows + 1));\n  const bottomPos = topPos + visibleRows;\n  const rcdSlice = rcds.slice(topPos, Math.min(bottomPos, rcds.length));\n  const rowSelection = selection.select('.dg-body')\n    .selectAll('.dg-row')\n      .data(rcdSlice, keyFunc)\n      .style('height', `${rSize.height}px`);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('div')\n      .attr('class', 'dg-row')\n      .style('position', \"absolute\");\n  rowEntered.selectAll('.dg-cell')\n    .data(cData.map(e => e.width))\n    .enter().append('div')\n      .classed('dg-cell', true)\n      .classed('align-middle', true)\n      .style('display', 'inline-block')\n      .style('width', d => `${d}px`);\n  rowEntered.merge(rowSelection)\n    .order()\n    .each(function(d, ri) {\n      const rowPos = (position + ri) * rSize.height;\n      d3.select(this)\n        .style('transform', `translate(0px, ${rowPos}px)`)\n        .classed('odd', (position + ri) % 2 === 0)\n      .selectAll('.dg-cell')\n        .html(function(_, i) {\n          d3.select(this).attr('id', `c${ri}-${i}`);\n          const value = d[cData[i].key];\n          if (value === undefined) return '';\n          if (cData[i].valueType === 'plot') return '';\n          if (cData[i].valueType === 'image') {  // data URI\n            return `<img src=\"${value}\" width=\"180\" height=\"180\"/>`;\n          }\n          if (cData[i].hasOwnProperty('digit') && cData[i].digit !== 'raw') {\n            return fmt.formatNum(value, cData[i].digit);\n          }\n          return value;\n        })\n        .each(function(_, i) {\n          if (cData[i].valueType !== 'plot') return;\n          if (!d.hasOwnProperty(cData[i].key)) return;\n          const value = d[cData[i].key];\n          img.showPlot(value, `#c${ri}-${i}`);\n        });\n    });\n}\n\n\nfunction dataGridRecords(selection, rcds, keyFunc) {\n  const rSize = selection.select('.dg-header').datum();\n  const bodyHeight = rcds.length * rSize.height;\n  let position;\n  let visibleRows;\n  selection.select('.dg-body')\n    .style('height', `${bodyHeight}px`)\n    .style('position', \"relative\");\n  selection.select('.dg-viewport')\n    .style('overflow-y', 'auto')\n    .on('scroll', function() {\n      const scrollTop = d3.select(this).node().scrollTop;\n      const newPos = Math.min(Math.floor(scrollTop / rSize.height), rcds.length);\n      if (newPos !== position) {\n        position = newPos;\n        updateRows(selection, rcds, keyFunc, position, visibleRows);\n      }\n    });\n  d3.select(window)\n    .on('resize', function() {\n      const viewport = selection.select('.dg-viewport');\n      const viewportTop = viewport.node().getBoundingClientRect().top;\n      const viewportHeight = window.innerHeight - viewportTop - 5;\n      viewport.style('height', `${viewportHeight}px`);\n      const newVis = Math.ceil(viewportHeight / rSize.height) + 1;\n      if (newVis !== visibleRows) {\n        visibleRows = newVis;\n        viewport.dispatch('scroll');\n      }\n    })\n    .dispatch('resize');\n}\n\n\nfunction addSort(selection, rcds, keyFunc) {\n  selection.select('.dg-header').selectAll('.dg-hcell')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      d3.select(`#sort-${d.key}`).text(isAsc ? '^' : 'v');\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? fmt.numericAsc : fmt.textAsc)\n        : (isNum ? fmt.numericDesc : fmt.textDesc);\n      const sorted = rcds.sort((a, b) => cmp(a[d.key], b[d.key]));\n      dataGridRecords(selection, sorted, keyFunc);\n    });\n}\n\n\nexport default {\n  createDataGrid, dataGridRecords, addSort\n};\n","\nimport d3 from 'd3';\n\nimport {default as d3form} from './helper/d3Form.js';\nimport {default as def} from './helper/definition.js';\nimport {default as hfile} from './helper/file.js';\nimport {default as loader} from './Loader.js';\nimport {default as store} from './store/StoreConnection.js';\nimport {default as dialog} from './component/Dialog.js';\nimport {default as header} from './component/Header.js';\nimport {default as grid} from './component/DataGrid.js';\n\nconst localServer = store.localChemInstance();\n\n\nfunction idLink(rcds, idKey) {\n  rcds.filter(e => e.hasOwnProperty(idKey))\n    .forEach(e => {\n      e[idKey] = `<a href=\"profile.html?compound=${e[idKey]}\" target=\"_blank\">${e[idKey]}</a>`;\n    });\n}\n\n\nfunction renderTableContents(tbl) {\n  return store.getCurrentRecords().then(rcds => {\n    const copied = JSON.parse(JSON.stringify(rcds));  // deep copy\n    idLink(copied, 'ID');\n    d3.select('#datatable')\n      .call(grid.createDataGrid, tbl)\n      .call(grid.dataGridRecords, copied, d => d._index)\n      .call(grid.addSort, copied, d => d._index);\n    if (!store.getGlobalConfig('onLine')) return Promise.resolve();\n    dialog.graphDialog(tbl, rcds, res => {\n      res.networkThreshold = res.query.threshold;\n      return store.insertTable(res).then(() => {\n        d3.select('#loading-circle').style('display', 'none');\n        window.open(`graph.html?id=${res.id}`, '_blank');\n      });\n    });\n    dialog.joinDialog(tbl, rcds, mappings => {\n      return Promise.all(mappings.map(e => store.joinColumn(e))).then(render);\n    });\n  });\n}\n\n\nfunction render() {\n  return store.getCurrentTable().then(tbl => {\n    dialog.columnDialog(tbl, render);\n    dialog.importColDialog(tbl, colMaps => {\n      const joined = colMaps.map(mp => store.joinColumn(mp));\n      return Promise.all(joined).then(render);\n    });\n    header.renderStatus(tbl, refresh, abort);\n    d3.select('#rename')\n      .on('click', () => {\n        d3.select('#prompt-title').text('Rename table');\n        d3.select('#prompt-label').text('New name');\n        d3.select('#prompt-input').attr('value', tbl.name);\n        d3.select('#prompt-submit')\n          .on('click', () => {\n            const name = d3form.value('#prompt-input');\n            return store.updateTableAttribute(tbl.id, 'name', name)\n              .then(store.getCurrentTable)\n              .then(t => header.renderStatus(t, refresh, abort));\n          });\n      });\n    d3.select('#export')\n      .on('click', () => hfile.downloadJSON(tbl, tbl.name, true));\n    if (store.getGlobalConfig('onLine')) {\n      d3.select('#excel')\n        .on('click', () => {\n          const query = {json: new Blob([JSON.stringify(tbl)])};\n          return localServer.exportExcel(query)\n            .then(xhr => hfile.downloadDataFile(xhr, `${tbl.name}.xlsx`));\n        });\n      d3.select('#sdfile')\n        .on('click', () => {\n          const query = {json: new Blob([JSON.stringify(tbl)])};\n          return localServer.exportSDFile(query)\n            .then(xhr => hfile.downloadDataFile(xhr, `${tbl.name}.sdf`));\n        });\n    }\n    return renderTableContents(tbl);\n  });\n}\n\n\nd3.select('#import-json')\n  .on('click', () => document.getElementById('select-file').click());\nd3.select('#select-file')\n  .on('change', () => {\n    const file = document.getElementById('select-file').files[0];\n    hfile.loadJSON(file).then(loadNewTable);\n  });\n\n\nfunction loadNewTable(data) {\n  return store.insertTable(data).then(() => {\n    window.location = `datatable.html?id=${data.id}`;\n  });\n}\n\n\nfunction fetch_(command) {\n  return store.getCurrentTable().then(data => {\n    if (!def.fetchable(data)) return;\n    const queries = {id: data.id, command: command};\n    return localServer.getRecords(queries)\n      .then(res => {\n        return store.getDataSourceColumns(res.domain, res.dataSource)\n          .then(cols => store.getFetcher(res.domain).formatResult(cols, res));\n      }).then(store.updateTable);\n  });\n}\n\n\nfunction refresh() {\n  if (!store.getGlobalConfig('onLine')) return Promise.resolve();\n  return fetch_('update').then(isUpdated => {\n    if (isUpdated !== undefined) return render();\n  });\n}\n\n\nfunction abort() {\n  return fetch_('abort').then(isUpdated => {\n    if (isUpdated !== undefined) return render();\n  });\n}\n\n\nfunction run() {\n  if (store.getGlobalConfig('urlQuery').hasOwnProperty('location')) {\n    const url = store.getGlobalConfig('urlQuery').location;\n    return hfile.fetchJSON(url)\n      .then(tbl => store.insertTable(tbl).then(() => tbl.id))\n      .then(id => {\n        window.location = `datatable.html?id=${id}`;\n      });\n  }\n  return loader.loader().then(() => {\n    if (!store.getGlobalConfig('onLine')) {\n      d3.selectAll('.online-command')\n        .style('color', '#cccccc')\n        .classed('disabled', true)\n        .on('click', () => d3.event.stopPropagation());\n    }\n    if (store.getGlobalConfig('urlQuery').hasOwnProperty('id')) {\n      header.initializeWithData();\n      return fetch_('update').then(render);\n    } else {\n      header.initialize();\n      dialog.sdfDialog(loadNewTable);\n      if (!store.getGlobalConfig('onLine')) return Promise.resolve();\n      return store.getResources('chemical').then(rsrc => {\n        dialog.pickDialog(rsrc, loadNewTable);\n        dialog.structDialog(rsrc, loadNewTable);\n        dialog.propDialog(rsrc, loadNewTable);\n      });\n    }\n  });\n}\nrun();\n","\n/** @module d3Form */\n\nimport d3 from 'd3';\n\n\nfunction value(selector) {\n  return d3.select(selector).node().value;\n}\n\n\nfunction valueInt(selector) {\n  return parseInt(d3.select(selector).node().value);\n}\n\n\nfunction valueFloat(selector) {\n  return parseFloat(d3.select(selector).node().value);\n}\n\n\nfunction checked(selector) {\n  return d3.select(selector).node().checked;\n}\n\n\nfunction firstFile(selector) {\n  return d3.select(selector).node().files[0];\n}\n\n\nfunction checkboxValues(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').nodes().map(e => e.value);\n}\n\n\nfunction optionValues(selector) {\n  return d3.selectAll(selector).selectAll('select').nodes().map(e => e.value);\n}\n\n\nfunction textareaLines(selector) {\n  return d3.select(selector).node().value.split('\\n').filter(e => e.length > 0);\n}\n\n\nfunction optionData(selector) {\n  const si = d3.select(selector).property('selectedIndex');\n  return d3.select(selector).selectAll('option').data().find((d, i) => i === si);\n}\n\n\nfunction checkboxData(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').data();\n}\n\n\nexport default {\n  value, valueInt, valueFloat, checked,\n  firstFile, checkboxValues, optionValues, textareaLines,\n  optionData, checkboxData\n};\n","\n/** @module definition */\n\nfunction fetchable(tbl) {\n  return ['In progress', 'Queued', 'Aborting'].includes(tbl.status);\n}\n\n\nfunction abortRequestable(tbl) {\n  return ['In progress', 'Queued'].includes(tbl.status);\n}\n\n\nfunction conclike(col) {\n  return col.hasOwnProperty('valueType')\n    && ['AC50', 'IC50', 'ED50'].includes(col.valueType);\n}\n\n\nfunction dataSourceId(domain, resource, column) {\n  return [domain, resource, column]\n    .map(e => e.capitalize())\n    .join('');  // DomainResourceColumn\n}\n\n\nexport default {\n  fetchable, abortRequestable, conclike, dataSourceId\n};\n","\nimport Dexie from 'Dexie';\n\n// TODO: can indexed records improve query performance ?\n// TODO: remove app table. no longer used\n\nconst schema = {\n  app: 'key',\n  items: 'id, format, responseDate',\n  resources: 'idx, id'\n};\n\nlet idb = new Dexie('Store');\nidb.version(1).stores(schema);\n\n\nfunction getAppSetting(key) {\n  return idb.app.where('key').equals(key).first()\n    .then(res => {\n      if (res === undefined) return undefined;\n      return res.value;\n    });\n}\n\n\nfunction putAppSetting(k, v) {  // returns id in success\n  return idb.app.put({ key: k, value: v });\n}\n\n\nfunction getResources() {\n  return idb.resources.orderBy('idx')\n    .toArray();\n}\n\n\nfunction putResources(data) { // returns last id in success\n  return idb.resources.bulkPut(data);\n}\n\n\nfunction getAllItems() {\n  return idb.items.orderBy('responseDate').reverse()\n    .toArray();\n}\n\n\nfunction getItemsByFormat(format) {\n  return idb.items.where('format').equals(format).reverse()\n    .sortBy('responseDate');\n}\n\n\nfunction getItemById(tableId) {\n  return idb.items.where('id').equals(tableId).first();\n}\n\n\nfunction updateItem(tableId, callback) {  // returns num of updated items\n  return idb.items.where('id').equals(tableId).modify(callback);\n}\n\n\nfunction deleteItem(tableId) { // returns num of deleted items\n  return idb.items.where('id').equals(tableId).delete();\n}\n\n\nfunction putItem(data) { // returns id in success\n  return idb.items.put(data);\n}\n\n\nfunction reset() {\n  // Try this before tackling with local db troubles\n  return idb.delete().then(() => {\n    idb = new Dexie('Store');\n    idb.version(1).stores(schema);\n  });\n}\n\nexport default {\n  getAppSetting, putAppSetting, getResources, putResources,\n  getAllItems, getItemsByFormat, getItemById,\n  updateItem, deleteItem, putItem, reset\n};\n","\nexport default class Fetcher {\n  constructor() {\n    this.baseURL = \"\";\n    this.available = false;\n  }\n\n  xhrRequest(url, formData=null, options={}) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('method' in options ? options.method : 'POST', url);\n      xhr.responseType = 'responseType' in options ? options.responseType : 'json';\n      xhr.withCredentials = 'withCredentials' in options ? options.withCredentials : false;\n      xhr.onload = () => {\n        if (xhr.status !== 200) {\n          reject(xhr);\n        } else {\n          resolve(xhr.response);\n        }\n      };\n      xhr.send(formData);\n    });\n  }\n\n  now() {\n    const now = new Date();\n    return now.toString();\n  }\n\n  getResources() {\n    // required\n  }\n\n  formatResult(cols, data) {\n    // to be called by store.updateTable\n    // required for chemical domain\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getRecords() {\n    // required\n  }\n\n  getRecordsByCompound() {\n    // required for activity domain\n  }\n\n  getMapping() {\n    // required for activity domain\n  }\n\n  getGraphEdges() {\n\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class LocalServerActivity extends Fetcher {\n  constructor() {\n    super();\n    this.baseURL = './';\n    this.domain = 'activity';\n    this.entities = [];\n  }\n\n  serializedRequest(url, query={}) {\n    const formData = new FormData();\n    formData.set('query', JSON.stringify(query));\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  request(url, query={}) {\n    const formData = new FormData();\n    const qmap = new Map(Object.entries(query));\n    qmap.forEach((v, k) => {\n      if (Array.isArray(v)) {\n        v.forEach(e => formData.append(k, e));\n      } else {\n        formData.set(k, v);\n      }\n    });\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'sql';\n            col.visible = true;\n          });\n          this.entities.push(rsrc.entity);\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(queries) {\n    return this.serializedRequest('sql', queries)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  getRecordsByCompound(compound) {\n    // TODO: this.entities\n    const query = {\n      method: 'sql',\n      targets: this.entities,\n      key: 'ID',\n      values: [compound],\n      operator: 'eq'\n    };\n    return this.getRecords(query);\n  }\n\n  getMapping(ids, column) {\n    const query = {\n      method: 'sql',\n      targets: [column.entity],\n      key: 'ID',\n      values: ids,\n      operator: 'fm'\n    };\n    return this.serializedRequest('sql', query)\n      .then(res => res.json())\n      .then(json => {\n        const mapping = {};\n        json.records.filter(row => row.hasOwnProperty(column.dataColumn))\n          .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n        return {\n          key: query.key,\n          column: column,\n          mapping: mapping,\n          lastUpdated: this.now(),\n        };\n      });\n  }\n\n  status() {\n    return this.request('server').then(res => res.json());\n  }\n\n  templates() {\n    return this.request('templates').then(res => res.json());\n  }\n\n  strprev(query) {\n    return this.serializedRequest('strprev', query).then(res => res.text());\n  }\n\n  exportExcel(query) {\n    return this.request('xlsx', query).then(res => res.blob());\n  }\n\n  exportSDFile(query) {\n    return this.request('exportsdf', query).then(res => res.text());\n  }\n\n  reportPreview(query) {\n    return this.request('reportprev', query).then(res => res.json());\n  }\n\n  report(query) {\n    return this.request('report', query).then(res => res.blob());\n  }\n}\n\n\nexport class LocalServerChemical extends LocalServerActivity {\n  constructor() {\n    super();\n    this.domain = 'chemical';\n    this.hiddenColumns = [\"_mw\", \"_mw_wo_sw\", \"_formula\", \"_logp\", \"_nonH\"];\n  }\n\n  formatResult(cols, data) {\n    if (cols.length === 0) {  // sdf\n      data.columns.forEach(col => {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      return data;\n    }\n    Array.prototype.push.apply(data.columns, cols);\n    if (data.hasOwnProperty('extraColumns')) {\n      Array.prototype.push.apply(data.columns, data.extraColumns);\n      delete data.extraColumns;\n    }\n    data.columns.forEach(col => {\n      if (!col.hasOwnProperty('name')) col.name = col.key;\n      if (col.key === data.query.key) {\n        col.visible = true;  // Search key\n      } else {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      }\n    });\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'chemsql';\n            col.visible = true;\n          });\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(query) {\n    let url;\n    if (query.hasOwnProperty('command')) {\n      url = 'rows';\n    } else if (query.hasOwnProperty('nodeTableId')) {\n      url = 'graph';\n    } else if (['chemsql', 'sql'].includes(query.method)) {\n      url = 'sql';\n    } else {\n      url = 'compute';\n    }\n    return this.serializedRequest(url, query)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  importSDF(query) {\n    return this.request('sdf', query)\n    .then(res => res.json())\n    .then(json => {\n      json.domain = this.domain;\n      json.columns.forEach(col =>{\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      const now = new Date();\n      json.lastUpdated = now.toString();\n      return json;\n    });\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class ScreenerFitting extends Fetcher {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting.yaml';\n    this.domain = null;\n    this.baseURL = null;\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n    });\n  }\n\n  request(queryString) {\n    return fetch(`${this.baseURL}${queryString}`, {\n      method: 'GET',\n      credentials : 'include'\n    }).then(res => res.json());\n  }\n\n  requestRecords(queryString) {\n    return this.request(queryString)\n      .then(json => {\n        const rcds = json.compounds.map(c => {\n          return {\n            ID: c.compoundId,\n            qcsRefId: c.qcsRefId,\n            layerIndex: c.layerIndex,\n            drcPlot: c.fitting.drcPlot,\n            AC50: c.fitting.linearAC50,\n            hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n          };\n        });\n        return { records: rcds };\n      });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/compounds?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/compounds?q=compoundId%3A${compound}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getMapping(ids, column) {\n    const refid_layer = column.entity.split(':');\n    const query = {\n      qcsRefId: refid_layer[0],\n      layerIndex: parseInt(refid_layer[1])\n    };\n    return this.getRecords(query).then(res => {\n      const mapping = {};\n      res.records.filter(row => ids.includes(row.ID))\n        .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n      return {\n        key: 'ID',\n        column: column,\n        mapping: mapping,\n        lastUpdated: this.now()\n      };\n    });\n  }\n\n  getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n    // compoundResult.fitting.drcPlot -> drcPlots/idstring\n    // returns image/png\n    const queryString = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n    return this.request(queryString);\n  }\n\n  getQcsInfo(qcsRefIds) {\n    const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n    const queryString = `/qcSessions?q=${ids}`;\n    return this.request(queryString).then(res => res.qcSessions);\n  }\n}\n\n\nexport class ScreenerRawValue extends ScreenerFitting{\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue.yaml';\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            col.key = 'rawValue';\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n      });\n  }\n\n  requestRecords(queryString, pred) {\n    return this.request(queryString).then(res => {\n      const rcds = res.plates.filter(plt => plt.wells.hasOwnProperty('compoundIds'))\n        .map(plt => {\n          return plt.wells.compoundIds.map((c, i) => {\n            return {\n              ID: c,\n              qcsRefId: plt.qcsRefId,\n              layerIndex: plt.layerIndex,\n              rawValue: plt.wells.rawValues[i]\n            };\n          }).filter(pred);\n        }).extend();\n      return { records: rcds };\n    });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/plates?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID !== null);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/plates?q=wells.compoundIds%3A${compound}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID === compound);\n  }\n}\n\n\n/*\nfunction request(query) {\n  return store.getDBResources('activity')\n    .then(rsrc => {\n      const url = `${rsrc.find(e => e.id === 'screenerapi').url}${query}`;\n      return server.request(url, null, {\n        method: 'GET',\n        responseType: 'json',\n        withCredentials : true\n      });\n    });\n}\n\n\nfunction getRawValuesByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const values = plt.wells.compoundIds.map((c, i) => {\n        if (c !== null) return { ID: c, rawValue: plt.wells.rawValues[i]};\n      }).filter(e => e !== undefined);\n      Array.prototype.push.apply(rcds, values);\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByQcs = getRawValuesByQcs;\n\n\nfunction getRawValuesMappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      plt.wells.compoundIds.forEach((c, i) => {\n        if (compoundIds.includes(c)) {\n          mapping[c] = plt.wells.rawValues[i];\n        }\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getRawValuesMappingColumn = getRawValuesMappingColumn;\n\n\nfunction getRawValuesByCompound(compoundId) {\n  const query = `/plates?q=wells.compoundIds%3A${compoundId}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const i = plt.wells.compoundIds.findIndex(c => c === compoundId);\n      rcds.push({\n        qcsRefId: plt.qcsRefId,\n        layerIndex: plt.layerIndex,\n        rawValue: plt.wells.rawValues[i]\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByCompound = getRawValuesByCompound;\n\n\nfunction getFittingByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByQcs = getFittingByQcs;\n\n\nfunction getAC50MappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.linearAC50`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.compounds.forEach(c => {\n      if (compoundIds.includes(c.compoundId)) {\n        mapping[c] = c.fitting.linearAC50;\n      }\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getAC50MappingColumn = getAC50MappingColumn;\n\n\nfunction getFittingByCompound(compoundId) {\n  const query = `/compounds?q=compoundId%3A${compoundId}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100,\n        qcsRefId: c.qcsRefId,\n        layerIndex: c.layerIndex\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByCompound = getFittingByCompound;\n\n\nfunction getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n  const query = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n  return request(query);\n}\nexports.getDrcPlot = getDrcPlot;\n\n\nfunction getQcsInfo(qcsRefIds) {\n  const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n  const query = `/qcSessions?q=${ids}`;\n  return request(query).then(res => res.qcSessions);\n}\nexports.getQcsInfo = getQcsInfo;\n\nfunction getAllResults(qcsRefId, layerIdx) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdx}\\\n&limit=200\\\n&fields=barcode%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => res);\n}\nexports.getAllResults = getAllResults;\n\n\nfunction getPlateStats(allResults) {\n  const plates = allResults.plates;\n  const parsed = plates.map(p => {\n    const lowMean = p.wellTypes.NEUTRAL_CONTROL.mean;\n    const lowStdDev = p.wellTypes.NEUTRAL_CONTROL.sd;\n    const highMean = p.wellTypes.INHIBITOR_CONTROL.mean;\n    const highStdDev = p.wellTypes.INHIBITOR_CONTROL.sd;\n    return {\n      barcode: p.barcode,\n      lowCtrlMean: lowMean,\n      lowCtrlStdDev: lowStdDev,\n      lowCtrlCV: lowStdDev / lowMean * 100,\n      highCtrlMean: highMean,\n      highCtrlStdDev: highStdDev,\n      highCtrlCV: highStdDev / highMean * 100,\n      SignalBackground: lowMean / highMean,\n      zPrime: p.zPrime\n    };\n  });\n  return parsed;\n}\nexports.getPlateStats = getPlateStats;\n\n\nfunction getWellValues(allResults) {\n  const plates = allResults.plates;\n  const results = {};\n  plates.forEach(p => {\n    p.wells.compoundIds.forEach((value, i) => {\n      if (value !== null) {\n        results[value] = p.wells.rawValues[i];\n      }\n    });\n  });\n  return results;\n}\nexports.getWellValues = getWellValues;\n\n\nfunction getFirstPlateValues(qcsRefId, layerIdxs) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdxs}\\\n&q=plateIndex%3A0\\\n&fields=layerIndex%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => {\n    const results = {};\n    res.plates.forEach(p => {\n      const idx = p.layerIndex;\n      p.wells.compoundIds.forEach(value => {\n        if (value !== null) {\n          if (!results.hasOwnProperty(value)) {\n            results[value] = {};\n          }\n          results[value][idx] = p.wells.rawValues[idx];\n        }\n      });\n    });\n  });\n}\nexports.getFirstPlateValues = getFirstPlateValues;\n*/\n","\nimport {ScreenerFitting, ScreenerRawValue} from './Screener.js';\n\n\nexport class ScreenerFittingStub extends ScreenerFitting {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting_stub.yaml';\n  }\n\n  fittingStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n      {ID: 'DB00189', drcPlot: 'dummy1', AC50: 2.1e-6, hill: 1.1, source: 'target1_validation'},\n      {ID: 'DB00193', drcPlot: 'dummy2', AC50: 4.2e-6, hill: null, source: 'target1_validation'},\n      {ID: 'DB00203', drcPlot: 'dummy3', AC50: 1.0e-5, hill: 0.9, source: 'target1_validation'},\n      {ID: 'DB00865', drcPlot: 'dummy4', AC50: 8.8e-8, hill: 2.1, source: 'target1_validation'},\n      {ID: 'DB01143', drcPlot: 'dummy5', AC50: 'n.d.', hill: null, source: 'target1_validation'},\n      {ID: 'DB01240', drcPlot: 'dummy6', AC50: null, hill: null, source: 'target1_validation'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.fittingStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.fittingStub({qcsRefId: 'QCS-YYYY', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n\n  qcsInfoStub(ids) {\n    if (!Array.isArray(ids)) throw `${ids} is not a string`;\n    const layers = [\n      {layerIndex: 0, name: 'Activity%'},\n      {layerIndex: 1, name: 'Background%'},\n      {layerIndex: 2, name: 'Correction'}\n    ];\n    return [\n      {qcsRefId: 'QCS-XXX0', name: 'hoge', layers: layers},\n      {qcsRefId: 'QCS-XXX1', name: 'fuga', layers: layers},\n      {qcsRefId: 'QCS-XXX2', name: 'piyo', layers: layers}\n    ];\n  }\n\n  getQcsInfo(qcsRefIds) {\n    return Promise.resolve(this.qcsInfoStub(qcsRefIds));\n  }\n}\n\n\nexport class ScreenerRawValueStub extends ScreenerRawValue {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue_stub.yaml';\n  }\n\n  rawValueStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n        {ID: 'DB00189', rawValue: 12.7, source: 'target1_screen'},\n        {ID: 'DB00193', rawValue: 43.6, source: 'target1_screen'},\n        {ID: 'DB00203', rawValue: 102.6, source: 'target1_screen'},\n        {ID: 'DB00865', rawValue: -0.6, source: 'target1_screen'},\n        {ID: 'DB01143', rawValue: 50, source: 'target1_screen'},\n        {ID: 'DB01240', rawValue: null, source: 'target1_screen'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.rawValueStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.rawValueStub({qcsRefId: 'QCS-XXXX', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n}\n","\n/** @module dataStructure */\n\nfunction columnMappingToTable(mapping) {\n  const keyCol = {\n    key: mapping.key,\n    name: mapping.key,\n    sort: 'text',\n    visible: true\n  };\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  const tbl = {\n    columns: [keyCol].concat(cols),\n    records: Object.entries(mapping.mapping).map(entry => {\n      const rcd = {};\n      rcd[mapping.key] = entry[0];\n      if (mapping.hasOwnProperty('column')) {\n        rcd[mapping.column.key] = entry[1];\n      } else {\n        const colKeys = mapping.columns.map(col => col.key);\n        entry[1].forEach((val, i) => {\n          rcd[colKeys[i]] = val;\n        });\n      }\n      return rcd;\n    })\n  };\n  return tbl;\n}\n\n\nfunction csvToMapping(csvString) {\n  const lines = csvString.split(/\\n|\\r|\\r\\n/);\n  const header = lines.shift().split(',');\n  const key = header.shift();\n  const now = new Date();\n  const mapping = {\n    created: now.toString(),\n    columns: [],\n    key: key,\n    mapping: {}\n  };\n  const headerIdx = [];\n  header.forEach((h, i) => {\n    if (h === '') return;\n    headerIdx.push(i);\n    mapping.columns.push({key: h, name: h, sort: 'text', visible: true});\n  });\n  lines.forEach(line => {\n    const values = line.split(',');\n    const k = values.shift();\n    mapping.mapping[k] = Array(headerIdx.length);\n    headerIdx.forEach(i => {\n      mapping.mapping[k][i] = values[i];\n    });\n  });\n  return mapping;\n}\n\nfunction singleToMultiMapping(mapping) {\n  const newMapping = {};\n  Object.entries(mapping.mapping).forEach(m => {\n    newMapping[m[0]] = [m[1]];\n  });\n  return {\n    created: mapping.created,\n    columns: [mapping.column],\n    key: mapping.key,\n    mapping: newMapping\n  };\n}\n\n\nexport default {\n  columnMappingToTable, csvToMapping, singleToMultiMapping\n};\n","\n/** @module parser */\n\nfunction getSDFPropList(str) {\n  const re = />.*?<(\\S+)>/g;\n  const uniqCols = new Set();\n  let arr;\n  while ((arr = re.exec(str)) !== null) {\n    uniqCols.add(arr[1]);\n  }\n  return Array.from(uniqCols);\n}\n\n\nexport default {\n  getSDFPropList\n};\n","\n/** @module image */\n\nimport vega from 'vega';\n\nfunction showPlot(vegaSpec, selector) {\n  new vega.View(vega.parse(vegaSpec))\n    .initialize(selector)\n    .run();\n\n}\n\nfunction plotThumbnail(vegaSpec) {\n  const view = new vega.View(vega.parse(vegaSpec));\n  return view.toImageURL('png');  // Promise\n}\n\n\nexport default {\n  showPlot, plotThumbnail\n};\n","\n/** @module header */\n\nimport d3 from 'd3';\nimport {default as def} from '../helper/definition.js';\n\n\nfunction renderStatus(tbl, refresh_callback, abort_callback) {\n  d3.select('#loading-circle').style('display', 'none');\n  if (!tbl.hasOwnProperty('status')) tbl.status = 'Completed';\n  d3.select('title').text(tbl.name);\n  d3.select('#title').text(tbl.name);\n  d3.select('#refresh')\n    .text(tbl.status === 'Aborting' ? 'Abort requested' : 'Refresh')\n    .style('display', def.fetchable(tbl) ? 'inline-block' : 'none');\n  d3.select('#abort')\n    .style('display', def.abortRequestable(tbl) ? 'inline-block' : 'none');\n  const doneText = {\n    'datatable': 'entries found',\n    'connection': 'connections created'\n  };\n  const dtx = doneText[tbl.format];\n  d3.select('#progress')\n    .text(`(${tbl.status} - ${tbl.recordCount} ${dtx} in ${tbl.execTime} sec.)`);\n  if (tbl.status === 'In progress') {\n    d3.select('#progress').append('div').append('progress')\n      .attr('max', 100)\n      .attr('value', tbl.progress)\n      .text(`${tbl.progress}%`);\n  }\n  d3.select('#refresh').on('click', refresh_callback);\n  d3.select('#abort')\n    .on('click', () => {\n      d3.select('#confirm-message')\n        .text('Are you sure you want to abort this calculation job?');\n      d3.select('#confirm-submit')\n        .classed('btn-primary', false)\n        .classed('btn-warning', true)\n        .on('click', () => {\n          abort_callback();\n        });\n    });\n  console.info('Query');\n  console.info(tbl.query);  // query datails are available on browser console.\n}\n\n\nfunction initializeWithData() {\n  d3.select('#new-data').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n}\n\n\nfunction initialize() {\n  d3.select('#data-control').style('display', 'none');\n  d3.select('#nodedata').style('display', 'none');\n  d3.select('#refresh').style('display', 'none');\n  d3.select('#abort').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n  d3.select('#status').selectAll('li').style('display', 'none');\n}\n\n\nexport default {\n  renderStatus, initializeWithData, initialize\n};\n"],"names":["readFile","file","sizeLimit","blob","Promise","resolve","reject","reader","FileReader","truncated","slice","onload","event","target","result","onerror","error","readAsArrayBuffer","readAsText","parseJSON","data","compressed","text","pako","inflate","to","JSON","parse","downloadDataFile","name","url","window","URL","createObjectURL","Blob","a","document","createElement","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","e","getGlobalConfig","key","globalConfig","getResources","domains","store","then","rsrcs","filter","includes","domain","getCurrentTable","q","hasOwnProperty","getItemById","id","updateTableAttribute","tblID","value","updateItem","item","initialize","navigator","debug","serviceWorker","register","registration","console","info","scope","catch","err","serverTmpl","localServer","templates","res","setGlobalConfig","serverConfig","status","rsrcFetched","fetcherInstances","map","api","extendAsync","indexed","i","idx","setResources","all","numericAsc","b","fa","parseFloat","fb","isNaN","String","localeCompare","textAsc","updateTableRecords","selection","rcds","keyFunc","header","select","selectAll","rowSelection","exit","remove","rowEntered","enter","append","d","merge","classed","html","undefined","valueType","digit","fmt","formatNum","mergeDataSourceColumns","getDataSourceColumns","dataSource","cols","getFetcher","formatResult","updateRows","position","visibleRows","rSize","datum","cData","topPos","Math","min","max","length","bottomPos","rcdSlice","style","height","attr","width","order","each","ri","rowPos","d3","this","_","img","showPlot","dataGridRecords","bodyHeight","on","scrollTop","node","newPos","floor","viewport","viewportTop","getBoundingClientRect","top","viewportHeight","innerHeight","newVis","ceil","dispatch","idLink","idKey","forEach","renderTableContents","tbl","getCurrentRecords","copied","stringify","call","grid","createDataGrid","_index","addSort","dialog","graphDialog","networkThreshold","query","threshold","insertTable","open","joinDialog","mappings","joinColumn","render","columnDialog","importColDialog","colMaps","joined","mp","renderStatus","refresh","abort","d3form","t","hfile","downloadJSON","json","exportExcel","xhr","exportSDFile","loadNewTable","location","fetch_","command","def","fetchable","queries","getRecords","updateTable","isUpdated","selector","valueInt","parseInt","valueFloat","checked","firstFile","files","checkboxValues","nodes","optionValues","textareaLines","split","optionData","si","property","find","checkboxData","abortRequestable","conclike","col","dataSourceId","resource","column","capitalize","join","loadJSON","endsWith","fetchJSON","decoded","decodeURIComponent","fetch","arrayBuffer","compress","str","gzip","schema","app","items","resources","idb","Dexie","version","stores","getAppSetting","where","equals","first","putAppSetting","k","v","put","orderBy","toArray","putResources","bulkPut","getAllItems","reverse","getItemsByFormat","format","sortBy","tableId","callback","modify","deleteItem","delete","putItem","Fetcher","[object Object]","baseURL","available","formData","options","XMLHttpRequest","method","responseType","withCredentials","response","send","Date","toString","lastUpdated","now","LocalServerActivity","super","entities","FormData","set","body","credentials","Map","Object","entries","Array","isArray","request","rsrc","columns","dataColumn","visible","push","entity","serializedRequest","compound","targets","values","operator","ids","mapping","records","row","ID","LocalServerChemical","hiddenColumns","prototype","apply","extraColumns","ScreenerFitting","resourceFile","enabled","qcsRefId","layerIndex","queryString","compounds","c","compoundId","drcPlot","fitting","AC50","linearAC50","hill","round","hillCoefficient","qcsRefIds","requestRecords","refid_layer","plotId","qcSessions","ScreenerRawValue","pred","plates","plt","wells","compoundIds","rawValue","rawValues","extend","ScreenerFittingStub","source","fittingStub","layers","qcsInfoStub","ScreenerRawValueStub","rawValueStub","onLine","server","urlQuery","search","substring","API","chemical","activity","screenerrawvalue","screenerfitting","screenerrawvaluestub","screenerfittingstub","localChemInstance","get","from","dataFetcherInstances","dataFetcherDomains","getResourceColumns","tags","getAllTables","getTablesByFormat","getTable","setColumnsToShow","updates","visibles","sort","sorts","digits","rcd","concat","unique","update","responseDate","recordCount","searchDoneCount","execTime","progress","assign","deleteTable","reset","loader","protocol","columnMappingToTable","keyCol","entry","colKeys","val","csvToMapping","csvString","lines","shift","created","headerIdx","h","line","singleToMultiMapping","newMapping","m","type","conv","scientific","rounded","Number","partialMatch","toUpperCase","indexOf","numericDesc","textDesc","getSDFPropList","re","uniqCols","Set","arr","exec","add","vegaSpec","vega","View","run","plotThumbnail","toImageURL","selectOptions","checkboxList","entered","updated","createTable","size","appendTableRows","newRcds","isAsc","isNum","cmp","formatNumbers","colIdx","pickDialog","rsrctbl","placeholders","propDialog","selectedColumn","structDialog","op","selectedOptions","querySource","strprev","mthdop","thresholdType","ignoreHs","diameter","maxTreeSize","molSizeCutoff","timeout","sdfDialog","getElementById","parser","contents","implh","recalc","importSDF","coltbl","cell","addEventListener","keyCode","preventDefault","shownCols","ex","match","selectedCols","mpgs","getMapping","isCsv","pop","dstr","plotCols","ps","p","himg","measure","indices","molecules","nodeTableId","_mol","graphConfigDialog","edges","newThld","communityDialog","nulliso","refresh_callback","abort_callback","dtx","datatable","connection","initializeWithData","defaultColumnWidth","numeric","none","defaultColumnHeight","rowSize","reduce","sorted","click","stopPropagation"],"mappings":"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"}