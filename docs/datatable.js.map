{"version":3,"file":"datatable.js","sources":["../src/helper/d3Selection.js","../src/helper/definition.js","../src/helper/file.js","../src/store/StoreConnection.js","../src/Loader.js","../src/helper/dataStructure.js","../src/helper/formatValue.js","../src/helper/parser.js","../src/helper/image.js","../src/component/Component.js","../src/component/Dialog.js","../src/component/Header.js","../src/component/DataGrid.js","../src/datatable.js","../src/store/IDBStore.js","../src/fetcher/Fetcher.js","../src/fetcher/LocalServer.js","../src/fetcher/Screener.js","../src/fetcher/ScreenerTestStub.js"],"sourcesContent":["\nimport d3 from 'd3';\n\n\nexport function formValue(selector) {\n  return d3.select(selector).node().value;\n}\n\n\nexport function formInt(selector) {\n  return parseInt(d3.select(selector).node().value);\n}\n\n\nexport function formFloat(selector) {\n  return parseFloat(d3.select(selector).node().value);\n}\n\n\nexport function formChecked(selector) {\n  return d3.select(selector).node().checked;\n}\n\n\nexport function firstFile(selector) {\n  return d3.select(selector).node().files[0];\n}\n\n\nexport function checkboxValues(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').nodes().map(e => e.value);\n}\n\n\nexport function selectedOptionValues(selector) {\n  return d3.selectAll(selector).selectAll('select').nodes().map(e => e.value);\n}\n\n\nexport function textareaLines(selector) {\n  return d3.select(selector).node().value.split('\\n').filter(e => e.length > 0);\n}\n\n\nexport function selectedOptionData(selector) {\n  const si = d3.select(selector).property('selectedIndex');\n  return d3.select(selector).selectAll('option').data().find((d, i) => i === si);\n}\n\n\nexport function selectedCheckboxesData(selector) {\n  return d3.selectAll(selector).selectAll('input:checked').data();\n}\n","\nexport function fetchable(tbl) {\n  return ['In progress', 'Queued', 'Aborting'].includes(tbl.status);\n}\n\n\nexport function abortRequestable(tbl) {\n  return ['In progress', 'Queued'].includes(tbl.status);\n}\n\n\nexport function conclike(col) {\n  return col.hasOwnProperty('valueType')\n    && ['AC50', 'IC50', 'ED50'].includes(col.valueType);\n}\n\n\nexport function dataSourceId(domain, resource, column) {\n  return [domain, resource, column]\n    .map(e => e.capitalize())\n    .join('');  // DomainResourceColumn\n}\n","\nimport pako from 'pako';\n\n\nexport function readFile(file, sizeLimit, blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const truncated = sizeLimit ? file.slice(0, sizeLimit) : file;\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    if (blob) {\n      reader.readAsArrayBuffer(truncated);\n    } else {\n      reader.readAsText(truncated);\n    }\n  });\n}\n\n\nexport function parseJSON(data, compressed) {\n  const text = compressed ? pako.inflate(data, {to: 'string'}) : data;\n  return JSON.parse(text);\n}\n\n\nexport function loadJSON(file) {\n  const compressed = file.name.endsWith('.gz');\n  return readFile(file, false, compressed)\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function fetchJSON(url) {\n  const decoded = decodeURIComponent(url);\n  const compressed = decoded.endsWith('.gz');\n  return fetch(decoded)\n    .then(res => compressed ? res.arrayBuffer() : res.json())\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function downloadDataFile(data, name) {\n  try {\n    // cannot hundle large file with dataURI scheme\n    // url = \"data:application/json,\" + encodeURIComponent(JSON.stringify(json))\n    const url = window.URL.createObjectURL(new Blob([data]));\n    const a = document.createElement('a');\n    a.download = name;\n    a.href = url;\n    // a.click() does not work on firefox\n    a.dispatchEvent(new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    }));\n    // window.URL.revokeObjectURL(url) does not work on firefox\n  } catch (e) {\n    // no DOM (unit testing)\n  }\n}\n\n\nexport function downloadJSON(json, name, compress=true) {\n  const str = JSON.stringify(json);\n  const data = compress ? pako.gzip(str) : str;\n  const ext = compress ? '.gz' : '';\n  downloadDataFile(data, `${name}.json${ext}`);\n}\n","\nimport {dataSourceId} from '../helper/definition.js';\nimport {default as store} from './IDBStore.js';\nimport {LocalServerActivity, LocalServerChemical} from '../fetcher/LocalServer.js';\nimport {ScreenerFitting, ScreenerRawValue} from '../fetcher/Screener.js';\nimport {ScreenerFittingStub, ScreenerRawValueStub} from '../fetcher/ScreenerTestStub.js';\n\n\n// Global config\n\nconst globalConfig = {\n  \"onLine\": true,\n  \"server\": {},\n  \"templates\": {},\n  \"urlQuery\": {}\n};\n\nwindow.location.search.substring(1).split(\"&\")\n  .map(e => e.split('=')).forEach(e => {\n    globalConfig.urlQuery[e[0]] = e[1];\n  });\n\n\nexport function getGlobalConfig(key) {\n  return globalConfig[key];\n}\n\n\nexport function setGlobalConfig(key, value) {\n  globalConfig[key] = value;\n}\n\n\n// API instances\n\nconst API = new Map(Object.entries({\n  chemical: new LocalServerChemical(),\n  activity: new LocalServerActivity(),\n  screenerrawvalue: new ScreenerRawValue(),\n  screenerfitting: new ScreenerFitting(),\n  screenerrawvaluestub: new ScreenerRawValueStub(),\n  screenerfittingstub: new ScreenerFittingStub()\n}));\n\n\nexport function localChemInstance() {\n  return API.get('chemical');\n}\n\n\nexport function getFetcher(domain) {\n  return API.get(domain);\n}\n\n\nexport function fetcherInstances() {\n  return Array.from(API.values());\n}\n\n\nexport function dataFetcherInstances() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(v);\n  });\n  return res;\n}\n\n\nexport function dataFetcherDomains() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(k);\n  });\n  return res;\n}\n\n\n// API data resource on local IndexedDB\n\nexport function getResources(domains) {\n  return store.getResources().then(rsrcs => {\n    return rsrcs.filter(e => domains.includes(e.domain));\n  });\n}\n\n\nexport function setResources(rsrcs) {\n  return store.putResources(rsrcs);\n}\n\n\nexport function getResourceColumns(domains) {\n  return getResources(domains).then(rsrcs => {\n    return rsrcs.map(rsrc => {\n      return rsrc.columns.map(col => {\n        col.domain = rsrc.domain;\n        col.key = dataSourceId(rsrc.domain, rsrc.id, col.key);\n        col.entity = rsrc.entity;\n        if (!col.hasOwnProperty('tags')) col.tags = rsrc.tags;\n        return col;\n      });\n    }).extend();\n  });\n}\n\n\nexport function getDataSourceColumns(domain, ids) {\n  return store.getResources([domain]).then(rsrcs => {\n    return ids.map(d => rsrcs.find(e => e.id === d).columns)\n      .extend();\n  });\n}\n\n\n// Datatable on local IndexedDB\n\nexport function getAllTables() {\n  return store.getAllItems();\n}\n\n\nexport function getTablesByFormat(format) {\n  return store.getItemsByFormat(format);\n}\n\n\nexport function getTable(tableId) {\n  return store.getItemById(tableId);\n}\n\n\nexport function getRecords(tableId) {\n  return store.getItemById(tableId)\n    .then(tbl => tbl.records);\n}\n\n\nexport function getCurrentTable() {\n  const q = getGlobalConfig('urlQuery');\n  if (!q.hasOwnProperty('id')) return Promise.resolve();\n  return store.getItemById(q.id);\n}\n\n\nexport function getCurrentRecords() {\n  return getCurrentTable().then(tbl => tbl.records);\n}\n\n\nexport function setColumnsToShow(updates) {\n  return store.updateItem(getGlobalConfig('urlQuery').id, item => {\n    item.columns.forEach((col, i) => {\n      col.visible = updates.visibles.includes(col.key);\n      col.sort = updates.sorts[i];\n      col.digit = updates.digits[i];\n    });\n  });\n}\n\n\nexport function joinColumn(mapping, tableId=globalConfig.urlQuery.id) {\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  return store.updateItem(tableId, item => {\n    item.records\n      .filter(rcd => mapping.mapping.hasOwnProperty(rcd[mapping.key]))\n      .forEach(rcd => {\n        if (mapping.hasOwnProperty('column')) {\n          rcd[mapping.column.key] = mapping.mapping[rcd[mapping.key]];\n        } else {\n          mapping.columns.forEach((col, i) => {\n            rcd[col.key] = mapping.mapping[rcd[mapping.key]][i];\n          });\n        }\n      });\n    item.columns = item.columns.concat(cols).unique('key');\n    item.lastUpdated = mapping.lastUpdated;\n  });\n}\n\n\nexport function updateTableAttribute(tblID, key, value) {\n  return store.updateItem(tblID, item => {\n    item[key] = value;\n  });\n}\n\n\nexport function insertTable(data) {\n  return store.putItem(data);\n}\n\n\nexport function updateTable(data) {\n  if (data === undefined) return Promise.resolve();  // No update\n  if (data.status === 'Failure') {  // No data found on server\n    return updateTableAttribute(data.id, 'status', 'Failure');\n  }\n  // update\n  return store.updateItem(data.id, item => {\n    const update = {\n      responseDate: data.responseDate,\n      records: data.records,\n      columns: data.columns,\n      recordCount: data.recordCount,\n      searchDoneCount: data.searchDoneCount,\n      execTime: data.execTime,\n      progress: data.progress,\n      status: data.status,\n    };\n    if (data.hasOwnProperty('lastUpdated')) {\n      update.lastUpdated = data.lastUpdated;\n    }\n    Object.assign(item, update);\n  });\n}\n\n\nexport function deleteTable(id) {\n  return store.deleteItem(id);\n}\n\n\nexport function reset() {\n  return store.reset();\n}\n","\nimport {\n  setGlobalConfig, localChemInstance, fetcherInstances, setResources\n} from './store/StoreConnection.js';\n\nconst localServer = localChemInstance();\n\n\nfunction initialize() {\n  if ('serviceWorker' in navigator && !debug) {\n    navigator.serviceWorker\n      .register('sw.js')\n      .then(registration => {\n        console.info(\n          'ServiceWorker registration successful with scope: ',\n          registration.scope\n        );\n      }).catch(err => {\n        console.info('ServiceWorker registration failed: ', err);\n      });\n  } else if (debug) {\n    console.info('Off-line mode is disabled for debugging');\n  } else {\n    console.info('Off-line mode is not supported');\n  }\n  const serverTmpl = localServer.templates().then(res => {\n    setGlobalConfig('templates', res.templates);\n  });\n  const serverConfig = localServer.status().then(res => {\n    setGlobalConfig('server', res);\n  });\n  // TODO: skip loader if there is already resources in the store\n  // 1. collate resource version\n  // 2. if no local resource or server resource is newer, fetch\n  const rsrcFetched = fetcherInstances()\n    .map(api => api.getResources())\n    .extendAsync().then(res => {\n      const indexed = res.map((e, i) => {\n        e.idx = i;\n        return e;\n      });\n      return setResources(indexed);\n    });\n  return Promise.all([serverTmpl, serverConfig, rsrcFetched]);\n}\n\n\nexport function loader() {\n  if (document.location.protocol === \"file:\") {\n    console.info('Off-line mode (local file)');\n    setGlobalConfig('onLine', false);\n    return Promise.resolve();\n  }\n  if ('onLine' in navigator) {\n    if (!navigator.onLine) {\n      console.info('Off-line mode (no internet connection)');\n      setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    }\n  }\n  return fetch(`${localServer.baseURL}favicon.ico`)\n    .then(() => {\n      // HTTP 404\n      setGlobalConfig('onLine', true);\n      return initialize();\n    }).catch(() => {\n      console.info('Off-line mode (server not responding)');\n      setGlobalConfig('onLine', false);\n      return Promise.resolve();\n    });\n}\n","\n/** @module dataStructure */\n\n\nexport function columnMappingToTable(mapping) {\n  const keyCol = {\n    key: mapping.key,\n    name: mapping.key,\n    sort: 'text',\n    visible: true\n  };\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  const tbl = {\n    columns: [keyCol].concat(cols),\n    records: Object.entries(mapping.mapping).map(entry => {\n      const rcd = {};\n      rcd[mapping.key] = entry[0];\n      if (mapping.hasOwnProperty('column')) {\n        rcd[mapping.column.key] = entry[1];\n      } else {\n        const colKeys = mapping.columns.map(col => col.key);\n        entry[1].forEach((val, i) => {\n          rcd[colKeys[i]] = val;\n        });\n      }\n      return rcd;\n    })\n  };\n  return tbl;\n}\n\n\nexport function csvToMapping(csvString) {\n  const lines = csvString.split(/\\n|\\r|\\r\\n/);\n  const header = lines.shift().split(',');\n  const key = header.shift();\n  const now = new Date();\n  const mapping = {\n    created: now.toString(),\n    columns: [],\n    key: key,\n    mapping: {}\n  };\n  const headerIdx = [];\n  header.forEach((h, i) => {\n    if (h === '') return;\n    headerIdx.push(i);\n    mapping.columns.push({key: h, name: h, sort: 'text', visible: true});\n  });\n  lines.forEach(line => {\n    const values = line.split(',');\n    const k = values.shift();\n    mapping.mapping[k] = Array(headerIdx.length);\n    headerIdx.forEach(i => {\n      mapping.mapping[k][i] = values[i];\n    });\n  });\n  return mapping;\n}\n\nexport function singleToMultiMapping(mapping) {\n  const newMapping = {};\n  Object.entries(mapping.mapping).forEach(m => {\n    newMapping[m[0]] = [m[1]];\n  });\n  return {\n    created: mapping.created,\n    columns: [mapping.column],\n    key: mapping.key,\n    mapping: newMapping\n  };\n}\n","\nimport d3 from 'd3';\n\n\n/**\n * Format number\n * @param {object} value - value\n * @param {string} type - si | scientific | rounded | raw\n */\nexport function formatNum(value, type) {\n  const conv = {\n    scientific: \".3e\",\n    si: \".3s\",\n    rounded: \".3r\"\n  };\n  if (type === 'raw') return value;\n  if (value === undefined || value === null || Number.isNaN(value)) return '';\n  return value == parseFloat(value) ? d3.format(conv[type])(value) : value;\n}\n\nexport function partialMatch(query, target) {\n  if (target === undefined || target === null || target === '') return false;\n  return target.toString().toUpperCase()\n    .indexOf(query.toString().toUpperCase()) !== -1;\n}\n\nexport function numericAsc(a, b) {\n  const fa = parseFloat(a);\n  const fb = parseFloat(b);\n  if (isNaN(fa) || isNaN(fb)) {\n    return String(b).localeCompare(String(a));\n  }\n  return fb - fa;\n}\n\n\nexport function numericDesc(a, b) {\n  return numericAsc(b, a);\n}\n\n\nexport function textAsc(a, b) {\n  return String(b).localeCompare(String(a));\n}\n\n\nexport function textDesc(a, b) {\n  return textAsc(b, a);\n}\n","\nexport function getSDFPropList(str) {\n  const re = />.*?<(\\S+)>/g;\n  const uniqCols = new Set();\n  let arr;\n  while ((arr = re.exec(str)) !== null) {\n    uniqCols.add(arr[1]);\n  }\n  return Array.from(uniqCols);\n}\n","import vega from 'vega';\n\nexport function showPlot(vegaSpec, selector) {\n  new vega.View(vega.parse(vegaSpec))\n    .initialize(selector)\n    .run();\n\n}\n\nexport function plotThumbnail(vegaSpec) {\n  const view = new vega.View(vega.parse(vegaSpec));\n  return view.toImageURL('png');  // Promise\n}\n","\nimport d3 from 'd3';\nimport {\n  formatNum, numericAsc, textAsc, numericDesc, textDesc\n} from '../helper/formatValue.js';\n\n\nexport function selectOptions(selection, data, key, text) {\n  const options = selection.selectAll('option')\n    .data(data, key);\n  options.exit().remove();\n  options.enter().append('option')\n    .merge(options)\n      .attr('value', key)\n      .text(text);\n}\n\n\nexport function checkboxList(selection, data, name, key, text) {\n  const items = selection.selectAll('li').data(data, key);\n  items.exit().remove();\n  const entered = items.enter().append('li')\n    .attr('class', 'form-check')\n    .append('label');\n  entered.append('input');\n  entered.append('span');\n  const updated = entered.merge(items.select('label'))\n    .attr('class', 'form-check-label');\n  updated.select('input')\n    .attr('type', 'checkbox')\n    .attr('class', 'form-check-input')\n    .attr('name', name)\n    .attr('value', key);\n  updated.select('span')\n    .text(text);\n}\n\n\nexport function createTable(selection, tbl) {\n  // Header\n  if (!selection.select('thead').size()) {\n    selection.append('thead').append('tr');\n  }\n  // Records\n  if (!selection.select('tbody').size()) {\n    selection.append('tbody');\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false\n  );\n  const header = selection.select('thead tr').selectAll('th')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('th')\n    .merge(header)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nexport function updateTableRecords(selection, rcds, keyFunc) {\n  const header = selection.select('thead tr').selectAll('th')\n    .data();\n  const rowSelection = selection.select('tbody').selectAll('tr')\n    .data(rcds, keyFunc);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('tr');\n  rowEntered.selectAll('td')\n    .data(d => header.map(e => d[e.key]))\n    .enter().append('td');\n  rowEntered.merge(rowSelection)\n    .selectAll('td')\n    .classed('align-middle', true)\n    .html((d, i) => {\n      if (d === undefined) return '';\n      if (header[i].valueType === 'plot') return '[plot]';\n      if (header[i].valueType === 'image') return '[image]';\n      if (header[i].hasOwnProperty('digit') && header[i].digit !== 'raw') {\n        return formatNum(d, header[i].digit);\n      }\n      return d;\n    });\n}\n\n\nexport function appendTableRows(selection, rcds, keyFunc) {\n  const newRcds = selection.select('tbody').selectAll('tr').data();\n  Array.prototype.push.apply(newRcds, rcds);\n  updateTableRecords(selection, newRcds, keyFunc);\n}\n\n\nexport function addSort(selection) {\n  selection.select('thead tr').selectAll('th')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? numericAsc : textAsc)\n        : (isNum ? numericDesc : textDesc);\n      selection.select('tbody').selectAll('tr')\n        .sort((a, b) => cmp(a[d.key], b[d.key]));\n      d3.select(`#sort-${d.key}`)\n        .text(isAsc ? '^' : 'v');\n    });\n}\n\n\nexport function formatNumbers(selection) {\n  // DEPRECATED: no longer used\n  selection.select('thead tr').selectAll('th')\n    .each((col, colIdx) => {\n      if (!col.hasOwnProperty('digit') || col.digit === 'raw') return;\n      selection.select('tbody').selectAll('tr')\n        .selectAll('td')\n          .filter((d, i) => i === colIdx)\n          .text(d => formatNum(d, col.digit));\n    });\n}\n","\nimport d3 from 'd3';\nimport {\n  formValue, formInt, formFloat, formChecked,\n  checkboxValues, selectedOptionValues, textareaLines,\n  firstFile, selectedCheckboxesData, selectedOptionData\n} from '../helper/d3Selection.js';\nimport {\n  csvToMapping, columnMappingToTable, singleToMultiMapping\n} from '../helper/dataStructure.js';\nimport {partialMatch} from '../helper/formatValue.js';\nimport {readFile} from '../helper/file.js';\nimport {getSDFPropList} from '../helper/parser.js';\nimport {plotThumbnail} from '../helper/image.js';\nimport {\n  localChemInstance, getFetcher, dataFetcherDomains, getGlobalConfig,\n  getResourceColumns, getDataSourceColumns, setColumnsToShow\n} from '../store/StoreConnection.js';\nimport {\n  checkboxList, selectOptions, createTable, updateTableRecords\n} from './Component.js';\n\nconst localServer = localChemInstance();\n\n\nfunction mergeDataSourceColumns(data) {\n  return getDataSourceColumns(data.domain, data.dataSource)\n  .then(cols => getFetcher(data.domain).formatResult(cols, data));\n}\n\n\nexport function pickDialog(rsrc, callback) {\n  d3.select('#pick-target')\n    .call(selectOptions, rsrc, d => d.entity, d => d.name)\n    .on('change', function () {\n      const rsrctbl = selectedOptionData(this);\n      d3.select('#pick-queryarea').text(rsrctbl.placeholders.ID);\n    });\n  d3.select('#pick-queryarea').text(rsrc[0].placeholders.ID);  // initial value\n  d3.select('#pick-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        method: 'chemsql',\n        targets: [formValue('#pick-target')],\n        key: 'ID',\n        values: textareaLines('#pick-queryarea'),\n        operator: 'fm'\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nexport function propDialog(rsrc, callback) {\n  d3.select('#prop-targets')\n    .call(checkboxList, rsrc, 'targets', d => d.entity, d => d.name)\n    .on('change', function () {\n      const cols = selectedCheckboxesData('#prop-targets')\n        .map(d => d.columns)\n        .extend().unique('key');\n      d3.select('#prop-key')\n        .call(selectOptions, cols, d => d.key, d => d.name);\n    });\n  d3.select('#prop-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedColumn = selectedOptionData('#prop-key');\n      const query = {\n        method: selectedColumn.method,\n        targets: checkboxValues('#prop-targets'),\n        key: selectedColumn.key,\n        values: textareaLines('#prop-queryarea'),\n        operator: formValue('#prop-operator')\n      };\n      return localServer.getRecords(query)\n      .then(mergeDataSourceColumns)\n      .then(callback);\n    });\n}\n\n\nexport function structDialog(rsrc, callback) {\n  d3.select('#struct-qsrc')\n    .call(selectOptions, rsrc, d => d.entity, d => d.name);\n  d3.select('#struct-targets')\n    .call(checkboxList, rsrc, 'targets', d => d.entity, d => d.name);\n  d3.select('#struct-method').selectAll('option.rd')\n    .attr('disabled', getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#struct-method')\n    .on('change', function () {\n      const op = d3.select(this.selectedOptions[0]);\n      d3.select('#struct-thldtype')\n        .attr('disabled', op.classed('thld') ? null : 'disabled')\n        .property('value', op.classed('edge') ? 'edge' : 'sim');\n      d3.select('#struct-thld')\n        .attr('disabled', op.classed('thld') ? null : 'disabled');\n      d3.select('#struct-thldtype option.sim')\n        .attr('disabled', op.classed('sim') ? null : 'disabled');\n      d3.select('#struct-thldtype option.edge')\n        .attr('disabled', op.classed('edge') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.gls')\n        .attr('disabled', op.classed('gls') ? null : 'disabled');\n      d3.select('#struct-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n      d3.select('#struct-thld')\n        .attr('value', formValue('#struct-thldtype') === 'edge' ? 15 : 0.7)\n        .attr('min', formValue('#struct-thldtype') === 'edge' ? 5 : 0)\n        .attr('max', formValue('#struct-thldtype') === 'edge' ? 999 : 1.0)\n        .attr('step', formValue('#struct-thldtype') === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-thldtype')\n    .on('change', function () {\n      d3.select('#struct-thld')\n        .attr('value', this.value === 'edge' ? 15 : 0.7)\n        .attr('min', this.value === 'edge' ? 5 : 0)\n        .attr('max', this.value === 'edge' ? 999 : 1.0)\n        .attr('step', this.value === 'edge' ? 1 : 0.01);\n    });\n  d3.select('#struct-format')\n    .on('change', function () {\n      d3.select('#struct-qsrc')\n        .attr('disabled', this.value === 'dbid' ? null : 'disabled');\n    });\n  d3.select('#struct-preview')\n    .on('click', () => {\n      const fmt = formValue('#struct-format');\n      const query = {\n        format: fmt,\n        querySource: fmt === 'dbid' ? formValue('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? formValue('#struct-queryarea') : textareaLines('#struct-queryarea')[0],\n      };\n      return localServer.strprev(query)\n        .then(res => d3.select('#struct-image').html(res));\n    });\n  d3.select('#struct-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#struct-method').node().selectedOptions[0]);\n      const fmt = formValue('#struct-format');\n      const query = {\n        method: formValue('#struct-method'),\n        targets: checkboxValues('#struct-targets'),\n        format: fmt,\n        querySource: fmt === 'dbid' ? formValue('#struct-qsrc') : null,\n        value: fmt === 'molfile'\n          ? formValue('#struct-queryarea') : textareaLines('#struct-queryarea')[0],\n        thresholdType: formValue('#struct-thldtype'),\n        threshold: formFloat('#struct-thld'),\n        ignoreHs: formChecked('#struct-ignoreh'),\n        diameter: mthdop.classed('gls') ? formInt('#struct-diam') : null,\n        maxTreeSize: mthdop.classed('gls') ? formInt('#struct-tree') : null,\n        molSizeCutoff: mthdop.classed('gls') ? formInt('#struct-skip') : null,\n        timeout: mthdop.classed('rd') ? formInt('#struct-timeout') : null\n      };\n      return localServer.getRecords(query)\n        .then(mergeDataSourceColumns)\n        .then(callback);\n    });\n}\n\n\nexport function sdfDialog(callback) {\n  d3.select('#sdf-file')\n    .on('change', () => {\n      const reader = new FileReader();\n      const file = document.getElementById('sdf-file').files[0];\n      reader.onload = (e) => {\n        d3.select('#sdf-cols')\n          .call(checkboxList, getSDFPropList(e.target.result),\n                'columns', d => d, d => d\n          );\n      };\n      // Scan only first 100mb of the file due to memory limit.\n      reader.readAsText(file.slice(0, 100 * 1024 * 1024));\n    });\n  d3.select('#sdf-selectall')\n    .on('change', () => {\n      d3.select('#sdf-cols').selectAll('input')\n        .property('checked', formChecked('#sdf-selectall'));\n    });\n  d3.select('#sdf-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const query = {\n        contents: firstFile('#sdf-file'),\n        query: JSON.stringify({\n          columns: checkboxValues('#sdf-cols'),\n          implh: formChecked('#sdf-implh'),\n          recalc: formChecked('#sdf-recalc')\n        })\n      };\n      return localServer.importSDF(query).then(callback);\n    });\n}\n\nexport function columnDialog(tbl, callback) {\n  // TODO: need refactoring\n  const coltbl = {\n    columns: [\n      {key: 'name', sort: 'text', visible: true},\n      {key: 'visible', sort: 'text', visible: true},\n      {key: 'sort', sort: 'text', visible: true},\n      {key: 'digit', sort: 'numeric', visible: true}\n    ]\n  };\n  d3.select('#column-table thead').remove();\n  d3.select('#column-table tbody').remove();\n  d3.select('#column-table').call(createTable, coltbl)\n    .select('tbody').selectAll('tr')\n    .data(tbl.columns).enter().append('tr')\n    .each(function (row) {\n      d3.select(this).selectAll('td')\n        .data(d => coltbl.columns.map(e => d[e.key])).enter().append('td')\n        .each(function (cell, i) {\n          if (i === 0) {\n            d3.select(this).text(d => d);\n          } else if (i === 1) {\n            d3.select(this).classed('column-vis-select', true)\n              .append('input')\n                .attr('type', 'checkbox')\n                .attr('value', row.key)\n                .property('checked', d => d);\n          } else if (i === 2) {\n            d3.select(this).classed('column-sort-select', true)\n              .append('select')\n              .call(selectOptions,\n                    cell === 'none' ? ['none'] : ['numeric', 'text'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n          } else if (i === 3) {\n            d3.select(this).classed('column-digit-select', true)\n              .append('select')\n              .call(selectOptions, ['raw', 'rounded', 'scientific', 'si'], null, d => d)\n              .each(function (value) {\n                d3.select(this).selectAll('option')\n                  .property('selected', d => d === value);\n              });\n            if (row.sort !== 'numeric') {\n              d3.select(this).select('select').attr('disabled', 'disabled');\n            }\n          }\n        });\n    });\n  d3.select('#column-table tbody').selectAll('tr')\n    .on('change', function () {\n        const sort = d3.select(this).select('.column-sort-select select').node().value;\n        d3.select(this).select('.column-digit-select select')\n          .attr('disabled', sort === 'numeric' ? null : 'disabled');\n    });\n  d3.select('#column-submit')\n    .on('click', () => {\n      const query = {\n        visibles: checkboxValues('.column-vis-select'),\n        sorts: selectedOptionValues('.column-sort-select'),\n        digits: selectedOptionValues('.column-digit-select')\n      };\n      return setColumnsToShow(query).then(callback);\n    });\n}\n\n\nexport function joinDialog(tbl, rcds, callback) {\n  const domains = dataFetcherDomains();\n  // Prevent implicit submission\n  document.getElementById('join-search')\n    .addEventListener('keypress', event => {\n      if (event.keyCode === 13) event.preventDefault();\n    });\n  return getResourceColumns(domains).then(rsrcs => {\n    const shownCols = tbl.columns.map(e => e.key);\n    d3.select('#join-keys')\n      .call(checkboxList, rsrcs.unique('key'), 'keys',\n            d => d.key, d => d.name)\n      .selectAll('li')\n      .each(function(d) { // disable already shown columns\n        const ex = shownCols.includes(d.key);\n        d3.select(this).selectAll('label').select('input')\n          .property('checked', ex)\n          .attr('disabled', ex ? 'disabled' : null);\n      });\n    d3.select('#join-search').on('keyup', function () {\n      const match = d => partialMatch(formValue(this), d.name);\n      d3.select('#join-keys').selectAll('li')\n        .style('visibility', d => match(d) ? null : 'hidden')\n        .style('position', d => match(d) ? null : 'absolute');\n    });\n    d3.select('#join-submit').on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const selectedCols = checkboxValues('#join-keys');\n      const mpgs = rsrcs\n        .filter(col => !shownCols.includes(col.key))\n        .filter(col => selectedCols.includes(col.key))\n        .map(col => {\n          const ids = rcds.map(row => row.ID);\n          const api = getFetcher(col.domain);\n          return api.getMapping(ids, col);\n        });\n      return Promise.all(mpgs).then(res => {\n        // callback(res.filter(e => Object.keys(e.mapping).length !== 0));\n        callback(res);\n      });\n    });\n  });\n}\n\n\nexport function importColDialog(tbl, callback) {\n  d3.select('#importcol-file')\n    .on('change', () => {\n      const file = document.getElementById('importcol-file').files[0];\n      const isCsv = file.name.split('.').pop() === 'csv';\n      readFile(file).then(res => {\n        const mapping = isCsv ? csvToMapping(res) : JSON.parse(res);\n        const tbl = columnMappingToTable(mapping);\n        d3.select('#importcol-preview').call(createTable, tbl)\n          .call(updateTableRecords,\n                tbl.records.slice(0, 5), d => d[tbl.columns[0].key]);\n        // bind mapping\n        d3.select('#importcol-preview').datum(mapping);\n      });\n    });\n  d3.select('#importcol-submit')\n    .on('click', () => {\n      let mapping = d3.select('#importcol-preview').datum();\n      d3.select('#importcol-preview').datum(null);  // unbind mapping\n      // Generate thumbnails\n      const plotCols = [];\n      if (mapping.hasOwnProperty('column')) {\n        mapping = singleToMultiMapping(mapping);\n      }\n      mapping.columns.forEach((e, i) => {\n        if (e.valueType === 'plot') {\n          mapping.columns[i].valueType = 'image';\n          plotCols.push(i);\n        }\n      });\n      if (plotCols.length > 0) {\n        const ps = [];\n        Object.entries(mapping.mapping).forEach(m => {\n          plotCols.forEach(e => {\n            const p = plotThumbnail(m[1][e])\n              .then(img => {\n                mapping.mapping[m[0]][e] = img;\n              });\n            ps.push(p);\n          });\n        });\n        Promise.all(ps).then(() => callback([mapping]));\n      } else {\n        callback([mapping]);\n      }\n    });\n}\n\n\nexport function graphDialog(tbl, rcds, callback) {\n  d3.select('#graph-measure').selectAll('option.rd')\n    .attr('disabled', getGlobalConfig('rdk') === true ? null : 'disabled');\n  d3.select('#graph-measure')\n    .on('change', function () {\n      d3.select('#graph-options').selectAll('.gls')\n        .attr('disabled', this.value === 'gls' ? null : 'disabled');\n      d3.select('#graph-options').selectAll('.fmcs')\n        .attr('disabled', this.value === 'rdfmcs' ? null : 'disabled');\n    });\n  d3.select('#graph-submit')\n    .on('click', () => {\n      d3.select('#loading-circle').style('display', 'inline');\n      const mthdop = d3.select(d3.select('#graph-measure').node().selectedOptions[0]);\n      const query = {\n        measure: formValue('#graph-measure'),\n        indices: [],\n        molecules: [],\n        nodeTableId: tbl.id,\n        threshold: formFloat('#graph-thld'),\n        ignoreHs: formChecked('#graph-ignoreh'),\n        diameter: mthdop.node().value === 'gls' ? formInt('#graph-diam') : null,\n        maxTreeSize: mthdop.node().value === 'gls' ? formInt('#graph-tree') : null,\n        molSizeCutoff: mthdop.node().value === 'gls' ? formInt('#graph-skip') : null,\n        timeout: mthdop.classed('rd') ? formInt('#graph-timeout') : null\n      };\n      rcds.forEach(e => {\n        query.molecules.push(e._mol);\n        query.indices.push(e._index);\n      });\n      return localServer.getRecords(query).then(callback);\n    });\n}\n\n\nexport function graphConfigDialog(edges, callback) {\n  d3.select('#graphconfig-thld')\n    .attr('value', edges.networkThreshold)\n    .attr('max', 1.0)\n    .attr('min', edges.query.threshold);\n  d3.select('#graphconfig-submit')\n    .on('click', () => {\n      const newThld = formFloat('#graphconfig-thld');\n      if (newThld < edges.query.threshold) return;  // TODO: fool proof\n      callback(newThld);\n    });\n}\n\n\nexport function communityDialog(callback) {\n  d3.select('#community-name').attr('value', 'comm_');\n  d3.select('#community-submit')\n    .on('click', () => {\n      const query = {\n        name: formValue('#community-name'),\n        nulliso: formChecked('#community-nulliso')\n      };\n      callback(query);\n    });\n}\n","\nimport d3 from 'd3';\nimport {fetchable, abortRequestable} from '../helper/definition.js';\n\n\nexport function renderStatus(tbl, refresh_callback, abort_callback) {\n  d3.select('#loading-circle').style('display', 'none');\n  if (!tbl.hasOwnProperty('status')) tbl.status = 'Completed';\n  d3.select('title').text(tbl.name);\n  d3.select('#title').text(tbl.name);\n  d3.select('#refresh')\n    .text(tbl.status === 'Aborting' ? 'Abort requested' : 'Refresh')\n    .style('display', fetchable(tbl) ? 'inline-block' : 'none');\n  d3.select('#abort')\n    .style('display', abortRequestable(tbl) ? 'inline-block' : 'none');\n  const doneText = {\n    'datatable': 'entries found',\n    'connection': 'connections created'\n  };\n  const dtx = doneText[tbl.format];\n  d3.select('#progress')\n    .text(`(${tbl.status} - ${tbl.recordCount} ${dtx} in ${tbl.execTime} sec.)`);\n  if (tbl.status === 'In progress') {\n    d3.select('#progress').append('div').append('progress')\n      .attr('max', 100)\n      .attr('value', tbl.progress)\n      .text(`${tbl.progress}%`);\n  }\n  d3.select('#refresh').on('click', refresh_callback);\n  d3.select('#abort')\n    .on('click', () => {\n      d3.select('#confirm-message')\n        .text('Are you sure you want to abort this calculation job?');\n      d3.select('#confirm-submit')\n        .classed('btn-primary', false)\n        .classed('btn-warning', true)\n        .on('click', () => {\n          abort_callback();\n        });\n    });\n  console.info('Query');\n  console.info(tbl.query);  // query datails are available on browser console.\n}\n\n\nexport function initializeWithData() {\n  d3.select('#new-data').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n}\n\n\nexport function initialize() {\n  d3.select('#data-control').style('display', 'none');\n  d3.select('#nodedata').style('display', 'none');\n  d3.select('#refresh').style('display', 'none');\n  d3.select('#abort').style('display', 'none');\n  d3.select('#loading-circle').style('display', 'none');\n  d3.select('#status').selectAll('li').style('display', 'none');\n}\n","\nimport d3 from 'd3';\nimport {\n  formatNum, numericAsc, textAsc, numericDesc, textDesc\n} from '../helper/formatValue.js';\nimport {showPlot} from '../helper/image.js';\n\n\nconst defaultColumnWidth = {\n  numeric: 120,\n  text: 200,\n  none: 200\n};\n\nconst defaultColumnHeight = {\n  numeric: 40,\n  text: 40,\n  none: 200\n};\n\n\nexport function createDataGrid(selection, tbl) {\n  // Header\n  if (!selection.select('div.dg-header').size()) {\n    selection.append('div').classed('dg-header', true);\n  }\n  // Body\n  if (!selection.select('div.dg-viewport').size()) {\n    selection.append('div').classed('dg-viewport', true)\n      .append('div').classed('dg-body', true);\n  }\n  const cols = tbl.columns\n    .filter(e => !e.hasOwnProperty('visible') || e.visible !== false)\n    .map(e => {\n      e.width = defaultColumnWidth[e.sort || 'numeric'];\n      e.height = defaultColumnHeight[e.sort || 'numeric'];\n      return e;\n    });\n  const rowSize = {\n    height: cols.reduce((a, b) => a.height > b.height ? a : b).height,\n    width: cols.reduce((a, b) => ({width: a.width + b.width})).width\n  };\n  selection.style('width', `${rowSize.width}px`);\n  selection.select('.dg-header').datum(rowSize);\n  const header = selection.select('.dg-header').selectAll('.dg-hcell')\n    .data(cols, d => d.key);\n  header.exit().remove();\n  header.enter().append('div')\n      .classed('dg-hcell', true)\n      .style('display', 'inline-block')\n    .merge(header)\n      .style('width', d => `${d.width}px`)\n      .text(d => d.hasOwnProperty('name') ? d.name : d.key);\n}\n\n\nfunction updateRows(selection, rcds, keyFunc, position, visibleRows) {\n  const rSize = selection.select('.dg-header').datum();\n  const cData = selection.select('.dg-header').selectAll('.dg-hcell')\n    .data();\n  const topPos = Math.min(position, Math.max(0, rcds.length - visibleRows + 1));\n  const bottomPos = topPos + visibleRows;\n  const rcdSlice = rcds.slice(topPos, Math.min(bottomPos, rcds.length));\n  const rowSelection = selection.select('.dg-body')\n    .selectAll('.dg-row')\n      .data(rcdSlice, keyFunc)\n      .style('height', `${rSize.height}px`);\n  rowSelection.exit().remove();\n  const rowEntered = rowSelection.enter().append('div')\n      .attr('class', 'dg-row')\n      .style('position', \"absolute\");\n  rowEntered.selectAll('.dg-cell')\n    .data(cData.map(e => e.width))\n    .enter().append('div')\n      .classed('dg-cell', true)\n      .classed('align-middle', true)\n      .style('display', 'inline-block')\n      .style('width', d => `${d}px`);\n  rowEntered.merge(rowSelection)\n    .order()\n    .each(function(d, ri) {\n      const rowPos = (position + ri) * rSize.height;\n      d3.select(this)\n        .style('transform', `translate(0px, ${rowPos}px)`)\n        .classed('odd', (position + ri) % 2 === 0)\n      .selectAll('.dg-cell')\n        .html(function(_, i) {\n          d3.select(this).attr('id', `c${ri}-${i}`);\n          const value = d[cData[i].key];\n          if (value === undefined) return '';\n          if (cData[i].valueType === 'plot') return '';\n          if (cData[i].valueType === 'image') {  // data URI\n            return `<img src=\"${value}\" width=\"180\" height=\"180\"/>`;\n          }\n          if (cData[i].hasOwnProperty('digit') && cData[i].digit !== 'raw') {\n            return formatNum(value, cData[i].digit);\n          }\n          return value;\n        })\n        .each(function(_, i) {\n          if (cData[i].valueType !== 'plot') return;\n          if (!d.hasOwnProperty(cData[i].key)) return;\n          const value = d[cData[i].key];\n          showPlot(value, `#c${ri}-${i}`);\n        });\n    });\n}\n\n\nexport function dataGridRecords(selection, rcds, keyFunc) {\n  const rSize = selection.select('.dg-header').datum();\n  const bodyHeight = rcds.length * rSize.height;\n  let position;\n  let visibleRows;\n  selection.select('.dg-body')\n    .style('height', `${bodyHeight}px`)\n    .style('position', \"relative\");\n  selection.select('.dg-viewport')\n    .style('overflow-y', 'auto')\n    .on('scroll', function() {\n      const scrollTop = d3.select(this).node().scrollTop;\n      const newPos = Math.min(Math.floor(scrollTop / rSize.height), rcds.length);\n      if (newPos !== position) {\n        position = newPos;\n        updateRows(selection, rcds, keyFunc, position, visibleRows);\n      }\n    });\n  d3.select(window)\n    .on('resize', function() {\n      const viewport = selection.select('.dg-viewport');\n      const viewportTop = viewport.node().getBoundingClientRect().top;\n      const viewportHeight = window.innerHeight - viewportTop - 5;\n      viewport.style('height', `${viewportHeight}px`);\n      const newVis = Math.ceil(viewportHeight / rSize.height) + 1;\n      if (newVis !== visibleRows) {\n        visibleRows = newVis;\n        viewport.dispatch('scroll');\n      }\n    })\n    .dispatch('resize');\n}\n\n\nexport function addSort(selection, rcds, keyFunc) {\n  selection.select('.dg-header').selectAll('.dg-hcell')\n    .filter(d => d.sort !== 'none')\n    .append('span').append('a')\n      .attr('id', d => `sort-${d.key}`)\n      .text('^v')\n      .style('display', 'inline-block')\n      .style('width', '30px')\n      .style('text-align', 'center')\n    .on('click', d => {\n      const isAsc = d3.select(`#sort-${d.key}`).text() === 'v';\n      d3.select(`#sort-${d.key}`).text(isAsc ? '^' : 'v');\n      const isNum = !d.hasOwnProperty('sort') || d.sort === 'numeric';\n      const cmp = isAsc\n        ? (isNum ? numericAsc : textAsc)\n        : (isNum ? numericDesc : textDesc);\n      const sorted = rcds.sort((a, b) => cmp(a[d.key], b[d.key]));\n      dataGridRecords(selection, sorted, keyFunc);\n    });\n}\n","\nimport d3 from 'd3';\n\nimport {formValue} from './helper/d3Selection.js';\nimport {fetchable} from './helper/definition.js';\nimport {fetchJSON, loadJSON, downloadJSON, downloadDataFile} from './helper/file.js';\nimport {loader} from './Loader.js';\nimport {\n  getGlobalConfig, getFetcher, getResources, getDataSourceColumns,\n  localChemInstance, insertTable, updateTable, joinColumn,\n  getCurrentTable, getCurrentRecords, updateTableAttribute\n} from './store/StoreConnection.js';\nimport {pickDialog, structDialog, propDialog, sdfDialog,\n  columnDialog, importColDialog, joinDialog, graphDialog\n} from './component/Dialog.js';\nimport {renderStatus, initialize, initializeWithData} from './component/Header.js';\nimport {\n  createDataGrid, dataGridRecords, addSort\n} from './component/DataGrid.js';\nconst localServer = localChemInstance();\n\n\nfunction idLink(rcds, idKey) {\n  rcds.filter(e => e.hasOwnProperty(idKey))\n    .forEach(e => {\n      e[idKey] = `<a href=\"profile.html?compound=${e[idKey]}\" target=\"_blank\">${e[idKey]}</a>`;\n    });\n}\n\n\nfunction renderTableContents(tbl) {\n  return getCurrentRecords().then(rcds => {\n    const copied = JSON.parse(JSON.stringify(rcds));  // deep copy\n    idLink(copied, 'ID');\n    d3.select('#datatable')\n      .call(createDataGrid, tbl)\n      .call(dataGridRecords, copied, d => d._index)\n      .call(addSort, copied, d => d._index);\n    if (!getGlobalConfig('onLine')) return Promise.resolve();\n    graphDialog(tbl, rcds, res => {\n      res.networkThreshold = res.query.threshold;\n      return insertTable(res).then(() => {\n        d3.select('#loading-circle').style('display', 'none');\n        window.open(`graph.html?id=${res.id}`, '_blank');\n      });\n    });\n    joinDialog(tbl, rcds, mappings => {\n      return Promise.all(mappings.map(e => joinColumn(e))).then(render);\n    });\n  });\n}\n\n\nfunction render() {\n  return getCurrentTable().then(tbl => {\n    columnDialog(tbl, render);\n    importColDialog(tbl, colMaps => {\n      const joined = colMaps.map(mp => joinColumn(mp));\n      return Promise.all(joined).then(render);\n    });\n    renderStatus(tbl, refresh, abort);\n    d3.select('#rename')\n      .on('click', () => {\n        d3.select('#prompt-title').text('Rename table');\n        d3.select('#prompt-label').text('New name');\n        d3.select('#prompt-input').attr('value', tbl.name);\n        d3.select('#prompt-submit')\n          .on('click', () => {\n            const name = formValue('#prompt-input');\n            return updateTableAttribute(tbl.id, 'name', name)\n              .then(getCurrentTable)\n              .then(t => renderStatus(t, refresh, abort));\n          });\n      });\n    d3.select('#export')\n      .on('click', () => downloadJSON(tbl, tbl.name, true));\n    if (getGlobalConfig('onLine')) {\n      d3.select('#excel')\n        .on('click', () => {\n          const query = {json: new Blob([JSON.stringify(tbl)])};\n          return localServer.exportExcel(query)\n            .then(xhr => downloadDataFile(xhr, `${tbl.name}.xlsx`));\n        });\n      d3.select('#sdfile')\n        .on('click', () => {\n          const query = {json: new Blob([JSON.stringify(tbl)])};\n          return localServer.exportSDFile(query)\n            .then(xhr => downloadDataFile(xhr, `${tbl.name}.sdf`));\n        });\n    }\n    return renderTableContents(tbl);\n  });\n}\n\n\nd3.select('#import-json')\n  .on('click', () => document.getElementById('select-file').click());\nd3.select('#select-file')\n  .on('change', () => {\n    const file = document.getElementById('select-file').files[0];\n    loadJSON(file).then(loadNewTable);\n  });\n\n\nfunction loadNewTable(data) {\n  return insertTable(data).then(() => {\n    window.location = `datatable.html?id=${data.id}`;\n  });\n}\n\n\nfunction fetch_(command) {\n  return getCurrentTable().then(data => {\n    if (!fetchable(data)) return;\n    const queries = {id: data.id, command: command};\n    return localServer.getRecords(queries)\n      .then(res => {\n        return getDataSourceColumns(res.domain, res.dataSource)\n          .then(cols => getFetcher(res.domain).formatResult(cols, res));\n      }).then(updateTable);\n  });\n}\n\n\nfunction refresh() {\n  if (!getGlobalConfig('onLine')) return Promise.resolve();\n  return fetch_('update').then(isUpdated => {\n    if (isUpdated !== undefined) return render();\n  });\n}\n\n\nfunction abort() {\n  return fetch_('abort').then(isUpdated => {\n    if (isUpdated !== undefined) return render();\n  });\n}\n\n\nfunction run() {\n  if (getGlobalConfig('urlQuery').hasOwnProperty('location')) {\n    const url = getGlobalConfig('urlQuery').location;\n    return fetchJSON(url)\n      .then(tbl => insertTable(tbl).then(() => tbl.id))\n      .then(id => {\n        window.location = `datatable.html?id=${id}`;\n      });\n  }\n  return loader().then(() => {\n    if (!getGlobalConfig('onLine')) {\n      d3.selectAll('.online-command')\n        .style('color', '#cccccc')\n        .classed('disabled', true)\n        .on('click', () => d3.event.stopPropagation());\n    }\n    if (getGlobalConfig('urlQuery').hasOwnProperty('id')) {\n      initializeWithData();\n      return fetch_('update').then(render);\n    } else {\n      initialize();\n      sdfDialog(loadNewTable);\n      if (!getGlobalConfig('onLine')) return Promise.resolve();\n      return getResources('chemical').then(rsrc => {\n        pickDialog(rsrc, loadNewTable);\n        structDialog(rsrc, loadNewTable);\n        propDialog(rsrc, loadNewTable);\n      });\n    }\n  });\n}\nrun();\n","\nimport Dexie from 'Dexie';\n\n// TODO: can indexed records improve query performance ?\n// TODO: remove app table. no longer used\n\nconst schema = {\n  app: 'key',\n  items: 'id, format, responseDate',\n  resources: 'idx, id'\n};\n\nlet idb = new Dexie('Store');\nidb.version(1).stores(schema);\n\n\nfunction getAppSetting(key) {\n  return idb.app.where('key').equals(key).first()\n    .then(res => {\n      if (res === undefined) return undefined;\n      return res.value;\n    });\n}\n\n\nfunction putAppSetting(k, v) {  // returns id in success\n  return idb.app.put({ key: k, value: v });\n}\n\n\nfunction getResources() {\n  return idb.resources.orderBy('idx')\n    .toArray();\n}\n\n\nfunction putResources(data) { // returns last id in success\n  return idb.resources.bulkPut(data);\n}\n\n\nfunction getAllItems() {\n  return idb.items.orderBy('responseDate').reverse()\n    .toArray();\n}\n\n\nfunction getItemsByFormat(format) {\n  return idb.items.where('format').equals(format).reverse()\n    .sortBy('responseDate');\n}\n\n\nfunction getItemById(tableId) {\n  return idb.items.where('id').equals(tableId).first();\n}\n\n\nfunction updateItem(tableId, callback) {  // returns num of updated items\n  return idb.items.where('id').equals(tableId).modify(callback);\n}\n\n\nfunction deleteItem(tableId) { // returns num of deleted items\n  return idb.items.where('id').equals(tableId).delete();\n}\n\n\nfunction putItem(data) { // returns id in success\n  return idb.items.put(data);\n}\n\n\nfunction reset() {\n  // Try this before tackling with local db troubles\n  return idb.delete().then(() => {\n    idb = new Dexie('Store');\n    idb.version(1).stores(schema);\n  });\n}\n\nexport default {\n  getAppSetting, putAppSetting, getResources, putResources,\n  getAllItems, getItemsByFormat, getItemById,\n  updateItem, deleteItem, putItem, reset\n};\n","\nexport default class Fetcher {\n  constructor() {\n    this.baseURL = \"\";\n    this.available = false;\n  }\n\n  xhrRequest(url, formData=null, options={}) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('method' in options ? options.method : 'POST', url);\n      xhr.responseType = 'responseType' in options ? options.responseType : 'json';\n      xhr.withCredentials = 'withCredentials' in options ? options.withCredentials : false;\n      xhr.onload = () => {\n        if (xhr.status !== 200) {\n          reject(xhr);\n        } else {\n          resolve(xhr.response);\n        }\n      };\n      xhr.send(formData);\n    });\n  }\n\n  now() {\n    const now = new Date();\n    return now.toString();\n  }\n\n  getResources() {\n    // required\n  }\n\n  formatResult(cols, data) {\n    // to be called by store.updateTable\n    // required for chemical domain\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getRecords() {\n    // required\n  }\n\n  getRecordsByCompound() {\n    // required for activity domain\n  }\n\n  getMapping() {\n    // required for activity domain\n  }\n\n  getGraphEdges() {\n\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class LocalServerActivity extends Fetcher {\n  constructor() {\n    super();\n    this.baseURL = './';\n    this.domain = 'activity';\n    this.entities = [];\n  }\n\n  serializedRequest(url, query={}) {\n    const formData = new FormData();\n    formData.set('query', JSON.stringify(query));\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  request(url, query={}) {\n    const formData = new FormData();\n    const qmap = new Map(Object.entries(query));\n    qmap.forEach((v, k) => {\n      if (Array.isArray(v)) {\n        v.forEach(e => formData.append(k, e));\n      } else {\n        formData.set(k, v);\n      }\n    });\n    return fetch(`${this.baseURL}${url}`,\n      {method: 'post', body: formData, credentials: 'include'});\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'sql';\n            col.visible = true;\n          });\n          this.entities.push(rsrc.entity);\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(queries) {\n    return this.serializedRequest('sql', queries)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  getRecordsByCompound(compound) {\n    // TODO: this.entities\n    const query = {\n      method: 'sql',\n      targets: this.entities,\n      key: 'ID',\n      values: [compound],\n      operator: 'eq'\n    };\n    return this.getRecords(query);\n  }\n\n  getMapping(ids, column) {\n    const query = {\n      method: 'sql',\n      targets: [column.entity],\n      key: 'ID',\n      values: ids,\n      operator: 'fm'\n    };\n    return this.serializedRequest('sql', query)\n      .then(res => res.json())\n      .then(json => {\n        const mapping = {};\n        json.records.filter(row => row.hasOwnProperty(column.dataColumn))\n          .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n        return {\n          key: query.key,\n          column: column,\n          mapping: mapping,\n          lastUpdated: this.now(),\n        };\n      });\n  }\n\n  status() {\n    return this.request('server').then(res => res.json());\n  }\n\n  templates() {\n    return this.request('templates').then(res => res.json());\n  }\n\n  strprev(query) {\n    return this.serializedRequest('strprev', query).then(res => res.text());\n  }\n\n  exportExcel(query) {\n    return this.request('xlsx', query).then(res => res.blob());\n  }\n\n  exportSDFile(query) {\n    return this.request('exportsdf', query).then(res => res.text());\n  }\n\n  reportPreview(query) {\n    return this.request('reportprev', query).then(res => res.json());\n  }\n\n  report(query) {\n    return this.request('report', query).then(res => res.blob());\n  }\n}\n\n\nexport class LocalServerChemical extends LocalServerActivity {\n  constructor() {\n    super();\n    this.domain = 'chemical';\n    this.hiddenColumns = [\"_mw\", \"_mw_wo_sw\", \"_formula\", \"_logp\", \"_nonH\"];\n  }\n\n  formatResult(cols, data) {\n    if (cols.length === 0) {  // sdf\n      data.columns.forEach(col => {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      return data;\n    }\n    Array.prototype.push.apply(data.columns, cols);\n    if (data.hasOwnProperty('extraColumns')) {\n      Array.prototype.push.apply(data.columns, data.extraColumns);\n      delete data.extraColumns;\n    }\n    data.columns.forEach(col => {\n      if (!col.hasOwnProperty('name')) col.name = col.key;\n      if (col.key === data.query.key) {\n        col.visible = true;  // Search key\n      } else {\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      }\n    });\n    data.lastUpdated = this.now();\n    return data;\n  }\n\n  getResources() {\n    return this.request('schema', {domain: this.domain})\n      .then(res => res.json())\n      .then(json => {\n        json.resources.forEach(rsrc => {\n          rsrc.domain = this.domain;\n          rsrc.columns.forEach(col =>{\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            if (!col.hasOwnProperty('method')) col.method = 'chemsql';\n            col.visible = true;\n          });\n        });\n        this.available = true;\n        return json.resources;\n      });\n  }\n\n  getRecords(query) {\n    let url;\n    if (query.hasOwnProperty('command')) {\n      url = 'rows';\n    } else if (query.hasOwnProperty('nodeTableId')) {\n      url = 'graph';\n    } else if (['chemsql', 'sql'].includes(query.method)) {\n      url = 'sql';\n    } else {\n      url = 'compute';\n    }\n    return this.serializedRequest(url, query)\n      .then(res => res.json())\n      .then(json => {\n        json.domain = this.domain;\n        return json;\n      });\n  }\n\n  importSDF(query) {\n    return this.request('sdf', query)\n    .then(res => res.json())\n    .then(json => {\n      json.domain = this.domain;\n      json.columns.forEach(col =>{\n        col.visible = this.hiddenColumns.includes(col.key) ? false : true;\n      });\n      const now = new Date();\n      json.lastUpdated = now.toString();\n      return json;\n    });\n  }\n}\n","\nimport {default as Fetcher} from './Fetcher.js';\n\n\nexport class ScreenerFitting extends Fetcher {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting.yaml';\n    this.domain = null;\n    this.baseURL = null;\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n    });\n  }\n\n  request(queryString) {\n    return fetch(`${this.baseURL}${queryString}`, {\n      method: 'GET',\n      credentials : 'include'\n    }).then(res => res.json());\n  }\n\n  requestRecords(queryString) {\n    return this.request(queryString)\n      .then(json => {\n        const rcds = json.compounds.map(c => {\n          return {\n            ID: c.compoundId,\n            qcsRefId: c.qcsRefId,\n            layerIndex: c.layerIndex,\n            drcPlot: c.fitting.drcPlot,\n            AC50: c.fitting.linearAC50,\n            hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n          };\n        });\n        return { records: rcds };\n      });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/compounds?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/compounds?q=compoundId%3A${compound}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n    return this.requestRecords(queryString);\n  }\n\n  getMapping(ids, column) {\n    const refid_layer = column.entity.split(':');\n    const query = {\n      qcsRefId: refid_layer[0],\n      layerIndex: parseInt(refid_layer[1])\n    };\n    return this.getRecords(query).then(res => {\n      const mapping = {};\n      res.records.filter(row => ids.includes(row.ID))\n        .forEach(row => { mapping[row.ID] = row[column.dataColumn]; });\n      return {\n        key: 'ID',\n        column: column,\n        mapping: mapping,\n        lastUpdated: this.now()\n      };\n    });\n  }\n\n  getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n    // compoundResult.fitting.drcPlot -> drcPlots/idstring\n    // returns image/png\n    const queryString = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n    return this.request(queryString);\n  }\n\n  getQcsInfo(qcsRefIds) {\n    const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n    const queryString = `/qcSessions?q=${ids}`;\n    return this.request(queryString).then(res => res.qcSessions);\n  }\n}\n\n\nexport class ScreenerRawValue extends ScreenerFitting{\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue.yaml';\n  }\n\n  getResources() {\n    const formData = new FormData();\n    formData.set('filename', this.resourceFile);\n    return fetch('source', {method: 'post', body: formData, credentials: 'include'})\n      .then(res => res.json())\n      .then(json => {\n        if (json.hasOwnProperty('enabled') && json.enabled === false) return;\n        this.available = true;\n        this.domain = json.domain;\n        this.baseURL = json.url;\n        return json.resources.map(rsrc => {\n          rsrc.domain = json.domain;\n          rsrc.entity = `${rsrc.qcsRefId}:${rsrc.layerIndex}`;\n          delete rsrc.qcsRefId;\n          delete rsrc.layerIndex;\n          rsrc.columns.forEach(col => {\n            col.key = 'rawValue';\n            if (!col.hasOwnProperty('name')) col.name = col.key;\n            if (!col.hasOwnProperty('dataColumn')) col.dataColumn = col.key;\n            col.visible = true;\n          });\n          return rsrc;\n        });\n      });\n  }\n\n  requestRecords(queryString, pred) {\n    return this.request(queryString).then(res => {\n      const rcds = res.plates.filter(plt => plt.wells.hasOwnProperty('compoundIds'))\n        .map(plt => {\n          return plt.wells.compoundIds.map((c, i) => {\n            return {\n              ID: c,\n              qcsRefId: plt.qcsRefId,\n              layerIndex: plt.layerIndex,\n              rawValue: plt.wells.rawValues[i]\n            };\n          }).filter(pred);\n        }).extend();\n      return { records: rcds };\n    });\n  }\n\n  getRecords(q) {\n    const joinedIds = q.qcsRefIds.join('%2C');\n    const queryString = `/plates?qcsRefIds=${joinedIds}\\\n&layerIndices=${q.layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID !== null);\n  }\n\n  getRecordsByCompound(compound) {\n    const queryString = `/plates?q=wells.compoundIds%3A${compound}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n    return this.requestRecords(queryString, e => e.ID === compound);\n  }\n}\n\n\n/*\nfunction request(query) {\n  return store.getDBResources('activity')\n    .then(rsrc => {\n      const url = `${rsrc.find(e => e.id === 'screenerapi').url}${query}`;\n      return server.request(url, null, {\n        method: 'GET',\n        responseType: 'json',\n        withCredentials : true\n      });\n    });\n}\n\n\nfunction getRawValuesByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const values = plt.wells.compoundIds.map((c, i) => {\n        if (c !== null) return { ID: c, rawValue: plt.wells.rawValues[i]};\n      }).filter(e => e !== undefined);\n      Array.prototype.push.apply(rcds, values);\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByQcs = getRawValuesByQcs;\n\n\nfunction getRawValuesMappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/plates?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&limit=200\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      plt.wells.compoundIds.forEach((c, i) => {\n        if (compoundIds.includes(c)) {\n          mapping[c] = plt.wells.rawValues[i];\n        }\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getRawValuesMappingColumn = getRawValuesMappingColumn;\n\n\nfunction getRawValuesByCompound(compoundId) {\n  const query = `/plates?q=wells.compoundIds%3A${compoundId}\\\n&fields=wells.rawValues%2Cwells.compoundIds`;\n  return request(query).then(res => {\n    const rcds = [];\n    res.plates.forEach(plt => {\n      if (!plt.wells.hasOwnProperty('compoundIds')) return;  // unmapped\n      const i = plt.wells.compoundIds.findIndex(c => c === compoundId);\n      rcds.push({\n        qcsRefId: plt.qcsRefId,\n        layerIndex: plt.layerIndex,\n        rawValue: plt.wells.rawValues[i]\n      });\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getRawValuesByCompound = getRawValuesByCompound;\n\n\nfunction getFittingByQcs(qcsRefIds, layerIndex) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByQcs = getFittingByQcs;\n\n\nfunction getAC50MappingColumn(qcsRefIds, layerIndex, compoundIds) {\n  const joined = qcsRefIds.join('%2C');\n  const query = `/compounds?qcsRefIds=${joined}\\\n&layerIndices=${layerIndex - 1}\\\n&fields=compoundId%2Cfitting.linearAC50`;\n  return request(query).then(res => {\n    const mapping = {};\n    res.compounds.forEach(c => {\n      if (compoundIds.includes(c.compoundId)) {\n        mapping[c] = c.fitting.linearAC50;\n      }\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      mapping: mapping\n    };\n  });\n}\nexports.getAC50MappingColumn = getAC50MappingColumn;\n\n\nfunction getFittingByCompound(compoundId) {\n  const query = `/compounds?q=compoundId%3A${compoundId}\\\n&fields=compoundId%2CqcsRefId%2ClayerIndex\\\n%2Cfitting.drcPlot%2Cfitting.linearAC50%2Cfitting.hillCoefficient`;\n  return request(query).then(res => {\n    const rcds = res.compounds.map(c => {\n      return {\n        ID: c.compoundId,\n        drcPlot: c.fitting.drcPlot,\n        AC50: c.fitting.linearAC50,\n        hill: Math.round(c.fitting.hillCoefficient * 100) / 100,\n        qcsRefId: c.qcsRefId,\n        layerIndex: c.layerIndex\n      };\n    });\n    const now = new Date();\n    return {\n      created: now.toString(),\n      records: rcds\n    };\n  });\n}\nexports.getFittingByCompound = getFittingByCompound;\n\n\nfunction getDrcPlot(compoundId, plotId, min = -20, max = 120) {\n  const query = `/${plotId}?width=180&height=180&title=compoundId\\\n&activityRangeMin=${min}&activityRangeMax=${max}`;\n  return request(query);\n}\nexports.getDrcPlot = getDrcPlot;\n\n\nfunction getQcsInfo(qcsRefIds) {\n  const ids = qcsRefIds.map(e => `qcsRefId:${e}`).join(' OR ');\n  const query = `/qcSessions?q=${ids}`;\n  return request(query).then(res => res.qcSessions);\n}\nexports.getQcsInfo = getQcsInfo;\n\nfunction getAllResults(qcsRefId, layerIdx) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdx}\\\n&limit=200\\\n&fields=barcode%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => res);\n}\nexports.getAllResults = getAllResults;\n\n\nfunction getPlateStats(allResults) {\n  const plates = allResults.plates;\n  const parsed = plates.map(p => {\n    const lowMean = p.wellTypes.NEUTRAL_CONTROL.mean;\n    const lowStdDev = p.wellTypes.NEUTRAL_CONTROL.sd;\n    const highMean = p.wellTypes.INHIBITOR_CONTROL.mean;\n    const highStdDev = p.wellTypes.INHIBITOR_CONTROL.sd;\n    return {\n      barcode: p.barcode,\n      lowCtrlMean: lowMean,\n      lowCtrlStdDev: lowStdDev,\n      lowCtrlCV: lowStdDev / lowMean * 100,\n      highCtrlMean: highMean,\n      highCtrlStdDev: highStdDev,\n      highCtrlCV: highStdDev / highMean * 100,\n      SignalBackground: lowMean / highMean,\n      zPrime: p.zPrime\n    };\n  });\n  return parsed;\n}\nexports.getPlateStats = getPlateStats;\n\n\nfunction getWellValues(allResults) {\n  const plates = allResults.plates;\n  const results = {};\n  plates.forEach(p => {\n    p.wells.compoundIds.forEach((value, i) => {\n      if (value !== null) {\n        results[value] = p.wells.rawValues[i];\n      }\n    });\n  });\n  return results;\n}\nexports.getWellValues = getWellValues;\n\n\nfunction getFirstPlateValues(qcsRefId, layerIdxs) {\n  const query = `/plates?qcsRefIds=${qcsRefId}\\\n&layerIndices=${layerIdxs}\\\n&q=plateIndex%3A0\\\n&fields=layerIndex%2CzPrime%2CwellTypes%2Cwells.rawValues%2Cwells.compoundIds`;\n  return request(query, res => {\n    const results = {};\n    res.plates.forEach(p => {\n      const idx = p.layerIndex;\n      p.wells.compoundIds.forEach(value => {\n        if (value !== null) {\n          if (!results.hasOwnProperty(value)) {\n            results[value] = {};\n          }\n          results[value][idx] = p.wells.rawValues[idx];\n        }\n      });\n    });\n  });\n}\nexports.getFirstPlateValues = getFirstPlateValues;\n*/\n","\nimport {ScreenerFitting, ScreenerRawValue} from './Screener.js';\n\n\nexport class ScreenerFittingStub extends ScreenerFitting {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_fitting_stub.yaml';\n  }\n\n  fittingStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n      {ID: 'DB00189', drcPlot: 'dummy1', AC50: 2.1e-6, hill: 1.1, source: 'target1_validation'},\n      {ID: 'DB00193', drcPlot: 'dummy2', AC50: 4.2e-6, hill: null, source: 'target1_validation'},\n      {ID: 'DB00203', drcPlot: 'dummy3', AC50: 1.0e-5, hill: 0.9, source: 'target1_validation'},\n      {ID: 'DB00865', drcPlot: 'dummy4', AC50: 8.8e-8, hill: 2.1, source: 'target1_validation'},\n      {ID: 'DB01143', drcPlot: 'dummy5', AC50: 'n.d.', hill: null, source: 'target1_validation'},\n      {ID: 'DB01240', drcPlot: 'dummy6', AC50: null, hill: null, source: 'target1_validation'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.fittingStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.fittingStub({qcsRefId: 'QCS-YYYY', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n\n  qcsInfoStub(ids) {\n    if (!Array.isArray(ids)) throw `${ids} is not a string`;\n    const layers = [\n      {layerIndex: 0, name: 'Activity%'},\n      {layerIndex: 1, name: 'Background%'},\n      {layerIndex: 2, name: 'Correction'}\n    ];\n    return [\n      {qcsRefId: 'QCS-XXX0', name: 'hoge', layers: layers},\n      {qcsRefId: 'QCS-XXX1', name: 'fuga', layers: layers},\n      {qcsRefId: 'QCS-XXX2', name: 'piyo', layers: layers}\n    ];\n  }\n\n  getQcsInfo(qcsRefIds) {\n    return Promise.resolve(this.qcsInfoStub(qcsRefIds));\n  }\n}\n\n\nexport class ScreenerRawValueStub extends ScreenerRawValue {\n  constructor() {\n    super();\n    this.resourceFile = 'screener_rawvalue_stub.yaml';\n  }\n\n  rawValueStub(q) {\n    if (typeof q.qcsRefId !== 'string') throw `${q.qcsRefId} is not a string`;\n    if (typeof q.layerIndex !== 'number') throw `${q.layerIndex} is not a number`;\n    return [\n        {ID: 'DB00189', rawValue: 12.7, source: 'target1_screen'},\n        {ID: 'DB00193', rawValue: 43.6, source: 'target1_screen'},\n        {ID: 'DB00203', rawValue: 102.6, source: 'target1_screen'},\n        {ID: 'DB00865', rawValue: -0.6, source: 'target1_screen'},\n        {ID: 'DB01143', rawValue: 50, source: 'target1_screen'},\n        {ID: 'DB01240', rawValue: null, source: 'target1_screen'}\n    ];\n  }\n\n  getRecords(q) {\n    return Promise.resolve({ records: this.rawValueStub(q) });\n  }\n\n  getRecordsByCompound(compound) {\n    const rcds = this.rawValueStub({qcsRefId: 'QCS-XXXX', layerIndex: 1})\n      .filter(e => e.ID === compound);\n    return Promise.resolve({ records: rcds });\n  }\n}\n"],"names":["formValue","selector","d3","select","node","value","formInt","parseInt","formFloat","parseFloat","formChecked","checked","firstFile","files","checkboxValues","selectAll","nodes","map","e","selectedOptionValues","textareaLines","split","filter","length","selectedOptionData","si","property","data","find","d","i","selectedCheckboxesData","fetchable","tbl","includes","status","abortRequestable","dataSourceId","domain","resource","column","capitalize","join","readFile","file","sizeLimit","blob","Promise","resolve","reject","reader","FileReader","truncated","slice","onload","event","target","result","onerror","error","readAsArrayBuffer","readAsText","parseJSON","compressed","text","pako","inflate","to","JSON","parse","loadJSON","name","endsWith","then","fetchJSON","url","decoded","decodeURIComponent","fetch","res","arrayBuffer","json","downloadDataFile","window","URL","createObjectURL","Blob","a","document","createElement","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","downloadJSON","compress","str","stringify","gzip","getGlobalConfig","key","globalConfig","setGlobalConfig","localChemInstance","API","get","getFetcher","fetcherInstances","Array","from","values","dataFetcherDomains","forEach","v","k","push","getResources","domains","store","rsrcs","setResources","putResources","getResourceColumns","rsrc","columns","col","id","entity","hasOwnProperty","tags","extend","getDataSourceColumns","ids","getCurrentTable","q","getItemById","getCurrentRecords","records","setColumnsToShow","updates","updateItem","item","visible","visibles","sort","sorts","digit","digits","joinColumn","mapping","tableId","urlQuery","cols","rcd","concat","unique","lastUpdated","updateTableAttribute","tblID","insertTable","putItem","updateTable","undefined","update","responseDate","recordCount","searchDoneCount","execTime","progress","Object","assign","initialize","navigator","debug","serviceWorker","register","registration","console","info","scope","catch","err","serverTmpl","localServer","templates","serverConfig","rsrcFetched","api","extendAsync","idx","all","loader","location","protocol","onLine","baseURL","columnMappingToTable","keyCol","entries","entry","colKeys","val","csvToMapping","csvString","lines","header","shift","created","Date","toString","headerIdx","h","line","singleToMultiMapping","newMapping","m","formatNum","type","conv","scientific","rounded","Number","isNaN","format","partialMatch","query","toUpperCase","indexOf","numericAsc","b","fa","fb","String","localeCompare","numericDesc","textAsc","textDesc","getSDFPropList","re","uniqCols","Set","arr","exec","add","showPlot","vegaSpec","vega","View","run","plotThumbnail","toImageURL","selectOptions","selection","options","exit","remove","enter","append","merge","attr","checkboxList","items","entered","updated","createTable","size","updateTableRecords","rcds","keyFunc","rowSelection","rowEntered","classed","html","valueType","mergeDataSourceColumns","dataSource","formatResult","pickDialog","callback","call","on","rsrctbl","this","placeholders","ID","style","method","targets","operator","getRecords","propDialog","selectedColumn","structDialog","op","selectedOptions","fmt","querySource","strprev","mthdop","thresholdType","threshold","ignoreHs","diameter","maxTreeSize","molSizeCutoff","timeout","sdfDialog","getElementById","contents","implh","recalc","importSDF","columnDialog","coltbl","each","row","cell","joinDialog","addEventListener","keyCode","preventDefault","shownCols","ex","match","selectedCols","mpgs","getMapping","importColDialog","isCsv","pop","datum","plotCols","ps","p","img","graphDialog","measure","indices","molecules","nodeTableId","_mol","_index","renderStatus","refresh_callback","abort_callback","dtx","datatable","connection","initializeWithData","createDataGrid","width","defaultColumnWidth","height","defaultColumnHeight","rowSize","reduce","updateRows","position","visibleRows","rSize","cData","topPos","Math","min","max","bottomPos","rcdSlice","order","ri","rowPos","_","dataGridRecords","bodyHeight","scrollTop","newPos","floor","viewport","viewportTop","getBoundingClientRect","top","viewportHeight","innerHeight","newVis","ceil","dispatch","addSort","isAsc","isNum","cmp","sorted","idLink","idKey","renderTableContents","copied","networkThreshold","open","mappings","render","colMaps","joined","mp","refresh","abort","t","exportExcel","xhr","exportSDFile","loadNewTable","fetch_","command","queries","isUpdated","schema","app","resources","idb","Dexie","version","stores","getAppSetting","where","equals","first","putAppSetting","put","orderBy","toArray","bulkPut","getAllItems","reverse","getItemsByFormat","sortBy","modify","deleteItem","delete","Fetcher","[object Object]","available","formData","XMLHttpRequest","responseType","withCredentials","response","send","now","LocalServerActivity","super","entities","FormData","set","body","credentials","Map","isArray","request","dataColumn","serializedRequest","compound","LocalServerChemical","hiddenColumns","prototype","apply","extraColumns","ScreenerFitting","resourceFile","enabled","qcsRefId","layerIndex","queryString","compounds","c","compoundId","drcPlot","fitting","AC50","linearAC50","hill","round","hillCoefficient","qcsRefIds","requestRecords","refid_layer","plotId","qcSessions","ScreenerRawValue","pred","plates","plt","wells","compoundIds","rawValue","rawValues","ScreenerFittingStub","source","fittingStub","layers","qcsInfoStub","ScreenerRawValueStub","rawValueStub","server","search","substring","chemical","activity","screenerrawvalue","screenerfitting","screenerrawvaluestub","screenerfittingstub","numeric","none","click","stopPropagation"],"mappings":"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"}