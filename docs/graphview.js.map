{"version":3,"file":"graphview.js","sources":["../src/helper/file.js","../src/store/StoreConnection.js","../src/graph/GraphForce.js","../src/helper/d3Scale.js","../src/helper/formatValue.js","../src/graph/GraphControlBox.js","../src/graph/GraphComponent.js","../src/graph/GraphInteraction.js","../src/graphview.js","../src/store/IDBStore.js"],"sourcesContent":["\nimport pako from 'pako';\n\n\nexport function readFile(file, sizeLimit, blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    const truncated = sizeLimit ? file.slice(0, sizeLimit) : file;\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    if (blob) {\n      reader.readAsArrayBuffer(truncated);\n    } else {\n      reader.readAsText(truncated);\n    }\n  });\n}\n\n\nexport function parseJSON(data, compressed) {\n  const text = compressed ? pako.inflate(data, {to: 'string'}) : data;\n  return JSON.parse(text);\n}\n\n\nexport function loadJSON(file) {\n  const compressed = file.name.endsWith('.gz');\n  return readFile(file, false, compressed)\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function fetchJSON(url) {\n  const compressed = url.endsWith('.gz');\n  return fetch(url)\n    .then(res => compressed ? res.arrayBuffer() : res.json())\n    .then(data => parseJSON(data, compressed));\n}\n\n\nexport function downloadDataFile(data, name) {\n  try {\n    // cannot hundle large file with dataURI scheme\n    // url = \"data:application/json,\" + encodeURIComponent(JSON.stringify(json))\n    const url = window.URL.createObjectURL(new Blob([data]));\n    const a = document.createElement('a');\n    a.download = name;\n    a.href = url;\n    // a.click() does not work on firefox\n    a.dispatchEvent(new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    }));\n    // window.URL.revokeObjectURL(url) does not work on firefox\n  } catch (e) {\n    // no DOM (unit testing)\n  }\n}\n\n\nexport function downloadJSON(json, name, compress=true) {\n  const str = JSON.stringify(json);\n  const data = compress ? pako.gzip(str) : str;\n  const ext = compress ? '.gz' : '';\n  downloadDataFile(data, `${name}.json${ext}`);\n}\n","\nimport {dataSourceId} from '../helper/definition.js';\nimport {default as store} from './IDBStore.js';\nimport {LocalServerActivity, LocalServerChemical} from '../fetcher/LocalServer.js';\nimport {ScreenerFitting, ScreenerRawValue} from '../fetcher/Screener.js';\nimport {ScreenerFittingStub, ScreenerRawValueStub} from '../fetcher/ScreenerTestStub.js';\n\n\n// Global config\n\nconst globalConfig = {\n  \"onLine\": true,\n  \"server\": {},\n  \"templates\": {},\n  \"urlQuery\": {}\n};\n\nwindow.location.search.substring(1).split(\"&\")\n  .map(e => e.split('=')).forEach(e => {\n    globalConfig.urlQuery[e[0]] = e[1];\n  });\n\n\nexport function getGlobalConfig(key) {\n  return globalConfig[key];\n}\n\n\nexport function setGlobalConfig(key, value) {\n  globalConfig[key] = value;\n}\n\n\n// API instances\n\nconst API = new Map(Object.entries({\n  chemical: new LocalServerChemical(),\n  activity: new LocalServerActivity(),\n  screenerrawvalue: new ScreenerRawValue(),\n  screenerfitting: new ScreenerFitting(),\n  screenerrawvaluestub: new ScreenerRawValueStub(),\n  screenerfittingstub: new ScreenerFittingStub()\n}));\n\n\nexport function localChemInstance() {\n  return API.get('chemical');\n}\n\n\nexport function getFetcher(domain) {\n  return API.get(domain);\n}\n\n\nexport function fetcherInstances() {\n  return Array.from(API.values());\n}\n\n\nexport function dataFetcherInstances() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(v);\n  });\n  return res;\n}\n\n\nexport function dataFetcherDomains() {\n  const res = [];\n  API.forEach((v, k) => {\n    if (k !== 'chemical') res.push(k);\n  });\n  return res;\n}\n\n\n// API data resource on local IndexedDB\n\nexport function getResources(domains) {\n  return store.getResources().then(rsrcs => {\n    return rsrcs.filter(e => domains.includes(e.domain));\n  });\n}\n\n\nexport function setResources(rsrcs) {\n  return store.putResources(rsrcs);\n}\n\n\nexport function getResourceColumns(domains) {\n  return getResources(domains).then(rsrcs => {\n    return rsrcs.map(rsrc => {\n      return rsrc.columns.map(col => {\n        col.domain = rsrc.domain;\n        col.key = dataSourceId(rsrc.domain, rsrc.id, col.key);\n        col.entity = rsrc.entity;\n        if (!col.hasOwnProperty('tags')) col.tags = rsrc.tags;\n        return col;\n      });\n    }).extend();\n  });\n}\n\n\nexport function getDataSourceColumns(domain, ids) {\n  return store.getResources([domain]).then(rsrcs => {\n    return ids.map(d => rsrcs.find(e => e.id === d).columns)\n      .extend();\n  });\n}\n\n\n// Datatable on local IndexedDB\n\nexport function getAllTables() {\n  return store.getAllItems();\n}\n\n\nexport function getTablesByFormat(format) {\n  return store.getItemsByFormat(format);\n}\n\n\nexport function getTable(tableId) {\n  return store.getItemById(tableId);\n}\n\n\nexport function getRecords(tableId) {\n  return store.getItemById(tableId)\n    .then(tbl => tbl.records);\n}\n\n\nexport function getCurrentTable() {\n  const q = getGlobalConfig('urlQuery');\n  if (!q.hasOwnProperty('id')) return Promise.resolve();\n  return store.getItemById(q.id);\n}\n\n\nexport function getCurrentRecords() {\n  return getCurrentTable().then(tbl => tbl.records);\n}\n\n\nexport function setColumnsToShow(updates) {\n  return store.updateItem(getGlobalConfig('urlQuery').id, item => {\n    item.columns.forEach((col, i) => {\n      col.visible = updates.visibles.includes(col.key);\n      col.sort = updates.sorts[i];\n      col.digit = updates.digits[i];\n    });\n  });\n}\n\n\nexport function joinColumn(mapping, tableId=globalConfig.urlQuery.id) {\n  const cols = mapping.hasOwnProperty('column') ? mapping.column : mapping.columns;\n  return store.updateItem(tableId, item => {\n    item.records\n      .filter(rcd => mapping.mapping.hasOwnProperty(rcd[mapping.key]))\n      .forEach(rcd => {\n        if (mapping.hasOwnProperty('column')) {\n          rcd[mapping.column.key] = mapping.mapping[rcd[mapping.key]];\n        } else {\n          mapping.columns.forEach((col, i) => {\n            rcd[col.key] = mapping.mapping[rcd[mapping.key]][i];\n          });\n        }\n      });\n    item.columns = item.columns.concat(cols).unique('key');\n    item.lastUpdated = mapping.lastUpdated;\n  });\n}\n\n\nexport function updateTableAttribute(tblID, key, value) {\n  return store.updateItem(tblID, item => {\n    item[key] = value;\n  });\n}\n\n\nexport function insertTable(data) {\n  return store.putItem(data);\n}\n\n\nexport function updateTable(data) {\n  if (data === undefined) return Promise.resolve();  // No update\n  if (data.status === 'Failure') {  // No data found on server\n    return updateTableAttribute(data.id, 'status', 'Failure');\n  }\n  // update\n  return store.updateItem(data.id, item => {\n    const update = {\n      responseDate: data.responseDate,\n      records: data.records,\n      columns: data.columns,\n      recordCount: data.recordCount,\n      searchDoneCount: data.searchDoneCount,\n      execTime: data.execTime,\n      progress: data.progress,\n      status: data.status,\n    };\n    if (data.hasOwnProperty('lastUpdated')) {\n      update.lastUpdated = data.lastUpdated;\n    }\n    Object.assign(item, update);\n  });\n}\n\n\nexport function deleteTable(id) {\n  return store.deleteItem(id);\n}\n\n\nexport function reset() {\n  return store.reset();\n}\n","\nimport d3 from 'd3';\n\nexport const fieldWidth = 1200;\nexport const fieldHeight = 1200;\n\nexport const simulation = d3.forceSimulation()\n  .force('link',\n    d3.forceLink().id(d => d._index)\n      .distance(60)\n      .strength(1))\n  .force('charge',\n    d3.forceManyBody()\n      .strength(-600)\n      .distanceMin(15)\n      .distanceMax(720))\n  .force('collide',\n    d3.forceCollide()\n      .radius(90))\n  .force('center',\n    d3.forceCenter(fieldWidth / 2, fieldHeight / 2))\n  .force('x',\n    d3.forceX()\n      .strength(0.002))\n  .force('y',\n    d3.forceY()\n      .strength(0.002))\n  .stop();\n\n\nexport function setForce(nodes, edges, tick, end) {\n  simulation.nodes(nodes)\n    .force('link').links(edges);\n  simulation.on('tick', tick)\n    .on('end', end);\n}\n\n\nexport function tick() {\n  d3.select('#graph-contents').selectAll('.node')\n    .attr('transform', d => `translate(${d.x}, ${d.y})`);\n  const alpha = simulation.alpha();\n  const isStopped = alpha <= simulation.alphaMin();\n  d3.select('#temperature')\n    .classed('progress-success', isStopped)\n    .classed('progress-warning', !isStopped)\n    .attr('value', isStopped ? 1 : 1 - alpha)\n    .text(isStopped ? 1 : 1 - alpha);\n}\n\n\nexport function end() {\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.edge-line')\n    .attr('x1', 0)\n    .attr('y1', 0)\n    .attr('x2', d => d.target.x - d.source.x)\n    .attr('y2', d => d.target.y - d.source.y);\n  d3.select('#graph-contents').selectAll('.edge-label')\n    .attr('x', d => (d.target.x - d.source.x) / 2)\n    .attr('y', d => (d.target.y - d.source.y) / 2);\n}\n","\nimport d3 from 'd3';\n\nconst categoryMany = d3.schemeSet1\n  .concat(d3.schemeSet3, d3.schemePastel2, d3.schemeSet2);\nconst defaultSizeRange = [20, 80];\n\nexport const colorPresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: ['#708090', '#7fffd4'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 8],\n      range: ['#6495ed', '#ccff66', '#ffa500'],\n      unknown: '#696969'\n    }\n  },\n  {\n    name: 'Categories',\n    scale: {\n      scale: 'ordinal',\n      range: d3.schemeCategory20,\n      unknown: '#dedede'\n    }\n  },\n  {\n    name: 'ManyCategories',\n    scale: {\n      scale: 'ordinal',\n      range: categoryMany,\n      unknown: '#dedede'\n    }\n  }\n];\n\nexport const sizePresets = [\n  {\n    name: 'Activity',\n    scale: {\n      scale: 'log',\n      domain: [1e-4, 1e-6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'Percent',\n    scale: {\n      scale: 'linear',\n      domain: [0, 100],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'True or False',\n    scale: {\n      scale: 'quantize',\n      domain: [1, 0],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  },\n  {\n    name: 'LogP',\n    scale: {\n      scale: 'linear',\n      domain: [-2, 6],\n      range: defaultSizeRange,\n      unknown: defaultSizeRange[0]\n    }\n  }\n];\n\nexport const edgeWidthPresets = [\n  {\n    name: 'Universal',\n    scale: {\n      scale: 'linear',\n      domain: [0.3, 1],\n      range: [0.5, 5],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Thin',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [0.5, 3],\n      unknown: 1\n    }\n  },\n  {\n    name: 'Amplified',\n    scale: {\n      scale: 'linear',\n      domain: [0.5, 1],\n      range: [1, 10],\n      unknown: 1\n    }\n  }\n];\n\nexport const colorPalette = [\n  {name: 'Aquamarine', range: ['#778899', '#7fffd4'], unknown: '#696969'},\n  {name: 'Chartreuse', range: ['#778899', '#7fff00'], unknown: '#696969'},\n  {name: 'Salmon', range: ['#778899', '#fa8072'], unknown: '#696969'},\n  {name: 'Violet', range: ['#778899', '#ee82ee'], unknown: '#696969'},\n  {name: 'blue-red', range: ['#87ceeb', '#fff5ee', '#fa8072'], unknown: '#696969'},\n  {name: 'Spectrum', range: ['#6495ed', '#ccff66', '#ffa500'], unknown: '#696969'}\n];\n\nexport const scaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()},\n  {name: 'ordinal', func: d3.scaleOrdinal()}\n];\n\nexport const sizeScaleTypes = [\n  {name: 'linear', func: d3.scaleLinear()},\n  {name: 'log', func: d3.scaleLog()},\n  {name: 'quantize', func: d3.scaleQuantize()}\n];\n\nexport function scaleFunction(scale) {\n  let sf = scaleTypes.find(e => e.name === scale.scale).func;\n  let domain = scale.domain;\n  if (scale.range.length === 3) {\n    const mid = (parseFloat(scale.domain[0]) + parseFloat(scale.domain[1])) / 2;\n    domain = [scale.domain[0], mid, scale.domain[1]];\n  }\n  if (scale.scale !== 'ordinal') {\n    sf = sf.domain(domain);\n  }\n  sf = sf.range(scale.range);\n  if (['linear', 'log'].includes(scale.scale)) {\n    sf = sf.clamp(true);\n  }\n  return d => {\n    if (d === '' || typeof d === 'undefined' || d === null) {\n      return scale.unknown;\n    }\n    if (scale.scale !== 'ordinal' && parseFloat(d) != d) {\n      return scale.unknown;\n    }\n    if (scale.scale === 'log' && d <= 0) {\n      return scale.unknown;\n    }\n    const result = sf(d);\n    if (result === undefined) {\n      return scale.unknown;\n    }\n    return result;\n  };\n}\n","\nimport d3 from 'd3';\n\n\n/**\n * Format number\n * @param {object} value - value\n * @param {string} type - si | scientific | rounded | raw\n */\nexport function formatNum(value, type) {\n  const conv = {\n    scientific: \".3e\",\n    si: \".3s\",\n    rounded: \".3r\"\n  };\n  if (type === 'raw') return value;\n  if (value === undefined || value === null || Number.isNaN(value)) return '';\n  return value == parseFloat(value) ? d3.format(conv[type])(value) : value;\n}\n\nexport function partialMatch(query, target) {\n  if (target === undefined || target === null || target === '') return false;\n  return target.toString().toUpperCase()\n    .indexOf(query.toString().toUpperCase()) !== -1;\n}\n\nexport function numericAsc(a, b) {\n  const fa = parseFloat(a);\n  const fb = parseFloat(b);\n  if (isNaN(fa) || isNaN(fb)) {\n    return String(b).localeCompare(String(a));\n  }\n  return fb - fa;\n}\n\n\nexport function numericDesc(a, b) {\n  return numericAsc(b, a);\n}\n\n\nexport function textAsc(a, b) {\n  return String(b).localeCompare(String(a));\n}\n\n\nexport function textDesc(a, b) {\n  return textAsc(b, a);\n}\n","\nimport d3 from 'd3';\nimport {\n  colorPresets, sizePresets, edgeWidthPresets,\n  colorPalette, scaleTypes, sizeScaleTypes, scaleFunction\n} from '../helper/d3Scale.js';\nimport {formValue, formChecked, selectedOptionData} from '../helper/d3Selection.js';\nimport {formatNum} from '../helper/formatValue.js';\nimport {selectOptions} from '../component/Component.js';\n\n\n\n// Get data\n\nfunction colorControlInput(id) {\n  const data = {\n    id: id,\n    column: selectedOptionData(`#${id}-col`)\n  };\n  const preset = selectedOptionData(`#${id}-preset`);\n  if (preset.scale.scale === 'ordinal') {\n    data.scale = preset.scale;\n    return data;\n  }\n  data.scale = {\n    scale: formValue(`#${id}-scaletype`),\n    domain: [\n      formValue(`#${id}-domain-from`),\n      formValue(`#${id}-domain-to`)\n    ],\n    unknown: '#696969'\n  };\n  const range = [formValue(`#${id}-range-from`)];\n  if (formChecked(`#${id}-range-enable-mid`)) {\n    range.push(formValue(`#${id}-range-mid`));\n  }\n  range.push(formValue(`#${id}-range-to`));\n  data.scale.range = range;\n  return data;\n}\n\n\nfunction labelControlInput() {\n  const data = colorControlInput('label');\n  data.text = formValue('#label-text');\n  data.size = formValue('#label-size');\n  data.visible = formChecked('#label-visible');\n  return data;\n}\n\n\nfunction sizeControlInput(id) {\n  return {\n    id: id,\n    scale: {\n      scale: formValue(`#${id}-scaletype`),\n      domain: [\n        formValue(`#${id}-domain-from`),\n        formValue(`#${id}-domain-to`)\n      ],\n      range: [\n        formValue(`#${id}-range-from`),\n        formValue(`#${id}-range-to`)\n      ],\n      unknown: 10\n    }\n  };\n}\n\n\nfunction nodeSizeControlInput() {\n  const data = sizeControlInput('size');\n  data.column = selectedOptionData('#size-col');\n  return data;\n}\n\n\nfunction nodeContentInput() {\n  return {\n    structure: {\n      visible: formChecked('#show-struct')\n    }\n  };\n}\n\n\nfunction edgeControlInput() {\n  const data = sizeControlInput('edge');\n  data.visible = formChecked('#edge-visible');\n  data.label = {\n    size: formValue('#edge-label-size'),\n    visible: formChecked('#edge-label-visible')\n  };\n  return data;\n}\n\n\n// Update DOM attributes\n\nfunction updateNodeColor(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .style('fill', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeSize(data) {\n  d3.selectAll('.node').select('.node-symbol')\n    .attr('r', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nfunction updateNodeLabelVisibility(visible) {\n  d3.selectAll('.node').select('.node-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateNodeLabel(data) {\n  d3.selectAll('.node').select('.node-label')\n    .text(d => {\n      if (!d.hasOwnProperty(data.text)) return '';\n      if (!data.column.hasOwnProperty('digit') || data.column.digit === 'raw') return d[data.text];\n      return formatNum(d[data.text], data.column.digit);\n    })\n    .attr('font-size', data.size)\n    .attr('visibility', data.visible ? 'inherit' : 'hidden')\n    .style('fill', d => scaleFunction(data.scale)(d[data.column.key]));\n}\n\n\nexport function updateNodeStructure(data) {\n  d3.selectAll('.node').select('.node-struct')\n    .attr('visibility', data.structure.visible ? 'inherit' : 'hidden')\n    .each((d, i, nds) => {\n      const w = d3.select(nds[i]).select('svg').attr('width');\n      const h = d3.select(nds[i]).select('svg').attr('height');\n      d3.select(nds[i]).attr('transform', `translate(${-w / 2},${-h / 2})`);\n    });\n}\n\n\nexport function updateNodeImage(data) {\n  updateNodeSize(data.nodeSize);\n  updateNodeColor(data.nodeColor);\n  updateNodeLabel(data.nodeLabel);\n  updateNodeStructure(data.nodeContent);\n}\n\n\nfunction updateEdgeVisibility(visible) {\n  d3.selectAll('.link').select('.edge-line')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdgeLabelVisibility(visible) {\n  d3.selectAll('.link').select('.edge-label')\n    .attr('visibility', visible ? 'inherit' : 'hidden');\n}\n\n\nfunction updateEdge(data) {\n  d3.selectAll('.link').select('.edge-line')\n    .style('stroke-width', d => scaleFunction(data.scale)(d.weight));\n  d3.selectAll('.link').select('.edge-label')\n    .attr('font-size', data.label.size);\n  updateEdgeVisibility(data.visible);\n  updateEdgeLabelVisibility(data.label.visible);\n}\n\n\nfunction updateRange(range, id) {\n  if (range.length === 2) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', null);\n    d3.select(`#${id}-range-mid`).attr('disabled','disabled');\n    d3.select(`#${id}-range-to`).property('value', range[1]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else if (range.length === 3) {\n    d3.select(`#${id}-range-from`).property('value', range[0]);\n    d3.select(`#${id}-range-enable-mid`).attr('checked', 'checked');\n    d3.select(`#${id}-range-mid`).property('value', range[1]);\n    d3.select(`#${id}-range-to`).property('value', range[2]);\n    d3.selectAll(`#${id}-range input`).attr('disabled', null);\n  } else {\n    d3.selectAll(`#${id}-range input`).attr('disabled', 'disabled');\n  }\n}\n\n\nfunction updateScale(scale, id) {\n  d3.select(`#${id}-scaletype`).property('value', scale.scale);\n  const hasDomain = scale.hasOwnProperty('domain');\n  d3.selectAll(`#${id}-domain input`)\n    .attr('disabled', hasDomain ? null : 'disabled');\n  if (hasDomain) {\n    d3.select(`#${id}-domain-from`).property('value', scale.domain[0]);\n    d3.select(`#${id}-domain-to`).property('value', scale.domain[1]);\n  }\n  updateRange(scale.range, id);\n}\n\n\nexport function updateControl(data) {\n  const id = data.id;\n  d3.select(`#${id}-visible`).attr('checked', data.visible ? 'checked' : null);\n  d3.select(`#${id}-text`).property('value', data.text);\n  d3.select(`#${id}-size`).property('value', data.size);\n  if (data.hasOwnProperty('column')) {\n    d3.select(`#${id}-col`).property('value', data.column.key);\n  }\n  if (data.hasOwnProperty('label')) {\n    d3.select(`#${id}-label-visible`)\n      .attr('checked', data.label.visible ? 'checked' : null);\n    d3.select(`#${id}-label-size`).property('value', data.label.size);\n  }\n  updateScale(data.scale, data.id);\n}\n\n\n\n// Generate controlBox elements\n\nexport function mainControlBox() {\n  d3.select('#show-struct')\n    .on('change', function () {\n      const data = nodeContentInput();\n      d3.select('#main-control').datum(data);\n      updateNodeStructure(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction colorControlBox(columns, id) {\n  d3.select(`#${id}-col`)\n    .call(selectOptions, columns, d => d.key, d => d.name);\n  d3.select(`#${id}-preset`)\n    .call(selectOptions, colorPresets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(selectedOptionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-palette`)\n    .call(selectOptions, colorPalette, d => d.name, d => d.name)\n    .on('change', function() {\n      updateRange(selectedOptionData(this).range, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(selectOptions, scaleTypes, d => d.name, d => d.name);\n}\n\n\nexport function nodeColorControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  colorControlBox(textCols, 'color');\n  d3.selectAll('.color-update')\n    .on('change', () => {\n      const data = colorControlInput('color');\n      d3.select('#color-control').datum(data);\n      updateControl(data);\n      updateNodeColor(data);\n    })\n    .dispatch('change');\n}\n\n\nexport function nodeLabelControlBox(columns) {\n  const textCols = columns.filter(e => e.sort !== 'none');\n  d3.select('#label-text')\n    .call(selectOptions, textCols, d => d.key, d => d.name);\n  colorControlBox(textCols, 'label');\n  d3.select('#label-visible')\n    .on('change', function() {\n      updateNodeLabelVisibility(formChecked(this), 'label');\n      d3.select(`.label-update`).dispatch('change');\n    });\n  d3.selectAll('.label-update')\n    .on('change', () => {\n      const data = labelControlInput();\n      d3.select('#label-control').datum(data);\n      updateControl(data);\n      updateNodeLabel(data);\n    })\n    .dispatch('change');\n}\n\n\nfunction sizeControlBox(presets, id) {\n  d3.select(`#${id}-preset`)\n    .call(selectOptions, presets, d => d.name, d => d.name)\n    .on('change', function() {\n      updateScale(selectedOptionData(this).scale, id);\n      d3.select(`.${id}-update`).dispatch('change');\n    });\n  d3.select(`#${id}-scaletype`)\n    .call(selectOptions, sizeScaleTypes, d => d.name, d => d.name);\n}\n\n\nexport function nodeSizeControlBox(columns) {\n  const numCols = columns.filter(e => e.sort === 'numeric');\n  d3.select(`#size-col`)\n    .call(selectOptions, numCols, d => d.key, d => d.name);\n  sizeControlBox(sizePresets, 'size');\n  d3.selectAll('.size-update')\n    .on('change', () => {\n      const data = nodeSizeControlInput('size');\n      d3.select('#size-control').datum(data);\n      updateControl(data);\n      updateNodeSize(data);\n    })\n    .dispatch('change');\n}\n\n\nexport function edgeControlBox() {\n  sizeControlBox(edgeWidthPresets, 'edge');\n  d3.select('#edge-visible')\n    .on('change', function() {\n      updateEdgeVisibility(formChecked(this));\n      updateEdgeLabelVisibility(formChecked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.select('#edge-label-visible')\n    .on('change', function() {\n      updateEdgeLabelVisibility(formChecked(this));\n      d3.select(`.edge-update`).dispatch('change');\n    });\n  d3.selectAll('.edge-update')\n    .on('change', () => {\n      const data = edgeControlInput('edge');\n      d3.select('#edge-control').datum(data);\n      updateControl(data);\n      updateEdge(data);\n    })\n    .dispatch('change');\n}\n","\n\nexport function graphNodes(selection, data) {\n  const nodes = selection.selectAll('.node')\n    .data(data, d => d.key);\n  nodes.exit().remove();\n  const entered = nodes.enter().append('g')\n    .attr('class', 'node');\n  entered.append('circle')\n    .attr('class', 'node-symbol');\n  entered.append('g')\n    .attr('class', 'node-struct');\n  entered.append('text')\n    .attr('class', 'node-label');\n  const updated = entered.merge(nodes);\n  updated.select('.node-symbol')\n    .attr('r', 20)\n    .style('fill', '#6c6');\n  updated.select('.node-struct')\n    .attr('visibility', 'hidden')\n    .html(d => d._structure);\n  updated.select('.node-label')\n    .attr('visibility', 'hidden')\n    .attr('x', 0)\n    .attr('y', 20 + 10)\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle');\n}\n\n\nexport function graphEdges(selection, data) {\n  const edges = selection.selectAll('.link')\n    .data(data, d => `${d.source}_${d.target}`);\n  edges.exit().remove();\n  const entered = edges.enter().append('g')\n    .attr('class', 'link');\n  entered.append('line')\n    .attr('class', 'edge-line');\n  entered.append('text')\n    .attr('class', 'edge-label');\n  const updated = entered.merge(edges);\n  updated.select('.edge-line')\n    .style('stroke', '#999')\n    .style('stroke-opacity', 0.6);\n  updated.select('.edge-label')\n    .attr('font-size', 16)\n    .attr('text-anchor', 'middle')\n    .attr('visibility', 'hidden')\n    .text(d => d.weight);\n}\n","\nimport d3 from 'd3';\n\nimport {simulation, tick, end} from './GraphForce.js';\n\nexport const zoom = d3.zoom()\n  .on('zoom', () => {\n    d3.select('#graph-contents').attr('transform', d3.event.transform);\n  });\n\nexport const dragWithForce = d3.drag()\n  .on('start', () => {\n    d3.select('#graph-contents').selectAll('.link')\n      .attr('visibility', 'hidden');\n    if (!d3.event.active) simulation.alphaTarget(0.1).restart();\n  })\n  .on('drag', d => {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  })\n  .on('end', d => {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  });\n\nexport const dragNoForce = d3.drag()\n  .on('drag', function (d) {\n    d3.select(this)\n      .attr('transform', () => `translate(${d3.event.x}, ${d3.event.y})`);\n    d.x = d3.event.x;\n    d.y = d3.event.y;\n    const connected = d3.select('#graph-contents').selectAll('.link')\n      .filter(d => [d.source.index, d.target.index].includes(this.__data__.index));\n    connected.attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n      .attr('visibility', 'visible');\n    connected.select('.edge-line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', d => d.target.x - d.source.x)\n      .attr('y2', d => d.target.y - d.source.y);\n    connected.select('.edge-label')\n      .attr('x', d => (d.target.x - d.source.x) / 2)\n      .attr('y', d => (d.target.y - d.source.y) / 2);\n  })\n  .on('end', () => {\n    end();\n  });\n\n\nexport function stickNodes() {\n  simulation.alpha(0).stop();\n  d3.selectAll('.node').each(d => {\n    d.fx = d.x;\n    d.fy = d.y;\n  });\n  tick();\n  end();\n  d3.select('#stick-nodes').property('checked', true);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'visible');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragNoForce);\n}\n\n\nexport function unstickNodes() {\n  d3.selectAll('.node').each(d => {\n    d.fx = null;\n    d.fy = null;\n  });\n  d3.select('#stick-nodes').property('checked', false);\n  d3.select('#graph-contents').selectAll('.link')\n    .attr('visibility', 'hidden');\n  d3.select('#graph-contents').selectAll('.node')\n    .call(dragWithForce);\n}\n\n\nexport function relax() {\n  unstickNodes();\n  simulation.alpha(0.1).restart();\n}\n\n\nexport function restart() {\n  unstickNodes();\n  simulation.alpha(1).restart();\n}\n\n\nexport function fitToScreen() {\n  d3.select('#graph-field').call(zoom.transform, d3.zoomIdentity);\n  // TODO\n  /*\n  const p = 0.9;  // padding factor\n  const x = extent(selectAll('.node').data(), d => d.x);\n  const y = extent(selectAll('.node').data(), d => d.y);\n  const w = x[1] - x[0];\n  const h = y[1] - y[0];\n  const vb = select('#graph-field').attr('viewBox').split(' ');\n  const xScaleF = vb[2] / w * p;\n  const yScaleF = vb[3] / h * p;\n  const scaleF = Math.max(xScaleF, yScaleF);\n  const center = [(w * (1 - p) / 2 - x[0]) * xScaleF,\n                  (h * (1 - p) / 2 - y[0]) * yScaleF];\n  // Reset zoom point\n  zoom.scale(scaleF);\n  zoom.translate(center);\n  updateViewportTransform(center, scaleF);\n  */\n}\n","\nimport d3 from 'd3';\n\nimport {fetchJSON} from './helper/file.js';\nimport {getGlobalConfig} from './store/StoreConnection.js';\nimport {setForce, tick, end} from './graph/GraphForce.js';\nimport {updateNodeImage} from './graph/GraphControlBox.js';\nimport {graphNodes, graphEdges} from './graph/GraphComponent.js';\nimport {zoom, stickNodes} from './graph/GraphInteraction.js';\n\n\nfunction resume(snapshot) {\n  if (snapshot.hasOwnProperty('fieldTransform')) {\n    const tf = snapshot.fieldTransform;\n    const transform = d3.zoomIdentity.translate(tf.x, tf.y).scale(tf.k);\n    d3.select('#graph-contents').attr('transform', transform);\n    d3.select('#graph-field').call(zoom.transform, transform);\n  }\n  if (snapshot.hasOwnProperty('nodePositions')) {\n    d3.selectAll('.node').each((d, i) => {\n      d.x = snapshot.nodePositions[i].x;\n      d.y = snapshot.nodePositions[i].y;\n    });\n  }\n  updateNodeImage(snapshot);\n}\n\n\nfunction render(g) {\n  g.nodes.records.forEach(e => { delete e._mol; });\n  const edgesToDraw = g.edges.records\n    .filter(e => e.weight >= g.edges.networkThreshold);\n  graphEdges(d3.select('#graph-contents'), edgesToDraw);\n  graphNodes(d3.select('#graph-contents'), g.nodes.records);\n  setForce(g.nodes.records, edgesToDraw, tick, end);\n  resume(g.edges.snapshot);\n  stickNodes();\n  d3.select('#graph-contents').style('opacity', 1e-6)\n    .transition()\n    .duration(1000)\n    .style('opacity', 1);\n}\n\n\nd3.select('#graph-field')\n  .attr('viewBox', `0 0 800 600`)\n  .call(zoom);\n\n\n\nfunction run() {\n  const url = getGlobalConfig('urlQuery').location;\n  return fetchJSON(url).then(render);\n}\nrun();\n","\nimport Dexie from 'Dexie';\n\n// TODO: can indexed records improve query performance ?\n// TODO: remove app table. no longer used\n\nconst schema = {\n  app: 'key',\n  items: 'id, format, responseDate',\n  resources: 'idx, id'\n};\n\nlet idb = new Dexie('Store');\nidb.version(1).stores(schema);\n\n\nfunction getAppSetting(key) {\n  return idb.app.where('key').equals(key).first()\n    .then(res => {\n      if (res === undefined) return undefined;\n      return res.value;\n    });\n}\n\n\nfunction putAppSetting(k, v) {  // returns id in success\n  return idb.app.put({ key: k, value: v });\n}\n\n\nfunction getResources() {\n  return idb.resources.orderBy('idx')\n    .toArray();\n}\n\n\nfunction putResources(data) { // returns last id in success\n  return idb.resources.bulkPut(data);\n}\n\n\nfunction getAllItems() {\n  return idb.items.orderBy('responseDate').reverse()\n    .toArray();\n}\n\n\nfunction getItemsByFormat(format) {\n  return idb.items.where('format').equals(format).reverse()\n    .sortBy('responseDate');\n}\n\n\nfunction getItemById(tableId) {\n  return idb.items.where('id').equals(tableId).first();\n}\n\n\nfunction updateItem(tableId, callback) {  // returns num of updated items\n  return idb.items.where('id').equals(tableId).modify(callback);\n}\n\n\nfunction deleteItem(tableId) { // returns num of deleted items\n  return idb.items.where('id').equals(tableId).delete();\n}\n\n\nfunction putItem(data) { // returns id in success\n  return idb.items.put(data);\n}\n\n\nfunction reset() {\n  // Try this before tackling with local db troubles\n  return idb.delete().then(() => {\n    idb = new Dexie('Store');\n    idb.version(1).stores(schema);\n  });\n}\n\nexport default {\n  getAppSetting, putAppSetting, getResources, putResources,\n  getAllItems, getItemsByFormat, getItemById,\n  updateItem, deleteItem, putItem, reset\n};\n"],"names":["parseJSON","data","compressed","text","pako","inflate","to","JSON","parse","fetchJSON","url","endsWith","fetch","then","res","arrayBuffer","json","getGlobalConfig","key","globalConfig","setForce","nodes","edges","tick","end","simulation","force","links","on","d3","select","selectAll","attr","d","x","y","alpha","isStopped","alphaMin","classed","source","target","scaleFunction","scale","sf","scaleTypes","find","e","name","func","domain","range","length","mid","parseFloat","includes","clamp","unknown","result","undefined","formatNum","value","type","conv","scientific","si","rounded","Number","isNaN","format","updateNodeColor","style","column","updateNodeSize","updateNodeLabel","hasOwnProperty","digit","size","visible","updateNodeStructure","structure","each","i","nds","w","h","updateNodeImage","nodeSize","nodeColor","nodeLabel","nodeContent","graphNodes","selection","exit","remove","entered","enter","append","updated","merge","html","_structure","graphEdges","weight","stickNodes","stop","fx","fy","property","call","dragNoForce","resume","snapshot","tf","fieldTransform","transform","zoomIdentity","translate","k","zoom","nodePositions","render","g","records","forEach","_mol","edgesToDraw","filter","networkThreshold","transition","duration","schema","app","items","resources","version","stores","onLine","server","templates","urlQuery","window","location","search","substring","split","map","forceSimulation","forceLink","id","_index","distance","strength","forceManyBody","distanceMin","distanceMax","forceCollide","radius","forceCenter","fieldWidth","fieldHeight","forceX","forceY","schemeSet1","concat","schemeSet3","schemePastel2","schemeSet2","scaleLinear","scaleLog","scaleQuantize","scaleOrdinal","event","drag","active","alphaTarget","restart","this","connected","index","__data__"],"mappings":"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"}